%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Tuesday, August 17, 2021 12:22:22 PM EDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
2 J
0 j
0.500000 w
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
1.00000 w
2 J
0 j
0.500000 w
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
1.00000 w
2 J
0 j
0 J
1 j
q
q
1.00000 1.00000 0 RG
12.0000 6.04888 375.994 382.951 rc
newpath
13.0000 369.905 m
385.994 98.4882 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
1.00000 1.00000 0 RG
12.0000 6.04888 375.994 382.951 rc
newpath
87.5989 388.000 m
261.471 8.43380 l
262.282 9.36828 l
385.994 279.433 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
1.00000 0 0 RG
12.0000 6.04888 375.994 382.951 rc
newpath
13.0000 369.905 m
261.449 189.115 l
262.332 185.548 l
296.848 9.73724 l
297.260 8.39062 l
361.128 333.716 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
12.0000 6.04888 375.994 382.951 rc
newpath
13.0000 279.433 m
261.428 279.433 l
262.234 275.691 l
302.210 13.8859 l
303.112 8.04888 l
358.641 371.715 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
0 0 1.00000 RG
12.0000 6.04888 375.994 382.951 rc
newpath
13.0000 188.960 m
261.262 369.614 l
262.076 366.594 l
306.847 8.23449 l
306.954 8.65432 l
353.668 382.571 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
0.500000 w
0 J
1 j
newpath
361.128 279.433 m
361.128 281.433 l
S
newpath
336.262 279.433 m
336.262 281.433 l
S
newpath
311.395 279.433 m
311.395 281.433 l
S
newpath
286.529 279.433 m
286.529 281.433 l
S
newpath
236.796 279.433 m
236.796 281.433 l
S
newpath
211.930 279.433 m
211.930 281.433 l
S
newpath
187.064 279.433 m
187.064 281.433 l
S
newpath
162.197 279.433 m
162.197 281.433 l
S
newpath
112.465 279.433 m
112.465 281.433 l
S
newpath
87.5989 279.433 m
87.5989 281.433 l
S
newpath
62.7326 279.433 m
62.7326 281.433 l
S
newpath
37.8663 279.433 m
37.8663 281.433 l
S
newpath
13.0000 279.433 m
385.994 279.433 l
S
Q
0.500000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
254 300 15 17 rc
newpath
260.593 307.375 m
260.833 307.625 261.015 307.880 261.140 308.140  c
261.234 308.307 261.380 308.765 261.578 309.515  c
262.218 308.546 l
262.385 308.317 262.591 308.096 262.835 307.882  c
263.080 307.669 263.296 307.520 263.484 307.437  c
263.599 307.395 263.729 307.375 263.875 307.375  c
264.083 307.375 264.250 307.429 264.375 307.539  c
264.500 307.648 264.562 307.786 264.562 307.953  c
264.562 308.140 264.526 308.265 264.453 308.328  c
264.317 308.453 264.161 308.515 263.984 308.515  c
263.880 308.515 263.770 308.494 263.656 308.453  c
263.427 308.369 263.270 308.328 263.187 308.328  c
263.072 308.328 262.937 308.395 262.781 308.531  c
262.479 308.791 262.114 309.286 261.687 310.015  c
262.296 312.531 l
262.390 312.916 262.468 313.145 262.531 313.218  c
262.593 313.291 262.656 313.328 262.718 313.328  c
262.822 313.328 262.942 313.276 263.078 313.171  c
263.349 312.942 263.578 312.645 263.765 312.281  c
264.015 312.421 l
263.713 312.994 263.322 313.474 262.843 313.859  c
262.583 314.067 262.359 314.171 262.171 314.171  c
261.890 314.171 261.671 314.020 261.515 313.718  c
261.411 313.520 261.197 312.697 260.875 311.250  c
260.114 312.572 259.505 313.427 259.046 313.812  c
258.744 314.052 258.458 314.171 258.187 314.171  c
257.989 314.171 257.807 314.104 257.640 313.968  c
257.526 313.854 257.468 313.708 257.468 313.531  c
257.468 313.375 257.523 313.242 257.632 313.132  c
257.742 313.023 257.875 312.968 258.031 312.968  c
258.187 312.968 258.354 313.046 258.531 313.203  c
258.656 313.317 258.755 313.375 258.828 313.375  c
258.880 313.375 258.953 313.333 259.046 313.250  c
259.276 313.062 259.588 312.661 259.984 312.046  c
260.380 311.432 260.640 310.989 260.765 310.718  c
260.463 309.531 260.296 308.906 260.265 308.843  c
260.161 308.520 260.018 308.294 259.835 308.164  c
259.653 308.033 259.385 307.968 259.031 307.968  c
258.916 307.968 258.786 307.974 258.640 307.984  c
258.640 307.718 l
260.593 307.375 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
13.0000 279.433 m
13.0000 283.433 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 291 7 13 rc
newpath
16.7968 298.437 m
8.20312 298.437 l
8.20312 297.765 l
16.7968 297.765 l
16.7968 298.437 l
h
f
Q
newpath
15.4687 297.750 m
15.4687 296.770 15.6171 295.924 15.9140 295.210  c
16.2109 294.497 16.6041 293.968 17.0937 293.625  c
17.4791 293.354 17.8750 293.218 18.2812 293.218  c
18.9375 293.218 19.5260 293.552 20.0468 294.218  c
20.7031 295.052 21.0312 296.182 21.0312 297.609  c
21.0312 298.609 20.8880 299.458 20.6015 300.156  c
20.3151 300.854 19.9479 301.362 19.5000 301.679  c
19.0520 301.997 18.6250 302.156 18.2187 302.156  c
17.3958 302.156 16.7083 301.671 16.1562 300.703  c
15.6979 299.880 15.4687 298.895 15.4687 297.750  c
h
16.7187 297.906 m
16.7187 299.093 16.8645 300.062 17.1562 300.812  c
17.3958 301.437 17.7552 301.750 18.2343 301.750  c
18.4635 301.750 18.7005 301.648 18.9453 301.445  c
19.1901 301.242 19.3750 300.895 19.5000 300.406  c
19.6979 299.687 19.7968 298.661 19.7968 297.328  c
19.7968 296.349 19.6927 295.531 19.4843 294.875  c
19.3385 294.385 19.1406 294.041 18.8906 293.843  c
18.7239 293.708 18.5156 293.640 18.2656 293.640  c
17.9843 293.640 17.7291 293.765 17.5000 294.015  c
17.1979 294.369 16.9921 294.924 16.8828 295.679  c
16.7734 296.434 16.7187 297.177 16.7187 297.906  c
h
23.1250 300.765 m
23.3229 300.765 23.4895 300.835 23.6250 300.976  c
23.7604 301.117 23.8281 301.281 23.8281 301.468  c
23.8281 301.666 23.7604 301.833 23.6250 301.968  c
23.4895 302.104 23.3229 302.171 23.1250 302.171  c
22.9270 302.171 22.7604 302.104 22.6250 301.968  c
22.4895 301.833 22.4218 301.666 22.4218 301.468  c
22.4218 301.270 22.4895 301.104 22.6250 300.968  c
22.7604 300.833 22.9270 300.765 23.1250 300.765  c
h
30.3906 293.390 m
29.8906 294.468 l
27.3125 294.468 l
26.7500 295.625 l
27.8645 295.791 28.7500 296.208 29.4062 296.875  c
29.9687 297.447 30.2500 298.125 30.2500 298.906  c
30.2500 299.364 30.1588 299.786 29.9765 300.171  c
29.7942 300.557 29.5625 300.885 29.2812 301.156  c
29.0000 301.427 28.6875 301.640 28.3437 301.796  c
27.8645 302.036 27.3645 302.156 26.8437 302.156  c
26.3333 302.156 25.9609 302.067 25.7265 301.890  c
25.4921 301.713 25.3750 301.520 25.3750 301.312  c
25.3750 301.187 25.4244 301.080 25.5234 300.992  c
25.6224 300.903 25.7447 300.859 25.8906 300.859  c
25.9947 300.859 26.0885 300.875 26.1718 300.906  c
26.2552 300.937 26.3958 301.026 26.5937 301.171  c
26.9166 301.390 27.2395 301.500 27.5625 301.500  c
28.0625 301.500 28.4974 301.312 28.8671 300.937  c
29.2369 300.562 29.4218 300.104 29.4218 299.562  c
29.4218 299.041 29.2552 298.557 28.9218 298.109  c
28.5885 297.661 28.1302 297.312 27.5468 297.062  c
27.0781 296.875 26.4479 296.765 25.6562 296.734  c
27.3125 293.390 l
30.3906 293.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
137.331 279.433 m
137.331 283.433 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
134.468 295.750 m
134.468 294.770 134.617 293.924 134.914 293.210  c
135.210 292.497 135.604 291.968 136.093 291.625  c
136.479 291.354 136.875 291.218 137.281 291.218  c
137.937 291.218 138.526 291.552 139.046 292.218  c
139.703 293.052 140.031 294.182 140.031 295.609  c
140.031 296.609 139.888 297.458 139.601 298.156  c
139.315 298.854 138.947 299.362 138.500 299.679  c
138.052 299.997 137.625 300.156 137.218 300.156  c
136.395 300.156 135.708 299.671 135.156 298.703  c
134.697 297.880 134.468 296.895 134.468 295.750  c
h
135.718 295.906 m
135.718 297.093 135.864 298.062 136.156 298.812  c
136.395 299.437 136.755 299.750 137.234 299.750  c
137.463 299.750 137.700 299.648 137.945 299.445  c
138.190 299.242 138.375 298.895 138.500 298.406  c
138.697 297.687 138.796 296.661 138.796 295.328  c
138.796 294.349 138.692 293.531 138.484 292.875  c
138.338 292.385 138.140 292.041 137.890 291.843  c
137.724 291.708 137.515 291.640 137.265 291.640  c
136.984 291.640 136.729 291.765 136.500 292.015  c
136.197 292.369 135.992 292.924 135.882 293.679  c
135.773 294.434 135.718 295.177 135.718 295.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
261.663 279.433 m
261.663 283.433 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
259.468 297.750 m
259.468 296.770 259.617 295.924 259.914 295.210  c
260.210 294.497 260.604 293.968 261.093 293.625  c
261.479 293.354 261.875 293.218 262.281 293.218  c
262.937 293.218 263.526 293.552 264.046 294.218  c
264.703 295.052 265.031 296.182 265.031 297.609  c
265.031 298.609 264.888 299.458 264.601 300.156  c
264.315 300.854 263.947 301.362 263.500 301.679  c
263.052 301.997 262.625 302.156 262.218 302.156  c
261.395 302.156 260.708 301.671 260.156 300.703  c
259.697 299.880 259.468 298.895 259.468 297.750  c
h
260.718 297.906 m
260.718 299.093 260.864 300.062 261.156 300.812  c
261.395 301.437 261.755 301.750 262.234 301.750  c
262.463 301.750 262.700 301.648 262.945 301.445  c
263.190 301.242 263.375 300.895 263.500 300.406  c
263.697 299.687 263.796 298.661 263.796 297.328  c
263.796 296.349 263.692 295.531 263.484 294.875  c
263.338 294.385 263.140 294.041 262.890 293.843  c
262.724 293.708 262.515 293.640 262.265 293.640  c
261.984 293.640 261.729 293.765 261.500 294.015  c
261.197 294.369 260.992 294.924 260.882 295.679  c
260.773 296.434 260.718 297.177 260.718 297.906  c
h
267.125 300.765 m
267.322 300.765 267.489 300.835 267.625 300.976  c
267.760 301.117 267.828 301.281 267.828 301.468  c
267.828 301.666 267.760 301.833 267.625 301.968  c
267.489 302.104 267.322 302.171 267.125 302.171  c
266.927 302.171 266.760 302.104 266.625 301.968  c
266.489 301.833 266.421 301.666 266.421 301.468  c
266.421 301.270 266.489 301.104 266.625 300.968  c
266.760 300.833 266.927 300.765 267.125 300.765  c
h
274.390 293.390 m
273.890 294.468 l
271.312 294.468 l
270.750 295.625 l
271.864 295.791 272.750 296.208 273.406 296.875  c
273.968 297.447 274.250 298.125 274.250 298.906  c
274.250 299.364 274.158 299.786 273.976 300.171  c
273.794 300.557 273.562 300.885 273.281 301.156  c
273.000 301.427 272.687 301.640 272.343 301.796  c
271.864 302.036 271.364 302.156 270.843 302.156  c
270.333 302.156 269.960 302.067 269.726 301.890  c
269.492 301.713 269.375 301.520 269.375 301.312  c
269.375 301.187 269.424 301.080 269.523 300.992  c
269.622 300.903 269.744 300.859 269.890 300.859  c
269.994 300.859 270.088 300.875 270.171 300.906  c
270.255 300.937 270.395 301.026 270.593 301.171  c
270.916 301.390 271.239 301.500 271.562 301.500  c
272.062 301.500 272.497 301.312 272.867 300.937  c
273.237 300.562 273.421 300.104 273.421 299.562  c
273.421 299.041 273.255 298.557 272.921 298.109  c
272.588 297.661 272.130 297.312 271.546 297.062  c
271.078 296.875 270.447 296.765 269.656 296.734  c
271.312 293.390 l
274.390 293.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
385.994 279.433 m
385.994 283.433 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
388.531 294.234 m
390.625 293.218 l
390.828 293.218 l
390.828 300.484 l
390.828 300.963 390.849 301.263 390.890 301.382  c
390.932 301.502 391.015 301.593 391.140 301.656  c
391.265 301.718 391.520 301.755 391.906 301.765  c
391.906 302.000 l
388.671 302.000 l
388.671 301.765 l
389.078 301.755 389.341 301.718 389.460 301.656  c
389.580 301.593 389.664 301.510 389.710 301.406  c
389.757 301.302 389.781 300.994 389.781 300.484  c
389.781 295.843 l
389.781 295.208 389.760 294.802 389.718 294.625  c
389.687 294.489 389.632 294.390 389.554 294.328  c
389.476 294.265 389.380 294.234 389.265 294.234  c
389.109 294.234 388.895 294.302 388.625 294.437  c
388.531 294.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
1.00000 w
2 J
0 j
q
0.500000 w
0 J
1 j
newpath
137.331 26.1102 m
135.331 26.1102 l
S
newpath
137.331 44.2047 m
135.331 44.2047 l
S
newpath
137.331 62.2992 m
135.331 62.2992 l
S
newpath
137.331 80.3937 m
135.331 80.3937 l
S
newpath
137.331 116.582 m
135.331 116.582 l
S
newpath
137.331 134.677 m
135.331 134.677 l
S
newpath
137.331 152.771 m
135.331 152.771 l
S
newpath
137.331 170.866 m
135.331 170.866 l
S
newpath
137.331 207.055 m
135.331 207.055 l
S
newpath
137.331 225.149 m
135.331 225.149 l
S
newpath
137.331 261.338 m
135.331 261.338 l
S
newpath
137.331 243.244 m
135.331 243.244 l
S
newpath
137.331 297.527 m
135.331 297.527 l
S
newpath
137.331 315.622 m
135.331 315.622 l
S
newpath
137.331 333.716 m
135.331 333.716 l
S
newpath
137.331 351.811 m
135.331 351.811 l
S
newpath
137.331 388.000 m
137.331 8.04888 l
S
Q
0.500000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
94 135 8 17 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
137.331 369.905 m
133.331 369.905 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
111 368 7 13 rc
newpath
121.796 375.437 m
113.203 375.437 l
113.203 374.765 l
121.796 374.765 l
121.796 375.437 l
h
f
Q
newpath
120.468 374.750 m
120.468 373.770 120.617 372.924 120.914 372.210  c
121.210 371.497 121.604 370.968 122.093 370.625  c
122.479 370.354 122.875 370.218 123.281 370.218  c
123.937 370.218 124.526 370.552 125.046 371.218  c
125.703 372.052 126.031 373.182 126.031 374.609  c
126.031 375.609 125.888 376.458 125.601 377.156  c
125.315 377.854 124.947 378.362 124.500 378.679  c
124.052 378.997 123.625 379.156 123.218 379.156  c
122.395 379.156 121.708 378.671 121.156 377.703  c
120.697 376.880 120.468 375.895 120.468 374.750  c
h
121.718 374.906 m
121.718 376.093 121.864 377.062 122.156 377.812  c
122.395 378.437 122.755 378.750 123.234 378.750  c
123.463 378.750 123.700 378.648 123.945 378.445  c
124.190 378.242 124.375 377.895 124.500 377.406  c
124.697 376.687 124.796 375.661 124.796 374.328  c
124.796 373.349 124.692 372.531 124.484 371.875  c
124.338 371.385 124.140 371.041 123.890 370.843  c
123.724 370.708 123.515 370.640 123.265 370.640  c
122.984 370.640 122.729 370.765 122.500 371.015  c
122.197 371.369 121.992 371.924 121.882 372.679  c
121.773 373.434 121.718 374.177 121.718 374.906  c
h
128.125 377.765 m
128.322 377.765 128.489 377.835 128.625 377.976  c
128.760 378.117 128.828 378.281 128.828 378.468  c
128.828 378.666 128.760 378.833 128.625 378.968  c
128.489 379.104 128.322 379.171 128.125 379.171  c
127.927 379.171 127.760 379.104 127.625 378.968  c
127.489 378.833 127.421 378.666 127.421 378.468  c
127.421 378.270 127.489 378.104 127.625 377.968  c
127.760 377.833 127.927 377.765 128.125 377.765  c
h
135.390 370.390 m
134.890 371.468 l
132.312 371.468 l
131.750 372.625 l
132.864 372.791 133.750 373.208 134.406 373.875  c
134.968 374.447 135.250 375.125 135.250 375.906  c
135.250 376.364 135.158 376.786 134.976 377.171  c
134.794 377.557 134.562 377.885 134.281 378.156  c
134.000 378.427 133.687 378.640 133.343 378.796  c
132.864 379.036 132.364 379.156 131.843 379.156  c
131.333 379.156 130.960 379.067 130.726 378.890  c
130.492 378.713 130.375 378.520 130.375 378.312  c
130.375 378.187 130.424 378.080 130.523 377.992  c
130.622 377.903 130.744 377.859 130.890 377.859  c
130.994 377.859 131.088 377.875 131.171 377.906  c
131.255 377.937 131.395 378.026 131.593 378.171  c
131.916 378.390 132.239 378.500 132.562 378.500  c
133.062 378.500 133.497 378.312 133.867 377.937  c
134.237 377.562 134.421 377.104 134.421 376.562  c
134.421 376.041 134.255 375.557 133.921 375.109  c
133.588 374.661 133.130 374.312 132.546 374.062  c
132.078 373.875 131.447 373.765 130.656 373.734  c
132.312 370.390 l
135.390 370.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
137.331 279.433 m
133.331 279.433 l
S
Q
q
newpath
137.331 188.960 m
133.331 188.960 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
120.468 193.750 m
120.468 192.770 120.617 191.924 120.914 191.210  c
121.210 190.497 121.604 189.968 122.093 189.625  c
122.479 189.354 122.875 189.218 123.281 189.218  c
123.937 189.218 124.526 189.552 125.046 190.218  c
125.703 191.052 126.031 192.182 126.031 193.609  c
126.031 194.609 125.888 195.458 125.601 196.156  c
125.315 196.854 124.947 197.362 124.500 197.679  c
124.052 197.997 123.625 198.156 123.218 198.156  c
122.395 198.156 121.708 197.671 121.156 196.703  c
120.697 195.880 120.468 194.895 120.468 193.750  c
h
121.718 193.906 m
121.718 195.093 121.864 196.062 122.156 196.812  c
122.395 197.437 122.755 197.750 123.234 197.750  c
123.463 197.750 123.700 197.648 123.945 197.445  c
124.190 197.242 124.375 196.895 124.500 196.406  c
124.697 195.687 124.796 194.661 124.796 193.328  c
124.796 192.349 124.692 191.531 124.484 190.875  c
124.338 190.385 124.140 190.041 123.890 189.843  c
123.724 189.708 123.515 189.640 123.265 189.640  c
122.984 189.640 122.729 189.765 122.500 190.015  c
122.197 190.369 121.992 190.924 121.882 191.679  c
121.773 192.434 121.718 193.177 121.718 193.906  c
h
128.125 196.765 m
128.322 196.765 128.489 196.835 128.625 196.976  c
128.760 197.117 128.828 197.281 128.828 197.468  c
128.828 197.666 128.760 197.833 128.625 197.968  c
128.489 198.104 128.322 198.171 128.125 198.171  c
127.927 198.171 127.760 198.104 127.625 197.968  c
127.489 197.833 127.421 197.666 127.421 197.468  c
127.421 197.270 127.489 197.104 127.625 196.968  c
127.760 196.833 127.927 196.765 128.125 196.765  c
h
135.390 189.390 m
134.890 190.468 l
132.312 190.468 l
131.750 191.625 l
132.864 191.791 133.750 192.208 134.406 192.875  c
134.968 193.447 135.250 194.125 135.250 194.906  c
135.250 195.364 135.158 195.786 134.976 196.171  c
134.794 196.557 134.562 196.885 134.281 197.156  c
134.000 197.427 133.687 197.640 133.343 197.796  c
132.864 198.036 132.364 198.156 131.843 198.156  c
131.333 198.156 130.960 198.067 130.726 197.890  c
130.492 197.713 130.375 197.520 130.375 197.312  c
130.375 197.187 130.424 197.080 130.523 196.992  c
130.622 196.903 130.744 196.859 130.890 196.859  c
130.994 196.859 131.088 196.875 131.171 196.906  c
131.255 196.937 131.395 197.026 131.593 197.171  c
131.916 197.390 132.239 197.500 132.562 197.500  c
133.062 197.500 133.497 197.312 133.867 196.937  c
134.237 196.562 134.421 196.104 134.421 195.562  c
134.421 195.041 134.255 194.557 133.921 194.109  c
133.588 193.661 133.130 193.312 132.546 193.062  c
132.078 192.875 131.447 192.765 130.656 192.734  c
132.312 189.390 l
135.390 189.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
137.331 98.4882 m
133.331 98.4882 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
130.531 100.234 m
132.625 99.2187 l
132.828 99.2187 l
132.828 106.484 l
132.828 106.963 132.849 107.263 132.890 107.382  c
132.932 107.502 133.015 107.593 133.140 107.656  c
133.265 107.718 133.520 107.755 133.906 107.765  c
133.906 108.000 l
130.671 108.000 l
130.671 107.765 l
131.078 107.755 131.341 107.718 131.460 107.656  c
131.580 107.593 131.664 107.510 131.710 107.406  c
131.757 107.302 131.781 106.994 131.781 106.484  c
131.781 101.843 l
131.781 101.208 131.760 100.802 131.718 100.625  c
131.687 100.489 131.632 100.390 131.554 100.328  c
131.476 100.265 131.380 100.234 131.265 100.234  c
131.109 100.234 130.895 100.302 130.625 100.437  c
130.531 100.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
137.331 8.01577 m
133.331 8.01577 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
121.531 10.2343 m
123.625 9.21875 l
123.828 9.21875 l
123.828 16.4843 l
123.828 16.9635 123.849 17.2630 123.890 17.3828  c
123.932 17.5026 124.015 17.5937 124.140 17.6562  c
124.265 17.7187 124.520 17.7552 124.906 17.7656  c
124.906 18.0000 l
121.671 18.0000 l
121.671 17.7656 l
122.078 17.7552 122.341 17.7187 122.460 17.6562  c
122.580 17.5937 122.664 17.5104 122.710 17.4062  c
122.757 17.3020 122.781 16.9947 122.781 16.4843  c
122.781 11.8437 l
122.781 11.2083 122.760 10.8020 122.718 10.6250  c
122.687 10.4895 122.632 10.3906 122.554 10.3281  c
122.476 10.2656 122.380 10.2343 122.265 10.2343  c
122.109 10.2343 121.895 10.3020 121.625 10.4375  c
121.531 10.2343 l
h
128.125 16.7656 m
128.322 16.7656 128.489 16.8359 128.625 16.9765  c
128.760 17.1171 128.828 17.2812 128.828 17.4687  c
128.828 17.6666 128.760 17.8333 128.625 17.9687  c
128.489 18.1041 128.322 18.1718 128.125 18.1718  c
127.927 18.1718 127.760 18.1041 127.625 17.9687  c
127.489 17.8333 127.421 17.6666 127.421 17.4687  c
127.421 17.2708 127.489 17.1041 127.625 16.9687  c
127.760 16.8333 127.927 16.7656 128.125 16.7656  c
h
135.390 9.39062 m
134.890 10.4687 l
132.312 10.4687 l
131.750 11.6250 l
132.864 11.7916 133.750 12.2083 134.406 12.8750  c
134.968 13.4479 135.250 14.1250 135.250 14.9062  c
135.250 15.3645 135.158 15.7864 134.976 16.1718  c
134.794 16.5572 134.562 16.8854 134.281 17.1562  c
134.000 17.4270 133.687 17.6406 133.343 17.7968  c
132.864 18.0364 132.364 18.1562 131.843 18.1562  c
131.333 18.1562 130.960 18.0677 130.726 17.8906  c
130.492 17.7135 130.375 17.5208 130.375 17.3125  c
130.375 17.1875 130.424 17.0807 130.523 16.9921  c
130.622 16.9036 130.744 16.8593 130.890 16.8593  c
130.994 16.8593 131.088 16.8750 131.171 16.9062  c
131.255 16.9375 131.395 17.0260 131.593 17.1718  c
131.916 17.3906 132.239 17.5000 132.562 17.5000  c
133.062 17.5000 133.497 17.3125 133.867 16.9375  c
134.237 16.5625 134.421 16.1041 134.421 15.5625  c
134.421 15.0416 134.255 14.5572 133.921 14.1093  c
133.588 13.6614 133.130 13.3125 132.546 13.0625  c
132.078 12.8750 131.447 12.7656 130.656 12.7343  c
132.312 9.39062 l
135.390 9.39062 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
1.00000 w
2 J
0 j
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

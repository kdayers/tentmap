%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Wednesday, October 20, 2021 4:46:39 PM EDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
2 J
0 j
0.500000 w
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
1.00000 w
2 J
0 j
0.500000 w
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
1.00000 w
2 J
0 j
0 J
1 j
q
q
0.309804 0.309804 0.443137 RG
34.0000 6.01719 349.483 344.982 rc
newpath
35.0000 350.000 m
381.483 8.01718 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
0.309804 0.309804 0.443137 RG
34.0000 6.01719 349.483 344.982 rc
newpath
35.0000 350.000 m
150.231 8.79595 l
150.496 8.02319 l
265.988 350.000 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
3.00000 w
1.00000 0 0 RG
32.0000 4.01719 353.483 348.982 rc
newpath
35.0000 350.000 m
104.270 8.14480 l
104.324 8.15686 l
150.485 235.960 l
150.537 235.963 l
381.483 8.01718 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
3.00000 w
32.0000 4.01719 353.483 348.982 rc
newpath
35.0000 350.000 m
111.957 8.18991 l
112.009 8.07428 l
150.485 178.967 l
150.537 179.008 l
381.483 179.008 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
3.00000 w
0 0 1.00000 RG
32.0000 4.01719 353.483 348.982 rc
newpath
35.0000 350.000 m
121.411 8.84362 l
121.642 8.10076 l
149.965 119.921 l
151.629 123.131 l
381.483 350.000 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
0.500000 w
0 J
1 j
newpath
358.384 350.000 m
358.384 352.000 l
S
newpath
335.285 350.000 m
335.285 352.000 l
S
newpath
312.186 350.000 m
312.186 352.000 l
S
newpath
289.087 350.000 m
289.087 352.000 l
S
newpath
219.791 350.000 m
219.791 352.000 l
S
newpath
196.692 350.000 m
196.692 352.000 l
S
newpath
242.889 350.000 m
242.889 352.000 l
S
newpath
173.593 350.000 m
173.593 352.000 l
S
newpath
127.395 350.000 m
127.395 352.000 l
S
newpath
104.296 350.000 m
104.296 352.000 l
S
newpath
81.1977 350.000 m
81.1977 352.000 l
S
newpath
58.0988 350.000 m
58.0988 352.000 l
S
newpath
35.0000 350.000 m
381.483 350.000 l
S
Q
0.500000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
200 371 16 18 rc
newpath
206.781 378.921 m
207.031 379.192 207.224 379.463 207.359 379.734  c
207.453 379.921 207.604 380.416 207.812 381.218  c
208.500 380.187 l
208.687 379.937 208.911 379.697 209.171 379.468  c
209.432 379.239 209.661 379.083 209.859 379.000  c
209.984 378.947 210.119 378.921 210.265 378.921  c
210.494 378.921 210.674 378.981 210.804 379.101  c
210.934 379.221 211.000 379.369 211.000 379.546  c
211.000 379.744 210.963 379.880 210.890 379.953  c
210.744 380.078 210.578 380.140 210.390 380.140  c
210.276 380.140 210.156 380.119 210.031 380.078  c
209.791 379.994 209.630 379.953 209.546 379.953  c
209.421 379.953 209.270 380.026 209.093 380.171  c
208.770 380.442 208.385 380.963 207.937 381.734  c
208.578 384.421 l
208.682 384.838 208.768 385.085 208.835 385.164  c
208.903 385.242 208.968 385.281 209.031 385.281  c
209.145 385.281 209.276 385.224 209.421 385.109  c
209.703 384.869 209.947 384.557 210.156 384.171  c
210.421 384.312 l
210.099 384.927 209.682 385.437 209.171 385.843  c
208.890 386.072 208.651 386.187 208.453 386.187  c
208.161 386.187 207.927 386.020 207.750 385.687  c
207.645 385.489 207.421 384.614 207.078 383.062  c
206.265 384.479 205.614 385.390 205.125 385.796  c
204.802 386.057 204.494 386.187 204.203 386.187  c
203.984 386.187 203.791 386.109 203.625 385.953  c
203.500 385.838 203.437 385.687 203.437 385.500  c
203.437 385.322 203.494 385.177 203.609 385.062  c
203.724 384.947 203.864 384.890 204.031 384.890  c
204.197 384.890 204.375 384.974 204.562 385.140  c
204.697 385.265 204.802 385.328 204.875 385.328  c
204.937 385.328 205.020 385.286 205.125 385.203  c
205.364 385.005 205.695 384.578 206.117 383.921  c
206.539 383.265 206.817 382.791 206.953 382.500  c
206.630 381.229 206.453 380.557 206.421 380.484  c
206.307 380.151 206.153 379.914 205.960 379.773  c
205.768 379.632 205.484 379.562 205.109 379.562  c
204.984 379.562 204.843 379.567 204.687 379.578  c
204.687 379.296 l
206.781 378.921 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
35.0000 350.000 m
35.0000 354.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
37.4687 368.750 m
37.4687 367.770 37.6171 366.924 37.9140 366.210  c
38.2109 365.497 38.6041 364.968 39.0937 364.625  c
39.4791 364.354 39.8750 364.218 40.2812 364.218  c
40.9375 364.218 41.5260 364.552 42.0468 365.218  c
42.7031 366.052 43.0312 367.182 43.0312 368.609  c
43.0312 369.609 42.8880 370.458 42.6015 371.156  c
42.3151 371.854 41.9479 372.362 41.5000 372.679  c
41.0520 372.997 40.6250 373.156 40.2187 373.156  c
39.3958 373.156 38.7083 372.671 38.1562 371.703  c
37.6979 370.880 37.4687 369.895 37.4687 368.750  c
h
38.7187 368.906 m
38.7187 370.093 38.8645 371.062 39.1562 371.812  c
39.3958 372.437 39.7552 372.750 40.2343 372.750  c
40.4635 372.750 40.7005 372.648 40.9453 372.445  c
41.1901 372.242 41.3750 371.895 41.5000 371.406  c
41.6979 370.687 41.7968 369.661 41.7968 368.328  c
41.7968 367.349 41.6927 366.531 41.4843 365.875  c
41.3385 365.385 41.1406 365.041 40.8906 364.843  c
40.7239 364.708 40.5156 364.640 40.2656 364.640  c
39.9843 364.640 39.7291 364.765 39.5000 365.015  c
39.1979 365.369 38.9921 365.924 38.8828 366.679  c
38.7734 367.434 38.7187 368.177 38.7187 368.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
150.494 350.000 m
150.494 354.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
148.468 368.750 m
148.468 367.770 148.617 366.924 148.914 366.210  c
149.210 365.497 149.604 364.968 150.093 364.625  c
150.479 364.354 150.875 364.218 151.281 364.218  c
151.937 364.218 152.526 364.552 153.046 365.218  c
153.703 366.052 154.031 367.182 154.031 368.609  c
154.031 369.609 153.888 370.458 153.601 371.156  c
153.315 371.854 152.947 372.362 152.500 372.679  c
152.052 372.997 151.625 373.156 151.218 373.156  c
150.395 373.156 149.708 372.671 149.156 371.703  c
148.697 370.880 148.468 369.895 148.468 368.750  c
h
149.718 368.906 m
149.718 370.093 149.864 371.062 150.156 371.812  c
150.395 372.437 150.755 372.750 151.234 372.750  c
151.463 372.750 151.700 372.648 151.945 372.445  c
152.190 372.242 152.375 371.895 152.500 371.406  c
152.697 370.687 152.796 369.661 152.796 368.328  c
152.796 367.349 152.692 366.531 152.484 365.875  c
152.338 365.385 152.140 365.041 151.890 364.843  c
151.724 364.708 151.515 364.640 151.265 364.640  c
150.984 364.640 150.729 364.765 150.500 365.015  c
150.197 365.369 149.992 365.924 149.882 366.679  c
149.773 367.434 149.718 368.177 149.718 368.906  c
h
156.125 371.765 m
156.322 371.765 156.489 371.835 156.625 371.976  c
156.760 372.117 156.828 372.281 156.828 372.468  c
156.828 372.666 156.760 372.833 156.625 372.968  c
156.489 373.104 156.322 373.171 156.125 373.171  c
155.927 373.171 155.760 373.104 155.625 372.968  c
155.489 372.833 155.421 372.666 155.421 372.468  c
155.421 372.270 155.489 372.104 155.625 371.968  c
155.760 371.833 155.927 371.765 156.125 371.765  c
h
163.390 364.390 m
162.890 365.468 l
160.312 365.468 l
159.750 366.625 l
160.864 366.791 161.750 367.208 162.406 367.875  c
162.968 368.447 163.250 369.125 163.250 369.906  c
163.250 370.364 163.158 370.786 162.976 371.171  c
162.794 371.557 162.562 371.885 162.281 372.156  c
162.000 372.427 161.687 372.640 161.343 372.796  c
160.864 373.036 160.364 373.156 159.843 373.156  c
159.333 373.156 158.960 373.067 158.726 372.890  c
158.492 372.713 158.375 372.520 158.375 372.312  c
158.375 372.187 158.424 372.080 158.523 371.992  c
158.622 371.903 158.744 371.859 158.890 371.859  c
158.994 371.859 159.088 371.875 159.171 371.906  c
159.255 371.937 159.395 372.026 159.593 372.171  c
159.916 372.390 160.239 372.500 160.562 372.500  c
161.062 372.500 161.497 372.312 161.867 371.937  c
162.237 371.562 162.421 371.104 162.421 370.562  c
162.421 370.041 162.255 369.557 161.921 369.109  c
161.588 368.661 161.130 368.312 160.546 368.062  c
160.078 367.875 159.447 367.765 158.656 367.734  c
160.312 364.390 l
163.390 364.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
265.988 350.000 m
265.988 354.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
268.531 365.234 m
270.625 364.218 l
270.828 364.218 l
270.828 371.484 l
270.828 371.963 270.849 372.263 270.890 372.382  c
270.932 372.502 271.015 372.593 271.140 372.656  c
271.265 372.718 271.520 372.755 271.906 372.765  c
271.906 373.000 l
268.671 373.000 l
268.671 372.765 l
269.078 372.755 269.341 372.718 269.460 372.656  c
269.580 372.593 269.664 372.510 269.710 372.406  c
269.757 372.302 269.781 371.994 269.781 371.484  c
269.781 366.843 l
269.781 366.208 269.760 365.802 269.718 365.625  c
269.687 365.489 269.632 365.390 269.554 365.328  c
269.476 365.265 269.380 365.234 269.265 365.234  c
269.109 365.234 268.895 365.302 268.625 365.437  c
268.531 365.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
381.483 350.000 m
381.483 354.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
380.531 365.234 m
382.625 364.218 l
382.828 364.218 l
382.828 371.484 l
382.828 371.963 382.849 372.263 382.890 372.382  c
382.932 372.502 383.015 372.593 383.140 372.656  c
383.265 372.718 383.520 372.755 383.906 372.765  c
383.906 373.000 l
380.671 373.000 l
380.671 372.765 l
381.078 372.755 381.341 372.718 381.460 372.656  c
381.580 372.593 381.664 372.510 381.710 372.406  c
381.757 372.302 381.781 371.994 381.781 371.484  c
381.781 366.843 l
381.781 366.208 381.760 365.802 381.718 365.625  c
381.687 365.489 381.632 365.390 381.554 365.328  c
381.476 365.265 381.380 365.234 381.265 365.234  c
381.109 365.234 380.895 365.302 380.625 365.437  c
380.531 365.234 l
h
387.125 371.765 m
387.322 371.765 387.489 371.835 387.625 371.976  c
387.760 372.117 387.828 372.281 387.828 372.468  c
387.828 372.666 387.760 372.833 387.625 372.968  c
387.489 373.104 387.322 373.171 387.125 373.171  c
386.927 373.171 386.760 373.104 386.625 372.968  c
386.489 372.833 386.421 372.666 386.421 372.468  c
386.421 372.270 386.489 372.104 386.625 371.968  c
386.760 371.833 386.927 371.765 387.125 371.765  c
h
394.390 364.390 m
393.890 365.468 l
391.312 365.468 l
390.750 366.625 l
391.864 366.791 392.750 367.208 393.406 367.875  c
393.968 368.447 394.250 369.125 394.250 369.906  c
394.250 370.364 394.158 370.786 393.976 371.171  c
393.794 371.557 393.562 371.885 393.281 372.156  c
393.000 372.427 392.687 372.640 392.343 372.796  c
391.864 373.036 391.364 373.156 390.843 373.156  c
390.333 373.156 389.960 373.067 389.726 372.890  c
389.492 372.713 389.375 372.520 389.375 372.312  c
389.375 372.187 389.424 372.080 389.523 371.992  c
389.622 371.903 389.744 371.859 389.890 371.859  c
389.994 371.859 390.088 371.875 390.171 371.906  c
390.255 371.937 390.395 372.026 390.593 372.171  c
390.916 372.390 391.239 372.500 391.562 372.500  c
392.062 372.500 392.497 372.312 392.867 371.937  c
393.237 371.562 393.421 371.104 393.421 370.562  c
393.421 370.041 393.255 369.557 392.921 369.109  c
392.588 368.661 392.130 368.312 391.546 368.062  c
391.078 367.875 390.447 367.765 389.656 367.734  c
391.312 364.390 l
394.390 364.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
1.00000 w
2 J
0 j
q
0.500000 w
0 J
1 j
newpath
35.0000 30.8160 m
33.0000 30.8160 l
S
newpath
35.0000 53.6149 m
33.0000 53.6149 l
S
newpath
35.0000 76.4137 m
33.0000 76.4137 l
S
newpath
35.0000 99.2126 m
33.0000 99.2126 l
S
newpath
35.0000 144.810 m
33.0000 144.810 l
S
newpath
35.0000 167.609 m
33.0000 167.609 l
S
newpath
35.0000 190.408 m
33.0000 190.408 l
S
newpath
35.0000 213.206 m
33.0000 213.206 l
S
newpath
35.0000 258.804 m
33.0000 258.804 l
S
newpath
35.0000 281.603 m
33.0000 281.603 l
S
newpath
35.0000 304.402 m
33.0000 304.402 l
S
newpath
35.0000 327.201 m
33.0000 327.201 l
S
newpath
35.0000 350.000 m
35.0000 8.01718 l
S
Q
0.500000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
1 170 8 18 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
35.0000 350.000 m
31.0000 350.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
27.4687 355.750 m
27.4687 354.770 27.6171 353.924 27.9140 353.210  c
28.2109 352.497 28.6041 351.968 29.0937 351.625  c
29.4791 351.354 29.8750 351.218 30.2812 351.218  c
30.9375 351.218 31.5260 351.552 32.0468 352.218  c
32.7031 353.052 33.0312 354.182 33.0312 355.609  c
33.0312 356.609 32.8880 357.458 32.6015 358.156  c
32.3151 358.854 31.9479 359.362 31.5000 359.679  c
31.0520 359.997 30.6250 360.156 30.2187 360.156  c
29.3958 360.156 28.7083 359.671 28.1562 358.703  c
27.6979 357.880 27.4687 356.895 27.4687 355.750  c
h
28.7187 355.906 m
28.7187 357.093 28.8645 358.062 29.1562 358.812  c
29.3958 359.437 29.7552 359.750 30.2343 359.750  c
30.4635 359.750 30.7005 359.648 30.9453 359.445  c
31.1901 359.242 31.3750 358.895 31.5000 358.406  c
31.6979 357.687 31.7968 356.661 31.7968 355.328  c
31.7968 354.349 31.6927 353.531 31.4843 352.875  c
31.3385 352.385 31.1406 352.041 30.8906 351.843  c
30.7239 351.708 30.5156 351.640 30.2656 351.640  c
29.9843 351.640 29.7291 351.765 29.5000 352.015  c
29.1979 352.369 28.9921 352.924 28.8828 353.679  c
28.7734 354.434 28.7187 355.177 28.7187 355.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
35.0000 236.005 m
31.0000 236.005 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
18.4687 241.750 m
18.4687 240.770 18.6171 239.924 18.9140 239.210  c
19.2109 238.497 19.6041 237.968 20.0937 237.625  c
20.4791 237.354 20.8750 237.218 21.2812 237.218  c
21.9375 237.218 22.5260 237.552 23.0468 238.218  c
23.7031 239.052 24.0312 240.182 24.0312 241.609  c
24.0312 242.609 23.8880 243.458 23.6015 244.156  c
23.3151 244.854 22.9479 245.362 22.5000 245.679  c
22.0520 245.997 21.6250 246.156 21.2187 246.156  c
20.3958 246.156 19.7083 245.671 19.1562 244.703  c
18.6979 243.880 18.4687 242.895 18.4687 241.750  c
h
19.7187 241.906 m
19.7187 243.093 19.8645 244.062 20.1562 244.812  c
20.3958 245.437 20.7552 245.750 21.2343 245.750  c
21.4635 245.750 21.7005 245.648 21.9453 245.445  c
22.1901 245.242 22.3750 244.895 22.5000 244.406  c
22.6979 243.687 22.7968 242.661 22.7968 241.328  c
22.7968 240.349 22.6927 239.531 22.4843 238.875  c
22.3385 238.385 22.1406 238.041 21.8906 237.843  c
21.7239 237.708 21.5156 237.640 21.2656 237.640  c
20.9843 237.640 20.7291 237.765 20.5000 238.015  c
20.1979 238.369 19.9921 238.924 19.8828 239.679  c
19.7734 240.434 19.7187 241.177 19.7187 241.906  c
h
26.1250 244.765 m
26.3229 244.765 26.4895 244.835 26.6250 244.976  c
26.7604 245.117 26.8281 245.281 26.8281 245.468  c
26.8281 245.666 26.7604 245.833 26.6250 245.968  c
26.4895 246.104 26.3229 246.171 26.1250 246.171  c
25.9270 246.171 25.7604 246.104 25.6250 245.968  c
25.4895 245.833 25.4218 245.666 25.4218 245.468  c
25.4218 245.270 25.4895 245.104 25.6250 244.968  c
25.7604 244.833 25.9270 244.765 26.1250 244.765  c
h
33.3906 237.390 m
32.8906 238.468 l
30.3125 238.468 l
29.7500 239.625 l
30.8645 239.791 31.7500 240.208 32.4062 240.875  c
32.9687 241.447 33.2500 242.125 33.2500 242.906  c
33.2500 243.364 33.1588 243.786 32.9765 244.171  c
32.7942 244.557 32.5625 244.885 32.2812 245.156  c
32.0000 245.427 31.6875 245.640 31.3437 245.796  c
30.8645 246.036 30.3645 246.156 29.8437 246.156  c
29.3333 246.156 28.9609 246.067 28.7265 245.890  c
28.4921 245.713 28.3750 245.520 28.3750 245.312  c
28.3750 245.187 28.4244 245.080 28.5234 244.992  c
28.6224 244.903 28.7447 244.859 28.8906 244.859  c
28.9947 244.859 29.0885 244.875 29.1718 244.906  c
29.2552 244.937 29.3958 245.026 29.5937 245.171  c
29.9166 245.390 30.2395 245.500 30.5625 245.500  c
31.0625 245.500 31.4974 245.312 31.8671 244.937  c
32.2369 244.562 32.4218 244.104 32.4218 243.562  c
32.4218 243.041 32.2552 242.557 31.9218 242.109  c
31.5885 241.661 31.1302 241.312 30.5468 241.062  c
30.0781 240.875 29.4479 240.765 28.6562 240.734  c
30.3125 237.390 l
33.3906 237.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
35.0000 122.011 m
31.0000 122.011 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
28.5312 124.234 m
30.6250 123.218 l
30.8281 123.218 l
30.8281 130.484 l
30.8281 130.963 30.8489 131.263 30.8906 131.382  c
30.9322 131.502 31.0156 131.593 31.1406 131.656  c
31.2656 131.718 31.5208 131.755 31.9062 131.765  c
31.9062 132.000 l
28.6718 132.000 l
28.6718 131.765 l
29.0781 131.755 29.3411 131.718 29.4609 131.656  c
29.5807 131.593 29.6640 131.510 29.7109 131.406  c
29.7578 131.302 29.7812 130.994 29.7812 130.484  c
29.7812 125.843 l
29.7812 125.208 29.7604 124.802 29.7187 124.625  c
29.6875 124.489 29.6328 124.390 29.5546 124.328  c
29.4765 124.265 29.3802 124.234 29.2656 124.234  c
29.1093 124.234 28.8958 124.302 28.6250 124.437  c
28.5312 124.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
35.0000 8.01718 m
31.0000 8.01718 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
19.5312 10.2343 m
21.6250 9.21875 l
21.8281 9.21875 l
21.8281 16.4843 l
21.8281 16.9635 21.8489 17.2630 21.8906 17.3828  c
21.9322 17.5026 22.0156 17.5937 22.1406 17.6562  c
22.2656 17.7187 22.5208 17.7552 22.9062 17.7656  c
22.9062 18.0000 l
19.6718 18.0000 l
19.6718 17.7656 l
20.0781 17.7552 20.3411 17.7187 20.4609 17.6562  c
20.5807 17.5937 20.6640 17.5104 20.7109 17.4062  c
20.7578 17.3020 20.7812 16.9947 20.7812 16.4843  c
20.7812 11.8437 l
20.7812 11.2083 20.7604 10.8020 20.7187 10.6250  c
20.6875 10.4895 20.6328 10.3906 20.5546 10.3281  c
20.4765 10.2656 20.3802 10.2343 20.2656 10.2343  c
20.1093 10.2343 19.8958 10.3020 19.6250 10.4375  c
19.5312 10.2343 l
h
26.1250 16.7656 m
26.3229 16.7656 26.4895 16.8359 26.6250 16.9765  c
26.7604 17.1171 26.8281 17.2812 26.8281 17.4687  c
26.8281 17.6666 26.7604 17.8333 26.6250 17.9687  c
26.4895 18.1041 26.3229 18.1718 26.1250 18.1718  c
25.9270 18.1718 25.7604 18.1041 25.6250 17.9687  c
25.4895 17.8333 25.4218 17.6666 25.4218 17.4687  c
25.4218 17.2708 25.4895 17.1041 25.6250 16.9687  c
25.7604 16.8333 25.9270 16.7656 26.1250 16.7656  c
h
33.3906 9.39062 m
32.8906 10.4687 l
30.3125 10.4687 l
29.7500 11.6250 l
30.8645 11.7916 31.7500 12.2083 32.4062 12.8750  c
32.9687 13.4479 33.2500 14.1250 33.2500 14.9062  c
33.2500 15.3645 33.1588 15.7864 32.9765 16.1718  c
32.7942 16.5572 32.5625 16.8854 32.2812 17.1562  c
32.0000 17.4270 31.6875 17.6406 31.3437 17.7968  c
30.8645 18.0364 30.3645 18.1562 29.8437 18.1562  c
29.3333 18.1562 28.9609 18.0677 28.7265 17.8906  c
28.4921 17.7135 28.3750 17.5208 28.3750 17.3125  c
28.3750 17.1875 28.4244 17.0807 28.5234 16.9921  c
28.6224 16.9036 28.7447 16.8593 28.8906 16.8593  c
28.9947 16.8593 29.0885 16.8750 29.1718 16.9062  c
29.2552 16.9375 29.3958 17.0260 29.5937 17.1718  c
29.9166 17.3906 30.2395 17.5000 30.5625 17.5000  c
31.0625 17.5000 31.4974 17.3125 31.8671 16.9375  c
32.2369 16.5625 32.4218 16.1041 32.4218 15.5625  c
32.4218 15.0416 32.2552 14.5572 31.9218 14.1093  c
31.5885 13.6614 31.1302 13.3125 30.5468 13.0625  c
30.0781 12.8750 29.4479 12.7656 28.6562 12.7343  c
30.3125 9.39062 l
33.3906 9.39062 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
1.00000 w
2 J
0 j
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Saturday, October 16, 2021 9:33:53 PM EDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
2 J
0 j
0.500000 w
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
1.00000 w
2 J
0 j
0.500000 w
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
1.00000 w
2 J
0 j
0 J
1 j
q
q
2.00000 w
1.00000 0 0 RG
64.0000 2.72465E-3 321.986 369.997 rc
newpath
66.0000 246.334 m
118.831 368.000 l
145.246 307.167 l
171.662 185.501 l
250.909 368.000 l
277.324 307.167 l
303.740 185.501 l
382.986 368.000 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
2.00000 w
0 0 1.00000 RG
64.0000 2.72465E-3 321.986 369.997 rc
newpath
66.0000 307.167 m
92.4155 307.167 l
118.831 368.000 l
145.246 246.334 l
171.662 368.000 l
198.077 307.167 l
224.493 307.167 l
250.909 368.000 l
277.324 246.334 l
303.740 368.000 l
330.155 307.167 l
356.571 307.167 l
382.986 368.000 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
2.00000 w
0 1.00000 0 RG
64.0000 2.72465E-3 321.986 369.997 rc
newpath
66.0000 246.334 m
145.246 246.334 l
171.662 368.000 l
198.077 246.334 l
277.324 246.334 l
303.740 368.000 l
330.155 246.334 l
382.986 246.334 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
2.00000 w
64.0000 2.72465E-3 321.986 369.997 rc
newpath
145.246 3.00271 m
171.662 368.000 l
198.077 185.501 l
224.493 63.8356 l
250.909 124.668 l
303.740 368.000 l
330.155 185.501 l
356.571 63.8356 l
382.986 124.668 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
0.500000 w
0 J
1 j
newpath
356.571 368.000 m
356.571 370.000 l
S
newpath
303.740 368.000 m
303.740 370.000 l
S
newpath
250.909 368.000 m
250.909 370.000 l
S
newpath
198.077 368.000 m
198.077 370.000 l
S
newpath
145.246 368.000 m
145.246 370.000 l
S
newpath
92.4155 368.000 m
92.4155 370.000 l
S
newpath
64.0000 368.000 m
382.986 368.000 l
S
Q
0.500000 w
0 J
1 j
q
q
newpath
66.0000 368.000 m
66.0000 372.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
65.6562 384.031 m
65.9062 383.447 66.2187 383.000 66.5937 382.687  c
66.9687 382.375 67.4322 382.218 67.9843 382.218  c
68.6822 382.218 69.2135 382.442 69.5781 382.890  c
69.8593 383.224 70.0000 383.578 70.0000 383.953  c
70.0000 384.588 69.6041 385.239 68.8125 385.906  c
69.3437 386.114 69.7447 386.411 70.0156 386.796  c
70.2864 387.182 70.4218 387.635 70.4218 388.156  c
70.4218 388.895 70.1822 389.536 69.7031 390.078  c
69.0885 390.796 68.1979 391.156 67.0312 391.156  c
66.4479 391.156 66.0520 391.083 65.8437 390.937  c
65.6354 390.791 65.5312 390.635 65.5312 390.468  c
65.5312 390.343 65.5807 390.237 65.6796 390.148  c
65.7786 390.059 65.8958 390.015 66.0312 390.015  c
66.1354 390.015 66.2447 390.031 66.3593 390.062  c
66.4322 390.083 66.5963 390.158 66.8515 390.289  c
67.1067 390.419 67.2812 390.500 67.3750 390.531  c
67.5312 390.572 67.6979 390.593 67.8750 390.593  c
68.3020 390.593 68.6770 390.427 69.0000 390.093  c
69.3229 389.760 69.4843 389.364 69.4843 388.906  c
69.4843 388.572 69.4114 388.250 69.2656 387.937  c
69.1510 387.697 69.0260 387.515 68.8906 387.390  c
68.7135 387.224 68.4661 387.072 68.1484 386.937  c
67.8307 386.802 67.5052 386.734 67.1718 386.734  c
66.9687 386.734 l
66.9687 386.531 l
67.3020 386.489 67.6380 386.369 67.9765 386.171  c
68.3151 385.974 68.5599 385.737 68.7109 385.460  c
68.8619 385.184 68.9375 384.875 68.9375 384.531  c
68.9375 384.104 68.8020 383.755 68.5312 383.484  c
68.2604 383.213 67.9218 383.078 67.5156 383.078  c
66.8593 383.078 66.3125 383.427 65.8750 384.125  c
65.6562 384.031 l
h
74.0000 386.671 m
73.3125 386.109 72.8697 385.658 72.6718 385.320  c
72.4739 384.981 72.3750 384.630 72.3750 384.265  c
72.3750 383.703 72.5911 383.221 73.0234 382.820  c
73.4557 382.419 74.0312 382.218 74.7500 382.218  c
75.4479 382.218 76.0078 382.406 76.4296 382.781  c
76.8515 383.156 77.0625 383.583 77.0625 384.062  c
77.0625 384.385 76.9479 384.713 76.7187 385.046  c
76.4895 385.380 76.0156 385.776 75.2968 386.234  c
76.0364 386.807 76.5260 387.260 76.7656 387.593  c
77.0885 388.020 77.2500 388.474 77.2500 388.953  c
77.2500 389.557 77.0208 390.075 76.5625 390.507  c
76.1041 390.940 75.5000 391.156 74.7500 391.156  c
73.9270 391.156 73.2864 390.901 72.8281 390.390  c
72.4635 389.974 72.2812 389.520 72.2812 389.031  c
72.2812 388.656 72.4114 388.281 72.6718 387.906  c
72.9322 387.531 73.3750 387.119 74.0000 386.671  c
h
74.9843 385.984 m
75.4947 385.526 75.8177 385.164 75.9531 384.898  c
76.0885 384.632 76.1562 384.333 76.1562 384.000  c
76.1562 383.562 76.0312 383.216 75.7812 382.960  c
75.5312 382.705 75.1927 382.578 74.7656 382.578  c
74.3281 382.578 73.9739 382.703 73.7031 382.953  c
73.4322 383.203 73.2968 383.494 73.2968 383.828  c
73.2968 384.046 73.3541 384.268 73.4687 384.492  c
73.5833 384.716 73.7447 384.927 73.9531 385.125  c
74.9843 385.984 l
h
74.2968 386.906 m
73.9427 387.197 73.6822 387.518 73.5156 387.867  c
73.3489 388.216 73.2656 388.593 73.2656 389.000  c
73.2656 389.552 73.4140 389.992 73.7109 390.320  c
74.0078 390.648 74.3854 390.812 74.8437 390.812  c
75.3020 390.812 75.6692 390.682 75.9453 390.421  c
76.2213 390.161 76.3593 389.849 76.3593 389.484  c
76.3593 389.182 76.2760 388.906 76.1093 388.656  c
75.8177 388.208 75.2135 387.625 74.2968 386.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
118.831 368.000 m
118.831 372.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
123.046 387.828 m
123.046 388.734 l
121.890 388.734 l
121.890 391.000 l
120.843 391.000 l
120.843 388.734 l
117.203 388.734 l
117.203 387.921 l
121.203 382.218 l
121.890 382.218 l
121.890 387.828 l
123.046 387.828 l
h
120.843 387.828 m
120.843 383.546 l
117.828 387.828 l
120.843 387.828 l
h
123.968 386.750 m
123.968 385.770 124.117 384.924 124.414 384.210  c
124.710 383.497 125.104 382.968 125.593 382.625  c
125.979 382.354 126.375 382.218 126.781 382.218  c
127.437 382.218 128.026 382.552 128.546 383.218  c
129.203 384.052 129.531 385.182 129.531 386.609  c
129.531 387.609 129.388 388.458 129.101 389.156  c
128.815 389.854 128.447 390.362 128.000 390.679  c
127.552 390.997 127.125 391.156 126.718 391.156  c
125.895 391.156 125.208 390.671 124.656 389.703  c
124.197 388.880 123.968 387.895 123.968 386.750  c
h
125.218 386.906 m
125.218 388.093 125.364 389.062 125.656 389.812  c
125.895 390.437 126.255 390.750 126.734 390.750  c
126.963 390.750 127.200 390.648 127.445 390.445  c
127.690 390.242 127.875 389.895 128.000 389.406  c
128.197 388.687 128.296 387.661 128.296 386.328  c
128.296 385.349 128.192 384.531 127.984 383.875  c
127.838 383.385 127.640 383.041 127.390 382.843  c
127.224 382.708 127.015 382.640 126.765 382.640  c
126.484 382.640 126.229 382.765 126.000 383.015  c
125.697 383.369 125.492 383.924 125.382 384.679  c
125.273 385.434 125.218 386.177 125.218 386.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
171.662 368.000 m
171.662 372.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
176.046 387.828 m
176.046 388.734 l
174.890 388.734 l
174.890 391.000 l
173.843 391.000 l
173.843 388.734 l
170.203 388.734 l
170.203 387.921 l
174.203 382.218 l
174.890 382.218 l
174.890 387.828 l
176.046 387.828 l
h
173.843 387.828 m
173.843 383.546 l
170.828 387.828 l
173.843 387.828 l
h
182.453 389.343 m
181.859 391.000 l
176.781 391.000 l
176.781 390.765 l
178.270 389.401 179.320 388.286 179.929 387.421  c
180.539 386.557 180.843 385.770 180.843 385.062  c
180.843 384.510 180.677 384.059 180.343 383.710  c
180.010 383.362 179.609 383.187 179.140 383.187  c
178.724 383.187 178.346 383.309 178.007 383.554  c
177.669 383.799 177.421 384.161 177.265 384.640  c
177.031 384.640 l
177.135 383.859 177.406 383.260 177.843 382.843  c
178.281 382.427 178.828 382.218 179.484 382.218  c
180.182 382.218 180.765 382.442 181.234 382.890  c
181.703 383.338 181.937 383.864 181.937 384.468  c
181.937 384.906 181.833 385.343 181.625 385.781  c
181.312 386.468 180.807 387.192 180.109 387.953  c
179.057 389.109 178.395 389.807 178.125 390.046  c
180.375 390.046 l
180.833 390.046 181.153 390.028 181.335 389.992  c
181.518 389.955 181.684 389.885 181.835 389.781  c
181.987 389.677 182.114 389.531 182.218 389.343  c
182.453 389.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
224.493 368.000 m
224.493 372.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
229.046 387.828 m
229.046 388.734 l
227.890 388.734 l
227.890 391.000 l
226.843 391.000 l
226.843 388.734 l
223.203 388.734 l
223.203 387.921 l
227.203 382.218 l
227.890 382.218 l
227.890 387.828 l
229.046 387.828 l
h
226.843 387.828 m
226.843 383.546 l
223.828 387.828 l
226.843 387.828 l
h
235.546 387.828 m
235.546 388.734 l
234.390 388.734 l
234.390 391.000 l
233.343 391.000 l
233.343 388.734 l
229.703 388.734 l
229.703 387.921 l
233.703 382.218 l
234.390 382.218 l
234.390 387.828 l
235.546 387.828 l
h
233.343 387.828 m
233.343 383.546 l
230.328 387.828 l
233.343 387.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
277.324 368.000 m
277.324 372.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
282.046 387.828 m
282.046 388.734 l
280.890 388.734 l
280.890 391.000 l
279.843 391.000 l
279.843 388.734 l
276.203 388.734 l
276.203 387.921 l
280.203 382.218 l
280.890 382.218 l
280.890 387.828 l
282.046 387.828 l
h
279.843 387.828 m
279.843 383.546 l
276.828 387.828 l
279.843 387.828 l
h
288.328 382.218 m
288.328 382.453 l
287.765 382.505 287.307 382.614 286.953 382.781  c
286.599 382.947 286.250 383.203 285.906 383.546  c
285.562 383.890 285.278 384.273 285.054 384.695  c
284.830 385.117 284.640 385.614 284.484 386.187  c
285.099 385.770 285.713 385.562 286.328 385.562  c
286.911 385.562 287.419 385.799 287.851 386.273  c
288.283 386.747 288.500 387.359 288.500 388.109  c
288.500 388.828 288.281 389.484 287.843 390.078  c
287.322 390.796 286.630 391.156 285.765 391.156  c
285.171 391.156 284.671 390.958 284.265 390.562  c
283.463 389.812 283.062 388.833 283.062 387.625  c
283.062 386.854 283.216 386.122 283.523 385.429  c
283.830 384.737 284.270 384.119 284.843 383.578  c
285.416 383.036 285.966 382.674 286.492 382.492  c
287.018 382.309 287.505 382.218 287.953 382.218  c
288.328 382.218 l
h
284.375 386.656 m
284.302 387.229 284.265 387.692 284.265 388.046  c
284.265 388.453 284.341 388.893 284.492 389.367  c
284.643 389.841 284.864 390.218 285.156 390.500  c
285.375 390.697 285.640 390.796 285.953 390.796  c
286.317 390.796 286.645 390.622 286.937 390.273  c
287.229 389.924 287.375 389.432 287.375 388.796  c
287.375 388.067 287.229 387.440 286.937 386.914  c
286.645 386.388 286.239 386.125 285.718 386.125  c
285.552 386.125 285.377 386.158 285.195 386.226  c
285.013 386.294 284.739 386.437 284.375 386.656  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
330.155 368.000 m
330.155 372.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
335.046 387.828 m
335.046 388.734 l
333.890 388.734 l
333.890 391.000 l
332.843 391.000 l
332.843 388.734 l
329.203 388.734 l
329.203 387.921 l
333.203 382.218 l
333.890 382.218 l
333.890 387.828 l
335.046 387.828 l
h
332.843 387.828 m
332.843 383.546 l
329.828 387.828 l
332.843 387.828 l
h
338.000 386.671 m
337.312 386.109 336.869 385.658 336.671 385.320  c
336.474 384.981 336.375 384.630 336.375 384.265  c
336.375 383.703 336.591 383.221 337.023 382.820  c
337.455 382.419 338.031 382.218 338.750 382.218  c
339.447 382.218 340.007 382.406 340.429 382.781  c
340.851 383.156 341.062 383.583 341.062 384.062  c
341.062 384.385 340.947 384.713 340.718 385.046  c
340.489 385.380 340.015 385.776 339.296 386.234  c
340.036 386.807 340.526 387.260 340.765 387.593  c
341.088 388.020 341.250 388.474 341.250 388.953  c
341.250 389.557 341.020 390.075 340.562 390.507  c
340.104 390.940 339.500 391.156 338.750 391.156  c
337.927 391.156 337.286 390.901 336.828 390.390  c
336.463 389.974 336.281 389.520 336.281 389.031  c
336.281 388.656 336.411 388.281 336.671 387.906  c
336.932 387.531 337.375 387.119 338.000 386.671  c
h
338.984 385.984 m
339.494 385.526 339.817 385.164 339.953 384.898  c
340.088 384.632 340.156 384.333 340.156 384.000  c
340.156 383.562 340.031 383.216 339.781 382.960  c
339.531 382.705 339.192 382.578 338.765 382.578  c
338.328 382.578 337.974 382.703 337.703 382.953  c
337.432 383.203 337.296 383.494 337.296 383.828  c
337.296 384.046 337.354 384.268 337.468 384.492  c
337.583 384.716 337.744 384.927 337.953 385.125  c
338.984 385.984 l
h
338.296 386.906 m
337.942 387.197 337.682 387.518 337.515 387.867  c
337.349 388.216 337.265 388.593 337.265 389.000  c
337.265 389.552 337.414 389.992 337.710 390.320  c
338.007 390.648 338.385 390.812 338.843 390.812  c
339.302 390.812 339.669 390.682 339.945 390.421  c
340.221 390.161 340.359 389.849 340.359 389.484  c
340.359 389.182 340.276 388.906 340.109 388.656  c
339.817 388.208 339.213 387.625 338.296 386.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
382.986 368.000 m
382.986 372.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
386.640 382.390 m
386.140 383.468 l
383.562 383.468 l
383.000 384.625 l
384.114 384.791 385.000 385.208 385.656 385.875  c
386.218 386.447 386.500 387.125 386.500 387.906  c
386.500 388.364 386.408 388.786 386.226 389.171  c
386.044 389.557 385.812 389.885 385.531 390.156  c
385.250 390.427 384.937 390.640 384.593 390.796  c
384.114 391.036 383.614 391.156 383.093 391.156  c
382.583 391.156 382.210 391.067 381.976 390.890  c
381.742 390.713 381.625 390.520 381.625 390.312  c
381.625 390.187 381.674 390.080 381.773 389.992  c
381.872 389.903 381.994 389.859 382.140 389.859  c
382.244 389.859 382.338 389.875 382.421 389.906  c
382.505 389.937 382.645 390.026 382.843 390.171  c
383.166 390.390 383.489 390.500 383.812 390.500  c
384.312 390.500 384.747 390.312 385.117 389.937  c
385.487 389.562 385.671 389.104 385.671 388.562  c
385.671 388.041 385.505 387.557 385.171 387.109  c
384.838 386.661 384.380 386.312 383.796 386.062  c
383.328 385.875 382.697 385.765 381.906 385.734  c
383.562 382.390 l
386.640 382.390 l
h
387.968 386.750 m
387.968 385.770 388.117 384.924 388.414 384.210  c
388.710 383.497 389.104 382.968 389.593 382.625  c
389.979 382.354 390.375 382.218 390.781 382.218  c
391.437 382.218 392.026 382.552 392.546 383.218  c
393.203 384.052 393.531 385.182 393.531 386.609  c
393.531 387.609 393.388 388.458 393.101 389.156  c
392.815 389.854 392.447 390.362 392.000 390.679  c
391.552 390.997 391.125 391.156 390.718 391.156  c
389.895 391.156 389.208 390.671 388.656 389.703  c
388.197 388.880 387.968 387.895 387.968 386.750  c
h
389.218 386.906 m
389.218 388.093 389.364 389.062 389.656 389.812  c
389.895 390.437 390.255 390.750 390.734 390.750  c
390.963 390.750 391.200 390.648 391.445 390.445  c
391.690 390.242 391.875 389.895 392.000 389.406  c
392.197 388.687 392.296 387.661 392.296 386.328  c
392.296 385.349 392.192 384.531 391.984 383.875  c
391.838 383.385 391.640 383.041 391.390 382.843  c
391.224 382.708 391.015 382.640 390.765 382.640  c
390.484 382.640 390.229 382.765 390.000 383.015  c
389.697 383.369 389.492 383.924 389.382 384.679  c
389.273 385.434 389.218 386.177 389.218 386.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
1.00000 w
2 J
0 j
q
0.500000 w
0 J
1 j
newpath
64.0000 3.00271 m
62.0000 3.00271 l
S
newpath
64.0000 18.2109 m
62.0000 18.2109 l
S
newpath
64.0000 33.4191 m
62.0000 33.4191 l
S
newpath
64.0000 79.0438 m
62.0000 79.0438 l
S
newpath
64.0000 94.2520 m
62.0000 94.2520 l
S
newpath
64.0000 48.6273 m
62.0000 48.6273 l
S
newpath
64.0000 109.460 m
62.0000 109.460 l
S
newpath
64.0000 124.668 m
62.0000 124.668 l
S
newpath
64.0000 155.084 m
62.0000 155.084 l
S
newpath
64.0000 185.501 m
62.0000 185.501 l
S
newpath
64.0000 170.293 m
62.0000 170.293 l
S
newpath
64.0000 200.709 m
62.0000 200.709 l
S
newpath
64.0000 231.126 m
62.0000 231.126 l
S
newpath
64.0000 246.334 m
62.0000 246.334 l
S
newpath
64.0000 261.542 m
62.0000 261.542 l
S
newpath
64.0000 276.750 m
62.0000 276.750 l
S
newpath
64.0000 307.167 m
62.0000 307.167 l
S
newpath
64.0000 322.375 m
62.0000 322.375 l
S
newpath
64.0000 337.583 m
62.0000 337.583 l
S
newpath
64.0000 352.791 m
62.0000 352.791 l
S
newpath
64.0000 368.000 m
64.0000 3.00271 l
S
Q
0.500000 w
0 J
1 j
q
q
newpath
64.0000 368.000 m
60.0000 368.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
58.4687 373.750 m
58.4687 372.770 58.6171 371.924 58.9140 371.210  c
59.2109 370.497 59.6041 369.968 60.0937 369.625  c
60.4791 369.354 60.8750 369.218 61.2812 369.218  c
61.9375 369.218 62.5260 369.552 63.0468 370.218  c
63.7031 371.052 64.0312 372.182 64.0312 373.609  c
64.0312 374.609 63.8880 375.458 63.6015 376.156  c
63.3151 376.854 62.9479 377.362 62.5000 377.679  c
62.0520 377.997 61.6250 378.156 61.2187 378.156  c
60.3958 378.156 59.7083 377.671 59.1562 376.703  c
58.6979 375.880 58.4687 374.895 58.4687 373.750  c
h
59.7187 373.906 m
59.7187 375.093 59.8645 376.062 60.1562 376.812  c
60.3958 377.437 60.7552 377.750 61.2343 377.750  c
61.4635 377.750 61.7005 377.648 61.9453 377.445  c
62.1901 377.242 62.3750 376.895 62.5000 376.406  c
62.6979 375.687 62.7968 374.661 62.7968 373.328  c
62.7968 372.349 62.6927 371.531 62.4843 370.875  c
62.3385 370.385 62.1406 370.041 61.8906 369.843  c
61.7239 369.708 61.5156 369.640 61.2656 369.640  c
60.9843 369.640 60.7291 369.765 60.5000 370.015  c
60.1979 370.369 59.9921 370.924 59.8828 371.679  c
59.7734 372.434 59.7187 373.177 59.7187 373.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
64.0000 291.958 m
60.0000 291.958 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
17.6406 293.390 m
17.1406 294.468 l
14.5625 294.468 l
14.0000 295.625 l
15.1145 295.791 16.0000 296.208 16.6562 296.875  c
17.2187 297.447 17.5000 298.125 17.5000 298.906  c
17.5000 299.364 17.4088 299.786 17.2265 300.171  c
17.0442 300.557 16.8125 300.885 16.5312 301.156  c
16.2500 301.427 15.9375 301.640 15.5937 301.796  c
15.1145 302.036 14.6145 302.156 14.0937 302.156  c
13.5833 302.156 13.2109 302.067 12.9765 301.890  c
12.7421 301.713 12.6250 301.520 12.6250 301.312  c
12.6250 301.187 12.6744 301.080 12.7734 300.992  c
12.8724 300.903 12.9947 300.859 13.1406 300.859  c
13.2447 300.859 13.3385 300.875 13.4218 300.906  c
13.5052 300.937 13.6458 301.026 13.8437 301.171  c
14.1666 301.390 14.4895 301.500 14.8125 301.500  c
15.3125 301.500 15.7474 301.312 16.1171 300.937  c
16.4869 300.562 16.6718 300.104 16.6718 299.562  c
16.6718 299.041 16.5052 298.557 16.1718 298.109  c
15.8385 297.661 15.3802 297.312 14.7968 297.062  c
14.3281 296.875 13.6979 296.765 12.9062 296.734  c
14.5625 293.390 l
17.6406 293.390 l
h
20.1250 300.765 m
20.3229 300.765 20.4895 300.835 20.6250 300.976  c
20.7604 301.117 20.8281 301.281 20.8281 301.468  c
20.8281 301.666 20.7604 301.833 20.6250 301.968  c
20.4895 302.104 20.3229 302.171 20.1250 302.171  c
19.9270 302.171 19.7604 302.104 19.6250 301.968  c
19.4895 301.833 19.4218 301.666 19.4218 301.468  c
19.4218 301.270 19.4895 301.104 19.6250 300.968  c
19.7604 300.833 19.9270 300.765 20.1250 300.765  c
h
f
newpath
31.0937 300.343 m
30.3906 301.031 l
28.1406 298.796 l
25.9062 301.031 l
25.2031 300.328 l
27.4531 298.093 l
25.2031 295.875 l
25.9062 295.171 l
28.1406 297.390 l
30.3906 295.156 l
31.0937 295.859 l
28.8437 298.093 l
31.0937 300.343 l
h
f
newpath
36.5312 294.234 m
38.6250 293.218 l
38.8281 293.218 l
38.8281 300.484 l
38.8281 300.963 38.8489 301.263 38.8906 301.382  c
38.9322 301.502 39.0156 301.593 39.1406 301.656  c
39.2656 301.718 39.5208 301.755 39.9062 301.765  c
39.9062 302.000 l
36.6718 302.000 l
36.6718 301.765 l
37.0781 301.755 37.3411 301.718 37.4609 301.656  c
37.5807 301.593 37.6640 301.510 37.7109 301.406  c
37.7578 301.302 37.7812 300.994 37.7812 300.484  c
37.7812 295.843 l
37.7812 295.208 37.7604 294.802 37.7187 294.625  c
37.6875 294.489 37.6328 294.390 37.5546 294.328  c
37.4765 294.265 37.3802 294.234 37.2656 294.234  c
37.1093 294.234 36.8958 294.302 36.6250 294.437  c
36.5312 294.234 l
h
41.9687 297.750 m
41.9687 296.770 42.1171 295.924 42.4140 295.210  c
42.7109 294.497 43.1041 293.968 43.5937 293.625  c
43.9791 293.354 44.3750 293.218 44.7812 293.218  c
45.4375 293.218 46.0260 293.552 46.5468 294.218  c
47.2031 295.052 47.5312 296.182 47.5312 297.609  c
47.5312 298.609 47.3880 299.458 47.1015 300.156  c
46.8151 300.854 46.4479 301.362 46.0000 301.679  c
45.5520 301.997 45.1250 302.156 44.7187 302.156  c
43.8958 302.156 43.2083 301.671 42.6562 300.703  c
42.1979 299.880 41.9687 298.895 41.9687 297.750  c
h
43.2187 297.906 m
43.2187 299.093 43.3645 300.062 43.6562 300.812  c
43.8958 301.437 44.2552 301.750 44.7343 301.750  c
44.9635 301.750 45.2005 301.648 45.4453 301.445  c
45.6901 301.242 45.8750 300.895 46.0000 300.406  c
46.1979 299.687 46.2968 298.661 46.2968 297.328  c
46.2968 296.349 46.1927 295.531 45.9843 294.875  c
45.8385 294.385 45.6406 294.041 45.3906 293.843  c
45.2239 293.708 45.0156 293.640 44.7656 293.640  c
44.4843 293.640 44.2291 293.765 44.0000 294.015  c
43.6979 294.369 43.4921 294.924 43.3828 295.679  c
43.2734 296.434 43.2187 297.177 43.2187 297.906  c
h
f
newpath
49.4062 294.390 m
51.9375 294.390 l
51.9375 295.125 l
49.4062 295.125 l
49.4062 294.390 l
h
f
newpath
55.1718 291.031 m
56.7812 290.234 l
56.9375 290.234 l
56.9375 295.828 l
56.9375 296.203 56.9531 296.434 56.9843 296.523  c
57.0156 296.612 57.0807 296.682 57.1796 296.734  c
57.2786 296.786 57.4791 296.812 57.7812 296.812  c
57.7812 297.000 l
55.2968 297.000 l
55.2968 296.812 l
55.6093 296.812 55.8099 296.789 55.8984 296.742  c
55.9869 296.695 56.0494 296.630 56.0859 296.546  c
56.1224 296.463 56.1406 296.224 56.1406 295.828  c
56.1406 292.265 l
56.1406 291.776 56.1250 291.463 56.0937 291.328  c
56.0729 291.224 56.0312 291.148 55.9687 291.101  c
55.9062 291.054 55.8333 291.031 55.7500 291.031  c
55.6250 291.031 55.4583 291.078 55.2500 291.171  c
55.1718 291.031 l
h
63.3437 290.375 m
62.9531 291.203 l
60.9687 291.203 l
60.5312 292.093 l
61.3958 292.218 62.0781 292.541 62.5781 293.062  c
63.0156 293.500 63.2343 294.020 63.2343 294.625  c
63.2343 294.968 63.1640 295.289 63.0234 295.585  c
62.8828 295.882 62.7057 296.135 62.4921 296.343  c
62.2786 296.552 62.0364 296.718 61.7656 296.843  c
61.3906 297.031 61.0052 297.125 60.6093 297.125  c
60.2135 297.125 59.9270 297.057 59.7500 296.921  c
59.5729 296.786 59.4843 296.635 59.4843 296.468  c
59.4843 296.375 59.5208 296.294 59.5937 296.226  c
59.6666 296.158 59.7604 296.125 59.8750 296.125  c
59.9583 296.125 60.0312 296.138 60.0937 296.164  c
60.1562 296.190 60.2656 296.255 60.4218 296.359  c
60.6614 296.526 60.9062 296.609 61.1562 296.609  c
61.5416 296.609 61.8776 296.466 62.1640 296.179  c
62.4505 295.893 62.5937 295.541 62.5937 295.125  c
62.5937 294.729 62.4661 294.356 62.2109 294.007  c
61.9557 293.658 61.6041 293.390 61.1562 293.203  c
60.7916 293.057 60.3072 292.974 59.7031 292.953  c
60.9687 290.375 l
63.3437 290.375 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
64.0000 215.917 m
60.0000 215.917 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
13.5312 218.234 m
15.6250 217.218 l
15.8281 217.218 l
15.8281 224.484 l
15.8281 224.963 15.8489 225.263 15.8906 225.382  c
15.9322 225.502 16.0156 225.593 16.1406 225.656  c
16.2656 225.718 16.5208 225.755 16.9062 225.765  c
16.9062 226.000 l
13.6718 226.000 l
13.6718 225.765 l
14.0781 225.755 14.3411 225.718 14.4609 225.656  c
14.5807 225.593 14.6640 225.510 14.7109 225.406  c
14.7578 225.302 14.7812 224.994 14.7812 224.484  c
14.7812 219.843 l
14.7812 219.208 14.7604 218.802 14.7187 218.625  c
14.6875 218.489 14.6328 218.390 14.5546 218.328  c
14.4765 218.265 14.3802 218.234 14.2656 218.234  c
14.1093 218.234 13.8958 218.302 13.6250 218.437  c
13.5312 218.234 l
h
20.1250 224.765 m
20.3229 224.765 20.4895 224.835 20.6250 224.976  c
20.7604 225.117 20.8281 225.281 20.8281 225.468  c
20.8281 225.666 20.7604 225.833 20.6250 225.968  c
20.4895 226.104 20.3229 226.171 20.1250 226.171  c
19.9270 226.171 19.7604 226.104 19.6250 225.968  c
19.4895 225.833 19.4218 225.666 19.4218 225.468  c
19.4218 225.270 19.4895 225.104 19.6250 224.968  c
19.7604 224.833 19.9270 224.765 20.1250 224.765  c
h
f
newpath
31.0937 224.343 m
30.3906 225.031 l
28.1406 222.796 l
25.9062 225.031 l
25.2031 224.328 l
27.4531 222.093 l
25.2031 219.875 l
25.9062 219.171 l
28.1406 221.390 l
30.3906 219.156 l
31.0937 219.859 l
28.8437 222.093 l
31.0937 224.343 l
h
f
newpath
36.5312 218.234 m
38.6250 217.218 l
38.8281 217.218 l
38.8281 224.484 l
38.8281 224.963 38.8489 225.263 38.8906 225.382  c
38.9322 225.502 39.0156 225.593 39.1406 225.656  c
39.2656 225.718 39.5208 225.755 39.9062 225.765  c
39.9062 226.000 l
36.6718 226.000 l
36.6718 225.765 l
37.0781 225.755 37.3411 225.718 37.4609 225.656  c
37.5807 225.593 37.6640 225.510 37.7109 225.406  c
37.7578 225.302 37.7812 224.994 37.7812 224.484  c
37.7812 219.843 l
37.7812 219.208 37.7604 218.802 37.7187 218.625  c
37.6875 218.489 37.6328 218.390 37.5546 218.328  c
37.4765 218.265 37.3802 218.234 37.2656 218.234  c
37.1093 218.234 36.8958 218.302 36.6250 218.437  c
36.5312 218.234 l
h
41.9687 221.750 m
41.9687 220.770 42.1171 219.924 42.4140 219.210  c
42.7109 218.497 43.1041 217.968 43.5937 217.625  c
43.9791 217.354 44.3750 217.218 44.7812 217.218  c
45.4375 217.218 46.0260 217.552 46.5468 218.218  c
47.2031 219.052 47.5312 220.182 47.5312 221.609  c
47.5312 222.609 47.3880 223.458 47.1015 224.156  c
46.8151 224.854 46.4479 225.362 46.0000 225.679  c
45.5520 225.997 45.1250 226.156 44.7187 226.156  c
43.8958 226.156 43.2083 225.671 42.6562 224.703  c
42.1979 223.880 41.9687 222.895 41.9687 221.750  c
h
43.2187 221.906 m
43.2187 223.093 43.3645 224.062 43.6562 224.812  c
43.8958 225.437 44.2552 225.750 44.7343 225.750  c
44.9635 225.750 45.2005 225.648 45.4453 225.445  c
45.6901 225.242 45.8750 224.895 46.0000 224.406  c
46.1979 223.687 46.2968 222.661 46.2968 221.328  c
46.2968 220.349 46.1927 219.531 45.9843 218.875  c
45.8385 218.385 45.6406 218.041 45.3906 217.843  c
45.2239 217.708 45.0156 217.640 44.7656 217.640  c
44.4843 217.640 44.2291 217.765 44.0000 218.015  c
43.6979 218.369 43.4921 218.924 43.3828 219.679  c
43.2734 220.434 43.2187 221.177 43.2187 221.906  c
h
f
newpath
49.4062 218.390 m
51.9375 218.390 l
51.9375 219.125 l
49.4062 219.125 l
49.4062 218.390 l
h
f
newpath
55.1718 215.031 m
56.7812 214.234 l
56.9375 214.234 l
56.9375 219.828 l
56.9375 220.203 56.9531 220.434 56.9843 220.523  c
57.0156 220.612 57.0807 220.682 57.1796 220.734  c
57.2786 220.786 57.4791 220.812 57.7812 220.812  c
57.7812 221.000 l
55.2968 221.000 l
55.2968 220.812 l
55.6093 220.812 55.8099 220.789 55.8984 220.742  c
55.9869 220.695 56.0494 220.630 56.0859 220.546  c
56.1224 220.463 56.1406 220.224 56.1406 219.828  c
56.1406 216.265 l
56.1406 215.776 56.1250 215.463 56.0937 215.328  c
56.0729 215.224 56.0312 215.148 55.9687 215.101  c
55.9062 215.054 55.8333 215.031 55.7500 215.031  c
55.6250 215.031 55.4583 215.078 55.2500 215.171  c
55.1718 215.031 l
h
63.6562 218.562 m
63.6562 219.250 l
62.7656 219.250 l
62.7656 221.000 l
61.9531 221.000 l
61.9531 219.250 l
59.1562 219.250 l
59.1562 218.625 l
62.2343 214.234 l
62.7656 214.234 l
62.7656 218.562 l
63.6562 218.562 l
h
61.9531 218.562 m
61.9531 215.265 l
59.6406 218.562 l
61.9531 218.562 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
64.0000 139.876 m
60.0000 139.876 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
7.53125 142.234 m
9.62500 141.218 l
9.82812 141.218 l
9.82812 148.484 l
9.82812 148.963 9.84895 149.263 9.89062 149.382  c
9.93229 149.502 10.0156 149.593 10.1406 149.656  c
10.2656 149.718 10.5208 149.755 10.9062 149.765  c
10.9062 150.000 l
7.67187 150.000 l
7.67187 149.765 l
8.07812 149.755 8.34114 149.718 8.46093 149.656  c
8.58072 149.593 8.66406 149.510 8.71093 149.406  c
8.75781 149.302 8.78125 148.994 8.78125 148.484  c
8.78125 143.843 l
8.78125 143.208 8.76041 142.802 8.71875 142.625  c
8.68750 142.489 8.63281 142.390 8.55468 142.328  c
8.47656 142.265 8.38020 142.234 8.26562 142.234  c
8.10937 142.234 7.89583 142.302 7.62500 142.437  c
7.53125 142.234 l
h
14.1250 148.765 m
14.3229 148.765 14.4895 148.835 14.6250 148.976  c
14.7604 149.117 14.8281 149.281 14.8281 149.468  c
14.8281 149.666 14.7604 149.833 14.6250 149.968  c
14.4895 150.104 14.3229 150.171 14.1250 150.171  c
13.9270 150.171 13.7604 150.104 13.6250 149.968  c
13.4895 149.833 13.4218 149.666 13.4218 149.468  c
13.4218 149.270 13.4895 149.104 13.6250 148.968  c
13.7604 148.833 13.9270 148.765 14.1250 148.765  c
h
21.3906 141.390 m
20.8906 142.468 l
18.3125 142.468 l
17.7500 143.625 l
18.8645 143.791 19.7500 144.208 20.4062 144.875  c
20.9687 145.447 21.2500 146.125 21.2500 146.906  c
21.2500 147.364 21.1588 147.786 20.9765 148.171  c
20.7942 148.557 20.5625 148.885 20.2812 149.156  c
20.0000 149.427 19.6875 149.640 19.3437 149.796  c
18.8645 150.036 18.3645 150.156 17.8437 150.156  c
17.3333 150.156 16.9609 150.067 16.7265 149.890  c
16.4921 149.713 16.3750 149.520 16.3750 149.312  c
16.3750 149.187 16.4244 149.080 16.5234 148.992  c
16.6224 148.903 16.7447 148.859 16.8906 148.859  c
16.9947 148.859 17.0885 148.875 17.1718 148.906  c
17.2552 148.937 17.3958 149.026 17.5937 149.171  c
17.9166 149.390 18.2395 149.500 18.5625 149.500  c
19.0625 149.500 19.4974 149.312 19.8671 148.937  c
20.2369 148.562 20.4218 148.104 20.4218 147.562  c
20.4218 147.041 20.2552 146.557 19.9218 146.109  c
19.5885 145.661 19.1302 145.312 18.5468 145.062  c
18.0781 144.875 17.4479 144.765 16.6562 144.734  c
18.3125 141.390 l
21.3906 141.390 l
h
f
newpath
31.0937 148.343 m
30.3906 149.031 l
28.1406 146.796 l
25.9062 149.031 l
25.2031 148.328 l
27.4531 146.093 l
25.2031 143.875 l
25.9062 143.171 l
28.1406 145.390 l
30.3906 143.156 l
31.0937 143.859 l
28.8437 146.093 l
31.0937 148.343 l
h
f
newpath
36.5312 142.234 m
38.6250 141.218 l
38.8281 141.218 l
38.8281 148.484 l
38.8281 148.963 38.8489 149.263 38.8906 149.382  c
38.9322 149.502 39.0156 149.593 39.1406 149.656  c
39.2656 149.718 39.5208 149.755 39.9062 149.765  c
39.9062 150.000 l
36.6718 150.000 l
36.6718 149.765 l
37.0781 149.755 37.3411 149.718 37.4609 149.656  c
37.5807 149.593 37.6640 149.510 37.7109 149.406  c
37.7578 149.302 37.7812 148.994 37.7812 148.484  c
37.7812 143.843 l
37.7812 143.208 37.7604 142.802 37.7187 142.625  c
37.6875 142.489 37.6328 142.390 37.5546 142.328  c
37.4765 142.265 37.3802 142.234 37.2656 142.234  c
37.1093 142.234 36.8958 142.302 36.6250 142.437  c
36.5312 142.234 l
h
41.9687 145.750 m
41.9687 144.770 42.1171 143.924 42.4140 143.210  c
42.7109 142.497 43.1041 141.968 43.5937 141.625  c
43.9791 141.354 44.3750 141.218 44.7812 141.218  c
45.4375 141.218 46.0260 141.552 46.5468 142.218  c
47.2031 143.052 47.5312 144.182 47.5312 145.609  c
47.5312 146.609 47.3880 147.458 47.1015 148.156  c
46.8151 148.854 46.4479 149.362 46.0000 149.679  c
45.5520 149.997 45.1250 150.156 44.7187 150.156  c
43.8958 150.156 43.2083 149.671 42.6562 148.703  c
42.1979 147.880 41.9687 146.895 41.9687 145.750  c
h
43.2187 145.906 m
43.2187 147.093 43.3645 148.062 43.6562 148.812  c
43.8958 149.437 44.2552 149.750 44.7343 149.750  c
44.9635 149.750 45.2005 149.648 45.4453 149.445  c
45.6901 149.242 45.8750 148.895 46.0000 148.406  c
46.1979 147.687 46.2968 146.661 46.2968 145.328  c
46.2968 144.349 46.1927 143.531 45.9843 142.875  c
45.8385 142.385 45.6406 142.041 45.3906 141.843  c
45.2239 141.708 45.0156 141.640 44.7656 141.640  c
44.4843 141.640 44.2291 141.765 44.0000 142.015  c
43.6979 142.369 43.4921 142.924 43.3828 143.679  c
43.2734 144.434 43.2187 145.177 43.2187 145.906  c
h
f
newpath
49.4062 142.390 m
51.9375 142.390 l
51.9375 143.125 l
49.4062 143.125 l
49.4062 142.390 l
h
f
newpath
55.1718 139.031 m
56.7812 138.234 l
56.9375 138.234 l
56.9375 143.828 l
56.9375 144.203 56.9531 144.434 56.9843 144.523  c
57.0156 144.612 57.0807 144.682 57.1796 144.734  c
57.2786 144.786 57.4791 144.812 57.7812 144.812  c
57.7812 145.000 l
55.2968 145.000 l
55.2968 144.812 l
55.6093 144.812 55.8099 144.789 55.8984 144.742  c
55.9869 144.695 56.0494 144.630 56.0859 144.546  c
56.1224 144.463 56.1406 144.224 56.1406 143.828  c
56.1406 140.265 l
56.1406 139.776 56.1250 139.463 56.0937 139.328  c
56.0729 139.224 56.0312 139.148 55.9687 139.101  c
55.9062 139.054 55.8333 139.031 55.7500 139.031  c
55.6250 139.031 55.4583 139.078 55.2500 139.171  c
55.1718 139.031 l
h
63.6562 142.562 m
63.6562 143.250 l
62.7656 143.250 l
62.7656 145.000 l
61.9531 145.000 l
61.9531 143.250 l
59.1562 143.250 l
59.1562 142.625 l
62.2343 138.234 l
62.7656 138.234 l
62.7656 142.562 l
63.6562 142.562 l
h
61.9531 142.562 m
61.9531 139.265 l
59.6406 142.562 l
61.9531 142.562 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
64.0000 63.8356 m
60.0000 63.8356 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
17.9531 72.3437 m
17.3593 74.0000 l
12.2812 74.0000 l
12.2812 73.7656 l
13.7708 72.4010 14.8203 71.2864 15.4296 70.4218  c
16.0390 69.5572 16.3437 68.7708 16.3437 68.0625  c
16.3437 67.5104 16.1770 67.0599 15.8437 66.7109  c
15.5104 66.3619 15.1093 66.1875 14.6406 66.1875  c
14.2239 66.1875 13.8463 66.3099 13.5078 66.5546  c
13.1692 66.7994 12.9218 67.1614 12.7656 67.6406  c
12.5312 67.6406 l
12.6354 66.8593 12.9062 66.2604 13.3437 65.8437  c
13.7812 65.4270 14.3281 65.2187 14.9843 65.2187  c
15.6822 65.2187 16.2656 65.4427 16.7343 65.8906  c
17.2031 66.3385 17.4375 66.8645 17.4375 67.4687  c
17.4375 67.9062 17.3333 68.3437 17.1250 68.7812  c
16.8125 69.4687 16.3072 70.1927 15.6093 70.9531  c
14.5572 72.1093 13.8958 72.8072 13.6250 73.0468  c
15.8750 73.0468 l
16.3333 73.0468 16.6536 73.0286 16.8359 72.9921  c
17.0182 72.9557 17.1849 72.8854 17.3359 72.7812  c
17.4869 72.6770 17.6145 72.5312 17.7187 72.3437  c
17.9531 72.3437 l
h
20.1250 72.7656 m
20.3229 72.7656 20.4895 72.8359 20.6250 72.9765  c
20.7604 73.1171 20.8281 73.2812 20.8281 73.4687  c
20.8281 73.6666 20.7604 73.8333 20.6250 73.9687  c
20.4895 74.1041 20.3229 74.1718 20.1250 74.1718  c
19.9270 74.1718 19.7604 74.1041 19.6250 73.9687  c
19.4895 73.8333 19.4218 73.6666 19.4218 73.4687  c
19.4218 73.2708 19.4895 73.1041 19.6250 72.9687  c
19.7604 72.8333 19.9270 72.7656 20.1250 72.7656  c
h
f
newpath
31.0937 72.3437 m
30.3906 73.0312 l
28.1406 70.7968 l
25.9062 73.0312 l
25.2031 72.3281 l
27.4531 70.0937 l
25.2031 67.8750 l
25.9062 67.1718 l
28.1406 69.3906 l
30.3906 67.1562 l
31.0937 67.8593 l
28.8437 70.0937 l
31.0937 72.3437 l
h
f
newpath
36.5312 66.2343 m
38.6250 65.2187 l
38.8281 65.2187 l
38.8281 72.4843 l
38.8281 72.9635 38.8489 73.2630 38.8906 73.3828  c
38.9322 73.5026 39.0156 73.5937 39.1406 73.6562  c
39.2656 73.7187 39.5208 73.7552 39.9062 73.7656  c
39.9062 74.0000 l
36.6718 74.0000 l
36.6718 73.7656 l
37.0781 73.7552 37.3411 73.7187 37.4609 73.6562  c
37.5807 73.5937 37.6640 73.5104 37.7109 73.4062  c
37.7578 73.3020 37.7812 72.9947 37.7812 72.4843  c
37.7812 67.8437 l
37.7812 67.2083 37.7604 66.8020 37.7187 66.6250  c
37.6875 66.4895 37.6328 66.3906 37.5546 66.3281  c
37.4765 66.2656 37.3802 66.2343 37.2656 66.2343  c
37.1093 66.2343 36.8958 66.3020 36.6250 66.4375  c
36.5312 66.2343 l
h
41.9687 69.7500 m
41.9687 68.7708 42.1171 67.9244 42.4140 67.2109  c
42.7109 66.4974 43.1041 65.9687 43.5937 65.6250  c
43.9791 65.3541 44.3750 65.2187 44.7812 65.2187  c
45.4375 65.2187 46.0260 65.5520 46.5468 66.2187  c
47.2031 67.0520 47.5312 68.1822 47.5312 69.6093  c
47.5312 70.6093 47.3880 71.4583 47.1015 72.1562  c
46.8151 72.8541 46.4479 73.3619 46.0000 73.6796  c
45.5520 73.9974 45.1250 74.1562 44.7187 74.1562  c
43.8958 74.1562 43.2083 73.6718 42.6562 72.7031  c
42.1979 71.8802 41.9687 70.8958 41.9687 69.7500  c
h
43.2187 69.9062 m
43.2187 71.0937 43.3645 72.0625 43.6562 72.8125  c
43.8958 73.4375 44.2552 73.7500 44.7343 73.7500  c
44.9635 73.7500 45.2005 73.6484 45.4453 73.4453  c
45.6901 73.2421 45.8750 72.8958 46.0000 72.4062  c
46.1979 71.6875 46.2968 70.6614 46.2968 69.3281  c
46.2968 68.3489 46.1927 67.5312 45.9843 66.8750  c
45.8385 66.3854 45.6406 66.0416 45.3906 65.8437  c
45.2239 65.7083 45.0156 65.6406 44.7656 65.6406  c
44.4843 65.6406 44.2291 65.7656 44.0000 66.0156  c
43.6979 66.3697 43.4921 66.9244 43.3828 67.6796  c
43.2734 68.4349 43.2187 69.1770 43.2187 69.9062  c
h
f
newpath
49.4062 66.3906 m
51.9375 66.3906 l
51.9375 67.1250 l
49.4062 67.1250 l
49.4062 66.3906 l
h
f
newpath
55.1718 63.0312 m
56.7812 62.2343 l
56.9375 62.2343 l
56.9375 67.8281 l
56.9375 68.2031 56.9531 68.4349 56.9843 68.5234  c
57.0156 68.6119 57.0807 68.6822 57.1796 68.7343  c
57.2786 68.7864 57.4791 68.8125 57.7812 68.8125  c
57.7812 69.0000 l
55.2968 69.0000 l
55.2968 68.8125 l
55.6093 68.8125 55.8099 68.7890 55.8984 68.7421  c
55.9869 68.6953 56.0494 68.6302 56.0859 68.5468  c
56.1224 68.4635 56.1406 68.2239 56.1406 67.8281  c
56.1406 64.2656 l
56.1406 63.7760 56.1250 63.4635 56.0937 63.3281  c
56.0729 63.2239 56.0312 63.1484 55.9687 63.1015  c
55.9062 63.0546 55.8333 63.0312 55.7500 63.0312  c
55.6250 63.0312 55.4583 63.0781 55.2500 63.1718  c
55.1718 63.0312 l
h
63.6562 66.5625 m
63.6562 67.2500 l
62.7656 67.2500 l
62.7656 69.0000 l
61.9531 69.0000 l
61.9531 67.2500 l
59.1562 67.2500 l
59.1562 66.6250 l
62.2343 62.2343 l
62.7656 62.2343 l
62.7656 66.5625 l
63.6562 66.5625 l
h
61.9531 66.5625 m
61.9531 63.2656 l
59.6406 66.5625 l
61.9531 66.5625 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
1.00000 w
2 J
0 j
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

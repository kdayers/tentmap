%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Friday, August 20, 2021 3:21:22 PM EDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
2 J
0 j
0.500000 w
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
1.00000 w
2 J
0 j
0.500000 w
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
1.00000 w
2 J
0 j
0 J
1 j
q
q
1.00000 1.00000 0 RG
43.0000 -1.00000 340.483 383.489 rc
newpath
44.0000 191.168 m
268.988 64.2813 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
1.00000 1.00000 0 RG
43.0000 -1.00000 340.483 383.489 rc
newpath
44.0000 191.168 m
81.3601 1.53790 l
81.8910 2.83215 l
156.238 380.199 l
156.496 381.489 l
231.458 1.00000 l
231.528 1.03170 l
268.988 191.168 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
43.0000 -1.00000 340.483 383.489 rc
newpath
44.0000 191.168 m
50.9108 77.5163 l
51.0196 76.9701 l
64.3584 76.9701 l
65.2399 70.2658 l
69.3631 2.45773 l
70.2804 14.3024 l
78.3334 146.736 l
78.7513 153.102 l
209.239 153.102 l
209.288 152.786 l
217.831 12.2939 l
218.603 2.07605 l
222.957 73.6741 l
223.827 76.9701 l
381.483 76.9701 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
0.500000 w
0 J
1 j
newpath
358.984 191.168 m
358.984 193.168 l
S
newpath
336.485 191.168 m
336.485 193.168 l
S
newpath
313.986 191.168 m
313.986 193.168 l
S
newpath
291.487 191.168 m
291.487 193.168 l
S
newpath
246.489 191.168 m
246.489 193.168 l
S
newpath
223.991 191.168 m
223.991 193.168 l
S
newpath
201.492 191.168 m
201.492 193.168 l
S
newpath
178.993 191.168 m
178.993 193.168 l
S
newpath
133.995 191.168 m
133.995 193.168 l
S
newpath
111.496 191.168 m
111.496 193.168 l
S
newpath
88.9977 191.168 m
88.9977 193.168 l
S
newpath
66.4988 191.168 m
66.4988 193.168 l
S
newpath
44.0000 191.168 m
381.483 191.168 l
S
Q
0.500000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
205 212 15 17 rc
newpath
211.593 219.375 m
211.833 219.625 212.015 219.880 212.140 220.140  c
212.234 220.307 212.380 220.765 212.578 221.515  c
213.218 220.546 l
213.385 220.317 213.591 220.096 213.835 219.882  c
214.080 219.669 214.296 219.520 214.484 219.437  c
214.599 219.395 214.729 219.375 214.875 219.375  c
215.083 219.375 215.250 219.429 215.375 219.539  c
215.500 219.648 215.562 219.786 215.562 219.953  c
215.562 220.140 215.526 220.265 215.453 220.328  c
215.317 220.453 215.161 220.515 214.984 220.515  c
214.880 220.515 214.770 220.494 214.656 220.453  c
214.427 220.369 214.270 220.328 214.187 220.328  c
214.072 220.328 213.937 220.395 213.781 220.531  c
213.479 220.791 213.114 221.286 212.687 222.015  c
213.296 224.531 l
213.390 224.916 213.468 225.145 213.531 225.218  c
213.593 225.291 213.656 225.328 213.718 225.328  c
213.822 225.328 213.942 225.276 214.078 225.171  c
214.349 224.942 214.578 224.645 214.765 224.281  c
215.015 224.421 l
214.713 224.994 214.322 225.474 213.843 225.859  c
213.583 226.067 213.359 226.171 213.171 226.171  c
212.890 226.171 212.671 226.020 212.515 225.718  c
212.411 225.520 212.197 224.697 211.875 223.250  c
211.114 224.572 210.505 225.427 210.046 225.812  c
209.744 226.052 209.458 226.171 209.187 226.171  c
208.989 226.171 208.807 226.104 208.640 225.968  c
208.526 225.854 208.468 225.708 208.468 225.531  c
208.468 225.375 208.523 225.242 208.632 225.132  c
208.742 225.023 208.875 224.968 209.031 224.968  c
209.187 224.968 209.354 225.046 209.531 225.203  c
209.656 225.317 209.755 225.375 209.828 225.375  c
209.880 225.375 209.953 225.333 210.046 225.250  c
210.276 225.062 210.588 224.661 210.984 224.046  c
211.380 223.432 211.640 222.989 211.765 222.718  c
211.463 221.531 211.296 220.906 211.265 220.843  c
211.161 220.520 211.018 220.294 210.835 220.164  c
210.653 220.033 210.385 219.968 210.031 219.968  c
209.916 219.968 209.786 219.974 209.640 219.984  c
209.640 219.718 l
211.593 219.375 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
44.0000 191.168 m
44.0000 195.168 l
S
Q
q
newpath
156.494 191.168 m
156.494 195.168 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
154.468 209.750 m
154.468 208.770 154.617 207.924 154.914 207.210  c
155.210 206.497 155.604 205.968 156.093 205.625  c
156.479 205.354 156.875 205.218 157.281 205.218  c
157.937 205.218 158.526 205.552 159.046 206.218  c
159.703 207.052 160.031 208.182 160.031 209.609  c
160.031 210.609 159.888 211.458 159.601 212.156  c
159.315 212.854 158.947 213.362 158.500 213.679  c
158.052 213.997 157.625 214.156 157.218 214.156  c
156.395 214.156 155.708 213.671 155.156 212.703  c
154.697 211.880 154.468 210.895 154.468 209.750  c
h
155.718 209.906 m
155.718 211.093 155.864 212.062 156.156 212.812  c
156.395 213.437 156.755 213.750 157.234 213.750  c
157.463 213.750 157.700 213.648 157.945 213.445  c
158.190 213.242 158.375 212.895 158.500 212.406  c
158.697 211.687 158.796 210.661 158.796 209.328  c
158.796 208.349 158.692 207.531 158.484 206.875  c
158.338 206.385 158.140 206.041 157.890 205.843  c
157.724 205.708 157.515 205.640 157.265 205.640  c
156.984 205.640 156.729 205.765 156.500 206.015  c
156.197 206.369 155.992 206.924 155.882 207.679  c
155.773 208.434 155.718 209.177 155.718 209.906  c
h
162.125 212.765 m
162.322 212.765 162.489 212.835 162.625 212.976  c
162.760 213.117 162.828 213.281 162.828 213.468  c
162.828 213.666 162.760 213.833 162.625 213.968  c
162.489 214.104 162.322 214.171 162.125 214.171  c
161.927 214.171 161.760 214.104 161.625 213.968  c
161.489 213.833 161.421 213.666 161.421 213.468  c
161.421 213.270 161.489 213.104 161.625 212.968  c
161.760 212.833 161.927 212.765 162.125 212.765  c
h
169.390 205.390 m
168.890 206.468 l
166.312 206.468 l
165.750 207.625 l
166.864 207.791 167.750 208.208 168.406 208.875  c
168.968 209.447 169.250 210.125 169.250 210.906  c
169.250 211.364 169.158 211.786 168.976 212.171  c
168.794 212.557 168.562 212.885 168.281 213.156  c
168.000 213.427 167.687 213.640 167.343 213.796  c
166.864 214.036 166.364 214.156 165.843 214.156  c
165.333 214.156 164.960 214.067 164.726 213.890  c
164.492 213.713 164.375 213.520 164.375 213.312  c
164.375 213.187 164.424 213.080 164.523 212.992  c
164.622 212.903 164.744 212.859 164.890 212.859  c
164.994 212.859 165.088 212.875 165.171 212.906  c
165.255 212.937 165.395 213.026 165.593 213.171  c
165.916 213.390 166.239 213.500 166.562 213.500  c
167.062 213.500 167.497 213.312 167.867 212.937  c
168.237 212.562 168.421 212.104 168.421 211.562  c
168.421 211.041 168.255 210.557 167.921 210.109  c
167.588 209.661 167.130 209.312 166.546 209.062  c
166.078 208.875 165.447 208.765 164.656 208.734  c
166.312 205.390 l
169.390 205.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
268.988 191.168 m
268.988 195.168 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
271.531 206.234 m
273.625 205.218 l
273.828 205.218 l
273.828 212.484 l
273.828 212.963 273.849 213.263 273.890 213.382  c
273.932 213.502 274.015 213.593 274.140 213.656  c
274.265 213.718 274.520 213.755 274.906 213.765  c
274.906 214.000 l
271.671 214.000 l
271.671 213.765 l
272.078 213.755 272.341 213.718 272.460 213.656  c
272.580 213.593 272.664 213.510 272.710 213.406  c
272.757 213.302 272.781 212.994 272.781 212.484  c
272.781 207.843 l
272.781 207.208 272.760 206.802 272.718 206.625  c
272.687 206.489 272.632 206.390 272.554 206.328  c
272.476 206.265 272.380 206.234 272.265 206.234  c
272.109 206.234 271.895 206.302 271.625 206.437  c
271.531 206.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
381.483 191.168 m
381.483 195.168 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
380.531 206.234 m
382.625 205.218 l
382.828 205.218 l
382.828 212.484 l
382.828 212.963 382.849 213.263 382.890 213.382  c
382.932 213.502 383.015 213.593 383.140 213.656  c
383.265 213.718 383.520 213.755 383.906 213.765  c
383.906 214.000 l
380.671 214.000 l
380.671 213.765 l
381.078 213.755 381.341 213.718 381.460 213.656  c
381.580 213.593 381.664 213.510 381.710 213.406  c
381.757 213.302 381.781 212.994 381.781 212.484  c
381.781 207.843 l
381.781 207.208 381.760 206.802 381.718 206.625  c
381.687 206.489 381.632 206.390 381.554 206.328  c
381.476 206.265 381.380 206.234 381.265 206.234  c
381.109 206.234 380.895 206.302 380.625 206.437  c
380.531 206.234 l
h
387.125 212.765 m
387.322 212.765 387.489 212.835 387.625 212.976  c
387.760 213.117 387.828 213.281 387.828 213.468  c
387.828 213.666 387.760 213.833 387.625 213.968  c
387.489 214.104 387.322 214.171 387.125 214.171  c
386.927 214.171 386.760 214.104 386.625 213.968  c
386.489 213.833 386.421 213.666 386.421 213.468  c
386.421 213.270 386.489 213.104 386.625 212.968  c
386.760 212.833 386.927 212.765 387.125 212.765  c
h
394.390 205.390 m
393.890 206.468 l
391.312 206.468 l
390.750 207.625 l
391.864 207.791 392.750 208.208 393.406 208.875  c
393.968 209.447 394.250 210.125 394.250 210.906  c
394.250 211.364 394.158 211.786 393.976 212.171  c
393.794 212.557 393.562 212.885 393.281 213.156  c
393.000 213.427 392.687 213.640 392.343 213.796  c
391.864 214.036 391.364 214.156 390.843 214.156  c
390.333 214.156 389.960 214.067 389.726 213.890  c
389.492 213.713 389.375 213.520 389.375 213.312  c
389.375 213.187 389.424 213.080 389.523 212.992  c
389.622 212.903 389.744 212.859 389.890 212.859  c
389.994 212.859 390.088 212.875 390.171 212.906  c
390.255 212.937 390.395 213.026 390.593 213.171  c
390.916 213.390 391.239 213.500 391.562 213.500  c
392.062 213.500 392.497 213.312 392.867 212.937  c
393.237 212.562 393.421 212.104 393.421 211.562  c
393.421 211.041 393.255 210.557 392.921 210.109  c
392.588 209.661 392.130 209.312 391.546 209.062  c
391.078 208.875 390.447 208.765 389.656 208.734  c
391.312 205.390 l
394.390 205.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
1.00000 w
2 J
0 j
q
0.500000 w
0 J
1 j
newpath
44.0000 13.5264 m
42.0000 13.5264 l
S
newpath
44.0000 26.2151 m
42.0000 26.2151 l
S
newpath
44.0000 38.9038 m
42.0000 38.9038 l
S
newpath
44.0000 51.5926 m
42.0000 51.5926 l
S
newpath
44.0000 76.9701 m
42.0000 76.9701 l
S
newpath
44.0000 89.6588 m
42.0000 89.6588 l
S
newpath
44.0000 102.347 m
42.0000 102.347 l
S
newpath
44.0000 115.036 m
42.0000 115.036 l
S
newpath
44.0000 140.413 m
42.0000 140.413 l
S
newpath
44.0000 153.102 m
42.0000 153.102 l
S
newpath
44.0000 165.791 m
42.0000 165.791 l
S
newpath
44.0000 178.480 m
42.0000 178.480 l
S
newpath
44.0000 203.857 m
42.0000 203.857 l
S
newpath
44.0000 216.546 m
42.0000 216.546 l
S
newpath
44.0000 229.235 m
42.0000 229.235 l
S
newpath
44.0000 241.923 m
42.0000 241.923 l
S
newpath
44.0000 279.990 m
42.0000 279.990 l
S
newpath
44.0000 267.301 m
42.0000 267.301 l
S
newpath
44.0000 292.678 m
42.0000 292.678 l
S
newpath
44.0000 305.367 m
42.0000 305.367 l
S
newpath
44.0000 330.745 m
42.0000 330.745 l
S
newpath
44.0000 343.433 m
42.0000 343.433 l
S
newpath
44.0000 356.122 m
42.0000 356.122 l
S
newpath
44.0000 368.811 m
42.0000 368.811 l
S
newpath
44.0000 381.489 m
44.0000 1.00000 l
S
Q
0.500000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
1 88 8 17 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
44.0000 381.500 m
40.0000 381.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
18 380 7 13 rc
newpath
28.7968 387.437 m
20.2031 387.437 l
20.2031 386.765 l
28.7968 386.765 l
28.7968 387.437 l
h
f
Q
newpath
28.5312 383.234 m
30.6250 382.218 l
30.8281 382.218 l
30.8281 389.484 l
30.8281 389.963 30.8489 390.263 30.8906 390.382  c
30.9322 390.502 31.0156 390.593 31.1406 390.656  c
31.2656 390.718 31.5208 390.755 31.9062 390.765  c
31.9062 391.000 l
28.6718 391.000 l
28.6718 390.765 l
29.0781 390.755 29.3411 390.718 29.4609 390.656  c
29.5807 390.593 29.6640 390.510 29.7109 390.406  c
29.7578 390.302 29.7812 389.994 29.7812 389.484  c
29.7812 384.843 l
29.7812 384.208 29.7604 383.802 29.7187 383.625  c
29.6875 383.489 29.6328 383.390 29.5546 383.328  c
29.4765 383.265 29.3802 383.234 29.2656 383.234  c
29.1093 383.234 28.8958 383.302 28.6250 383.437  c
28.5312 383.234 l
h
35.1250 389.765 m
35.3229 389.765 35.4895 389.835 35.6250 389.976  c
35.7604 390.117 35.8281 390.281 35.8281 390.468  c
35.8281 390.666 35.7604 390.833 35.6250 390.968  c
35.4895 391.104 35.3229 391.171 35.1250 391.171  c
34.9270 391.171 34.7604 391.104 34.6250 390.968  c
34.4895 390.833 34.4218 390.666 34.4218 390.468  c
34.4218 390.270 34.4895 390.104 34.6250 389.968  c
34.7604 389.833 34.9270 389.765 35.1250 389.765  c
h
42.3906 382.390 m
41.8906 383.468 l
39.3125 383.468 l
38.7500 384.625 l
39.8645 384.791 40.7500 385.208 41.4062 385.875  c
41.9687 386.447 42.2500 387.125 42.2500 387.906  c
42.2500 388.364 42.1588 388.786 41.9765 389.171  c
41.7942 389.557 41.5625 389.885 41.2812 390.156  c
41.0000 390.427 40.6875 390.640 40.3437 390.796  c
39.8645 391.036 39.3645 391.156 38.8437 391.156  c
38.3333 391.156 37.9609 391.067 37.7265 390.890  c
37.4921 390.713 37.3750 390.520 37.3750 390.312  c
37.3750 390.187 37.4244 390.080 37.5234 389.992  c
37.6224 389.903 37.7447 389.859 37.8906 389.859  c
37.9947 389.859 38.0885 389.875 38.1718 389.906  c
38.2552 389.937 38.3958 390.026 38.5937 390.171  c
38.9166 390.390 39.2395 390.500 39.5625 390.500  c
40.0625 390.500 40.4974 390.312 40.8671 389.937  c
41.2369 389.562 41.4218 389.104 41.4218 388.562  c
41.4218 388.041 41.2552 387.557 40.9218 387.109  c
40.5885 386.661 40.1302 386.312 39.5468 386.062  c
39.0781 385.875 38.4479 385.765 37.6562 385.734  c
39.3125 382.390 l
42.3906 382.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
44.0000 318.056 m
40.0000 318.056 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
27 317 7 13 rc
newpath
37.7968 324.437 m
29.2031 324.437 l
29.2031 323.765 l
37.7968 323.765 l
37.7968 324.437 l
h
f
Q
newpath
37.5312 320.234 m
39.6250 319.218 l
39.8281 319.218 l
39.8281 326.484 l
39.8281 326.963 39.8489 327.263 39.8906 327.382  c
39.9322 327.502 40.0156 327.593 40.1406 327.656  c
40.2656 327.718 40.5208 327.755 40.9062 327.765  c
40.9062 328.000 l
37.6718 328.000 l
37.6718 327.765 l
38.0781 327.755 38.3411 327.718 38.4609 327.656  c
38.5807 327.593 38.6640 327.510 38.7109 327.406  c
38.7578 327.302 38.7812 326.994 38.7812 326.484  c
38.7812 321.843 l
38.7812 321.208 38.7604 320.802 38.7187 320.625  c
38.6875 320.489 38.6328 320.390 38.5546 320.328  c
38.4765 320.265 38.3802 320.234 38.2656 320.234  c
38.1093 320.234 37.8958 320.302 37.6250 320.437  c
37.5312 320.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
44.0000 254.612 m
40.0000 254.612 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
18 253 7 13 rc
newpath
28.7968 260.437 m
20.2031 260.437 l
20.2031 259.765 l
28.7968 259.765 l
28.7968 260.437 l
h
f
Q
newpath
27.4687 259.750 m
27.4687 258.770 27.6171 257.924 27.9140 257.210  c
28.2109 256.497 28.6041 255.968 29.0937 255.625  c
29.4791 255.354 29.8750 255.218 30.2812 255.218  c
30.9375 255.218 31.5260 255.552 32.0468 256.218  c
32.7031 257.052 33.0312 258.182 33.0312 259.609  c
33.0312 260.609 32.8880 261.458 32.6015 262.156  c
32.3151 262.854 31.9479 263.362 31.5000 263.679  c
31.0520 263.997 30.6250 264.156 30.2187 264.156  c
29.3958 264.156 28.7083 263.671 28.1562 262.703  c
27.6979 261.880 27.4687 260.895 27.4687 259.750  c
h
28.7187 259.906 m
28.7187 261.093 28.8645 262.062 29.1562 262.812  c
29.3958 263.437 29.7552 263.750 30.2343 263.750  c
30.4635 263.750 30.7005 263.648 30.9453 263.445  c
31.1901 263.242 31.3750 262.895 31.5000 262.406  c
31.6979 261.687 31.7968 260.661 31.7968 259.328  c
31.7968 258.349 31.6927 257.531 31.4843 256.875  c
31.3385 256.385 31.1406 256.041 30.8906 255.843  c
30.7239 255.708 30.5156 255.640 30.2656 255.640  c
29.9843 255.640 29.7291 255.765 29.5000 256.015  c
29.1979 256.369 28.9921 256.924 28.8828 257.679  c
28.7734 258.434 28.7187 259.177 28.7187 259.906  c
h
35.1250 262.765 m
35.3229 262.765 35.4895 262.835 35.6250 262.976  c
35.7604 263.117 35.8281 263.281 35.8281 263.468  c
35.8281 263.666 35.7604 263.833 35.6250 263.968  c
35.4895 264.104 35.3229 264.171 35.1250 264.171  c
34.9270 264.171 34.7604 264.104 34.6250 263.968  c
34.4895 263.833 34.4218 263.666 34.4218 263.468  c
34.4218 263.270 34.4895 263.104 34.6250 262.968  c
34.7604 262.833 34.9270 262.765 35.1250 262.765  c
h
42.3906 255.390 m
41.8906 256.468 l
39.3125 256.468 l
38.7500 257.625 l
39.8645 257.791 40.7500 258.208 41.4062 258.875  c
41.9687 259.447 42.2500 260.125 42.2500 260.906  c
42.2500 261.364 42.1588 261.786 41.9765 262.171  c
41.7942 262.557 41.5625 262.885 41.2812 263.156  c
41.0000 263.427 40.6875 263.640 40.3437 263.796  c
39.8645 264.036 39.3645 264.156 38.8437 264.156  c
38.3333 264.156 37.9609 264.067 37.7265 263.890  c
37.4921 263.713 37.3750 263.520 37.3750 263.312  c
37.3750 263.187 37.4244 263.080 37.5234 262.992  c
37.6224 262.903 37.7447 262.859 37.8906 262.859  c
37.9947 262.859 38.0885 262.875 38.1718 262.906  c
38.2552 262.937 38.3958 263.026 38.5937 263.171  c
38.9166 263.390 39.2395 263.500 39.5625 263.500  c
40.0625 263.500 40.4974 263.312 40.8671 262.937  c
41.2369 262.562 41.4218 262.104 41.4218 261.562  c
41.4218 261.041 41.2552 260.557 40.9218 260.109  c
40.5885 259.661 40.1302 259.312 39.5468 259.062  c
39.0781 258.875 38.4479 258.765 37.6562 258.734  c
39.3125 255.390 l
42.3906 255.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
44.0000 191.168 m
40.0000 191.168 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
36.4687 196.750 m
36.4687 195.770 36.6171 194.924 36.9140 194.210  c
37.2109 193.497 37.6041 192.968 38.0937 192.625  c
38.4791 192.354 38.8750 192.218 39.2812 192.218  c
39.9375 192.218 40.5260 192.552 41.0468 193.218  c
41.7031 194.052 42.0312 195.182 42.0312 196.609  c
42.0312 197.609 41.8880 198.458 41.6015 199.156  c
41.3151 199.854 40.9479 200.362 40.5000 200.679  c
40.0520 200.997 39.6250 201.156 39.2187 201.156  c
38.3958 201.156 37.7083 200.671 37.1562 199.703  c
36.6979 198.880 36.4687 197.895 36.4687 196.750  c
h
37.7187 196.906 m
37.7187 198.093 37.8645 199.062 38.1562 199.812  c
38.3958 200.437 38.7552 200.750 39.2343 200.750  c
39.4635 200.750 39.7005 200.648 39.9453 200.445  c
40.1901 200.242 40.3750 199.895 40.5000 199.406  c
40.6979 198.687 40.7968 197.661 40.7968 196.328  c
40.7968 195.349 40.6927 194.531 40.4843 193.875  c
40.3385 193.385 40.1406 193.041 39.8906 192.843  c
39.7239 192.708 39.5156 192.640 39.2656 192.640  c
38.9843 192.640 38.7291 192.765 38.5000 193.015  c
38.1979 193.369 37.9921 193.924 37.8828 194.679  c
37.7734 195.434 37.7187 196.177 37.7187 196.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
44.0000 127.725 m
40.0000 127.725 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
27.4687 132.750 m
27.4687 131.770 27.6171 130.924 27.9140 130.210  c
28.2109 129.497 28.6041 128.968 29.0937 128.625  c
29.4791 128.354 29.8750 128.218 30.2812 128.218  c
30.9375 128.218 31.5260 128.552 32.0468 129.218  c
32.7031 130.052 33.0312 131.182 33.0312 132.609  c
33.0312 133.609 32.8880 134.458 32.6015 135.156  c
32.3151 135.854 31.9479 136.362 31.5000 136.679  c
31.0520 136.997 30.6250 137.156 30.2187 137.156  c
29.3958 137.156 28.7083 136.671 28.1562 135.703  c
27.6979 134.880 27.4687 133.895 27.4687 132.750  c
h
28.7187 132.906 m
28.7187 134.093 28.8645 135.062 29.1562 135.812  c
29.3958 136.437 29.7552 136.750 30.2343 136.750  c
30.4635 136.750 30.7005 136.648 30.9453 136.445  c
31.1901 136.242 31.3750 135.895 31.5000 135.406  c
31.6979 134.687 31.7968 133.661 31.7968 132.328  c
31.7968 131.349 31.6927 130.531 31.4843 129.875  c
31.3385 129.385 31.1406 129.041 30.8906 128.843  c
30.7239 128.708 30.5156 128.640 30.2656 128.640  c
29.9843 128.640 29.7291 128.765 29.5000 129.015  c
29.1979 129.369 28.9921 129.924 28.8828 130.679  c
28.7734 131.434 28.7187 132.177 28.7187 132.906  c
h
35.1250 135.765 m
35.3229 135.765 35.4895 135.835 35.6250 135.976  c
35.7604 136.117 35.8281 136.281 35.8281 136.468  c
35.8281 136.666 35.7604 136.833 35.6250 136.968  c
35.4895 137.104 35.3229 137.171 35.1250 137.171  c
34.9270 137.171 34.7604 137.104 34.6250 136.968  c
34.4895 136.833 34.4218 136.666 34.4218 136.468  c
34.4218 136.270 34.4895 136.104 34.6250 135.968  c
34.7604 135.833 34.9270 135.765 35.1250 135.765  c
h
42.3906 128.390 m
41.8906 129.468 l
39.3125 129.468 l
38.7500 130.625 l
39.8645 130.791 40.7500 131.208 41.4062 131.875  c
41.9687 132.447 42.2500 133.125 42.2500 133.906  c
42.2500 134.364 42.1588 134.786 41.9765 135.171  c
41.7942 135.557 41.5625 135.885 41.2812 136.156  c
41.0000 136.427 40.6875 136.640 40.3437 136.796  c
39.8645 137.036 39.3645 137.156 38.8437 137.156  c
38.3333 137.156 37.9609 137.067 37.7265 136.890  c
37.4921 136.713 37.3750 136.520 37.3750 136.312  c
37.3750 136.187 37.4244 136.080 37.5234 135.992  c
37.6224 135.903 37.7447 135.859 37.8906 135.859  c
37.9947 135.859 38.0885 135.875 38.1718 135.906  c
38.2552 135.937 38.3958 136.026 38.5937 136.171  c
38.9166 136.390 39.2395 136.500 39.5625 136.500  c
40.0625 136.500 40.4974 136.312 40.8671 135.937  c
41.2369 135.562 41.4218 135.104 41.4218 134.562  c
41.4218 134.041 41.2552 133.557 40.9218 133.109  c
40.5885 132.661 40.1302 132.312 39.5468 132.062  c
39.0781 131.875 38.4479 131.765 37.6562 131.734  c
39.3125 128.390 l
42.3906 128.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
44.0000 64.2813 m
40.0000 64.2813 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
37.5312 66.2343 m
39.6250 65.2187 l
39.8281 65.2187 l
39.8281 72.4843 l
39.8281 72.9635 39.8489 73.2630 39.8906 73.3828  c
39.9322 73.5026 40.0156 73.5937 40.1406 73.6562  c
40.2656 73.7187 40.5208 73.7552 40.9062 73.7656  c
40.9062 74.0000 l
37.6718 74.0000 l
37.6718 73.7656 l
38.0781 73.7552 38.3411 73.7187 38.4609 73.6562  c
38.5807 73.5937 38.6640 73.5104 38.7109 73.4062  c
38.7578 73.3020 38.7812 72.9947 38.7812 72.4843  c
38.7812 67.8437 l
38.7812 67.2083 38.7604 66.8020 38.7187 66.6250  c
38.6875 66.4895 38.6328 66.3906 38.5546 66.3281  c
38.4765 66.2656 38.3802 66.2343 38.2656 66.2343  c
38.1093 66.2343 37.8958 66.3020 37.6250 66.4375  c
37.5312 66.2343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
1.00000 w
2 J
0 j
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

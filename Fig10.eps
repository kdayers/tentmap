%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Wednesday, October 20, 2021 5:03:05 PM EDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
2 J
0 j
0.500000 w
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
1.00000 w
2 J
0 j
0.500000 w
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
1.00000 w
2 J
0 j
0 J
1 j
q
q
0.309804 0.309804 0.443137 RG
43.0000 1.75745 340.483 387.242 rc
newpath
44.0000 278.144 m
336.485 40.1254 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
0.309804 0.309804 0.443137 RG
43.0000 1.75745 340.483 387.242 rc
newpath
44.0000 278.144 m
155.955 4.82272 l
156.596 3.75744 l
313.986 388.000 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
3.00000 w
[ 37.5000 7.50000 ] 0 d
41.0000 -0.242546 344.483 391.242 rc
newpath
44.0000 278.144 m
81.4317 113.654 l
81.5318 113.362 l
155.978 113.362 l
156.789 112.065 l
181.380 4.00387 l
182.261 6.88284 l
231.443 223.008 l
231.664 223.217 l
381.483 223.217 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
0.500000 w
0 J
1 j
newpath
358.984 278.144 m
358.984 280.144 l
S
newpath
336.485 278.144 m
336.485 280.144 l
S
newpath
313.986 278.144 m
313.986 280.144 l
S
newpath
291.487 278.144 m
291.487 280.144 l
S
newpath
246.489 278.144 m
246.489 280.144 l
S
newpath
223.991 278.144 m
223.991 280.144 l
S
newpath
201.492 278.144 m
201.492 280.144 l
S
newpath
178.993 278.144 m
178.993 280.144 l
S
newpath
133.995 278.144 m
133.995 280.144 l
S
newpath
111.496 278.144 m
111.496 280.144 l
S
newpath
88.9977 278.144 m
88.9977 280.144 l
S
newpath
66.4988 278.144 m
66.4988 280.144 l
S
newpath
44.0000 278.144 m
381.483 278.144 l
S
Q
0.500000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
204 299 16 18 rc
newpath
210.781 306.921 m
211.031 307.192 211.224 307.463 211.359 307.734  c
211.453 307.921 211.604 308.416 211.812 309.218  c
212.500 308.187 l
212.687 307.937 212.911 307.697 213.171 307.468  c
213.432 307.239 213.661 307.083 213.859 307.000  c
213.984 306.947 214.119 306.921 214.265 306.921  c
214.494 306.921 214.674 306.981 214.804 307.101  c
214.934 307.221 215.000 307.369 215.000 307.546  c
215.000 307.744 214.963 307.880 214.890 307.953  c
214.744 308.078 214.578 308.140 214.390 308.140  c
214.276 308.140 214.156 308.119 214.031 308.078  c
213.791 307.994 213.630 307.953 213.546 307.953  c
213.421 307.953 213.270 308.026 213.093 308.171  c
212.770 308.442 212.385 308.963 211.937 309.734  c
212.578 312.421 l
212.682 312.838 212.768 313.085 212.835 313.164  c
212.903 313.242 212.968 313.281 213.031 313.281  c
213.145 313.281 213.276 313.224 213.421 313.109  c
213.703 312.869 213.947 312.557 214.156 312.171  c
214.421 312.312 l
214.099 312.927 213.682 313.437 213.171 313.843  c
212.890 314.072 212.651 314.187 212.453 314.187  c
212.161 314.187 211.927 314.020 211.750 313.687  c
211.645 313.489 211.421 312.614 211.078 311.062  c
210.265 312.479 209.614 313.390 209.125 313.796  c
208.802 314.057 208.494 314.187 208.203 314.187  c
207.984 314.187 207.791 314.109 207.625 313.953  c
207.500 313.838 207.437 313.687 207.437 313.500  c
207.437 313.322 207.494 313.177 207.609 313.062  c
207.724 312.947 207.864 312.890 208.031 312.890  c
208.197 312.890 208.375 312.974 208.562 313.140  c
208.697 313.265 208.802 313.328 208.875 313.328  c
208.937 313.328 209.020 313.286 209.125 313.203  c
209.364 313.005 209.695 312.578 210.117 311.921  c
210.539 311.265 210.817 310.791 210.953 310.500  c
210.630 309.229 210.453 308.557 210.421 308.484  c
210.307 308.151 210.153 307.914 209.960 307.773  c
209.768 307.632 209.484 307.562 209.109 307.562  c
208.984 307.562 208.843 307.567 208.687 307.578  c
208.687 307.296 l
210.781 306.921 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
44.0000 278.144 m
44.0000 282.144 l
S
Q
q
newpath
156.494 278.144 m
156.494 282.144 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
154.468 296.750 m
154.468 295.770 154.617 294.924 154.914 294.210  c
155.210 293.497 155.604 292.968 156.093 292.625  c
156.479 292.354 156.875 292.218 157.281 292.218  c
157.937 292.218 158.526 292.552 159.046 293.218  c
159.703 294.052 160.031 295.182 160.031 296.609  c
160.031 297.609 159.888 298.458 159.601 299.156  c
159.315 299.854 158.947 300.362 158.500 300.679  c
158.052 300.997 157.625 301.156 157.218 301.156  c
156.395 301.156 155.708 300.671 155.156 299.703  c
154.697 298.880 154.468 297.895 154.468 296.750  c
h
155.718 296.906 m
155.718 298.093 155.864 299.062 156.156 299.812  c
156.395 300.437 156.755 300.750 157.234 300.750  c
157.463 300.750 157.700 300.648 157.945 300.445  c
158.190 300.242 158.375 299.895 158.500 299.406  c
158.697 298.687 158.796 297.661 158.796 296.328  c
158.796 295.349 158.692 294.531 158.484 293.875  c
158.338 293.385 158.140 293.041 157.890 292.843  c
157.724 292.708 157.515 292.640 157.265 292.640  c
156.984 292.640 156.729 292.765 156.500 293.015  c
156.197 293.369 155.992 293.924 155.882 294.679  c
155.773 295.434 155.718 296.177 155.718 296.906  c
h
162.125 299.765 m
162.322 299.765 162.489 299.835 162.625 299.976  c
162.760 300.117 162.828 300.281 162.828 300.468  c
162.828 300.666 162.760 300.833 162.625 300.968  c
162.489 301.104 162.322 301.171 162.125 301.171  c
161.927 301.171 161.760 301.104 161.625 300.968  c
161.489 300.833 161.421 300.666 161.421 300.468  c
161.421 300.270 161.489 300.104 161.625 299.968  c
161.760 299.833 161.927 299.765 162.125 299.765  c
h
169.390 292.390 m
168.890 293.468 l
166.312 293.468 l
165.750 294.625 l
166.864 294.791 167.750 295.208 168.406 295.875  c
168.968 296.447 169.250 297.125 169.250 297.906  c
169.250 298.364 169.158 298.786 168.976 299.171  c
168.794 299.557 168.562 299.885 168.281 300.156  c
168.000 300.427 167.687 300.640 167.343 300.796  c
166.864 301.036 166.364 301.156 165.843 301.156  c
165.333 301.156 164.960 301.067 164.726 300.890  c
164.492 300.713 164.375 300.520 164.375 300.312  c
164.375 300.187 164.424 300.080 164.523 299.992  c
164.622 299.903 164.744 299.859 164.890 299.859  c
164.994 299.859 165.088 299.875 165.171 299.906  c
165.255 299.937 165.395 300.026 165.593 300.171  c
165.916 300.390 166.239 300.500 166.562 300.500  c
167.062 300.500 167.497 300.312 167.867 299.937  c
168.237 299.562 168.421 299.104 168.421 298.562  c
168.421 298.041 168.255 297.557 167.921 297.109  c
167.588 296.661 167.130 296.312 166.546 296.062  c
166.078 295.875 165.447 295.765 164.656 295.734  c
166.312 292.390 l
169.390 292.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
268.988 278.144 m
268.988 282.144 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
271.531 293.234 m
273.625 292.218 l
273.828 292.218 l
273.828 299.484 l
273.828 299.963 273.849 300.263 273.890 300.382  c
273.932 300.502 274.015 300.593 274.140 300.656  c
274.265 300.718 274.520 300.755 274.906 300.765  c
274.906 301.000 l
271.671 301.000 l
271.671 300.765 l
272.078 300.755 272.341 300.718 272.460 300.656  c
272.580 300.593 272.664 300.510 272.710 300.406  c
272.757 300.302 272.781 299.994 272.781 299.484  c
272.781 294.843 l
272.781 294.208 272.760 293.802 272.718 293.625  c
272.687 293.489 272.632 293.390 272.554 293.328  c
272.476 293.265 272.380 293.234 272.265 293.234  c
272.109 293.234 271.895 293.302 271.625 293.437  c
271.531 293.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
381.483 278.144 m
381.483 282.144 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
380.531 293.234 m
382.625 292.218 l
382.828 292.218 l
382.828 299.484 l
382.828 299.963 382.849 300.263 382.890 300.382  c
382.932 300.502 383.015 300.593 383.140 300.656  c
383.265 300.718 383.520 300.755 383.906 300.765  c
383.906 301.000 l
380.671 301.000 l
380.671 300.765 l
381.078 300.755 381.341 300.718 381.460 300.656  c
381.580 300.593 381.664 300.510 381.710 300.406  c
381.757 300.302 381.781 299.994 381.781 299.484  c
381.781 294.843 l
381.781 294.208 381.760 293.802 381.718 293.625  c
381.687 293.489 381.632 293.390 381.554 293.328  c
381.476 293.265 381.380 293.234 381.265 293.234  c
381.109 293.234 380.895 293.302 380.625 293.437  c
380.531 293.234 l
h
387.125 299.765 m
387.322 299.765 387.489 299.835 387.625 299.976  c
387.760 300.117 387.828 300.281 387.828 300.468  c
387.828 300.666 387.760 300.833 387.625 300.968  c
387.489 301.104 387.322 301.171 387.125 301.171  c
386.927 301.171 386.760 301.104 386.625 300.968  c
386.489 300.833 386.421 300.666 386.421 300.468  c
386.421 300.270 386.489 300.104 386.625 299.968  c
386.760 299.833 386.927 299.765 387.125 299.765  c
h
394.390 292.390 m
393.890 293.468 l
391.312 293.468 l
390.750 294.625 l
391.864 294.791 392.750 295.208 393.406 295.875  c
393.968 296.447 394.250 297.125 394.250 297.906  c
394.250 298.364 394.158 298.786 393.976 299.171  c
393.794 299.557 393.562 299.885 393.281 300.156  c
393.000 300.427 392.687 300.640 392.343 300.796  c
391.864 301.036 391.364 301.156 390.843 301.156  c
390.333 301.156 389.960 301.067 389.726 300.890  c
389.492 300.713 389.375 300.520 389.375 300.312  c
389.375 300.187 389.424 300.080 389.523 299.992  c
389.622 299.903 389.744 299.859 389.890 299.859  c
389.994 299.859 390.088 299.875 390.171 299.906  c
390.255 299.937 390.395 300.026 390.593 300.171  c
390.916 300.390 391.239 300.500 391.562 300.500  c
392.062 300.500 392.497 300.312 392.867 299.937  c
393.237 299.562 393.421 299.104 393.421 298.562  c
393.421 298.041 393.255 297.557 392.921 297.109  c
392.588 296.661 392.130 296.312 391.546 296.062  c
391.078 295.875 390.447 295.765 389.656 295.734  c
391.312 292.390 l
394.390 292.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
1.00000 w
2 J
0 j
q
0.500000 w
0 J
1 j
newpath
44.0000 21.8162 m
42.0000 21.8162 l
S
newpath
44.0000 40.1254 m
42.0000 40.1254 l
S
newpath
44.0000 58.4346 m
42.0000 58.4346 l
S
newpath
44.0000 76.7438 m
42.0000 76.7438 l
S
newpath
44.0000 113.362 m
42.0000 113.362 l
S
newpath
44.0000 131.671 m
42.0000 131.671 l
S
newpath
44.0000 149.980 m
42.0000 149.980 l
S
newpath
44.0000 168.289 m
42.0000 168.289 l
S
newpath
44.0000 204.908 m
42.0000 204.908 l
S
newpath
44.0000 223.217 m
42.0000 223.217 l
S
newpath
44.0000 241.526 m
42.0000 241.526 l
S
newpath
44.0000 259.835 m
42.0000 259.835 l
S
newpath
44.0000 296.454 m
42.0000 296.454 l
S
newpath
44.0000 314.763 m
42.0000 314.763 l
S
newpath
44.0000 333.072 m
42.0000 333.072 l
S
newpath
44.0000 351.381 m
42.0000 351.381 l
S
newpath
44.0000 388.000 m
44.0000 3.75744 l
S
Q
0.500000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
1 131 8 18 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
44.0000 369.690 m
40.0000 369.690 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
18 368 7 13 rc
newpath
28.7968 375.437 m
20.2031 375.437 l
20.2031 374.765 l
28.7968 374.765 l
28.7968 375.437 l
h
f
Q
newpath
27.4687 374.750 m
27.4687 373.770 27.6171 372.924 27.9140 372.210  c
28.2109 371.497 28.6041 370.968 29.0937 370.625  c
29.4791 370.354 29.8750 370.218 30.2812 370.218  c
30.9375 370.218 31.5260 370.552 32.0468 371.218  c
32.7031 372.052 33.0312 373.182 33.0312 374.609  c
33.0312 375.609 32.8880 376.458 32.6015 377.156  c
32.3151 377.854 31.9479 378.362 31.5000 378.679  c
31.0520 378.997 30.6250 379.156 30.2187 379.156  c
29.3958 379.156 28.7083 378.671 28.1562 377.703  c
27.6979 376.880 27.4687 375.895 27.4687 374.750  c
h
28.7187 374.906 m
28.7187 376.093 28.8645 377.062 29.1562 377.812  c
29.3958 378.437 29.7552 378.750 30.2343 378.750  c
30.4635 378.750 30.7005 378.648 30.9453 378.445  c
31.1901 378.242 31.3750 377.895 31.5000 377.406  c
31.6979 376.687 31.7968 375.661 31.7968 374.328  c
31.7968 373.349 31.6927 372.531 31.4843 371.875  c
31.3385 371.385 31.1406 371.041 30.8906 370.843  c
30.7239 370.708 30.5156 370.640 30.2656 370.640  c
29.9843 370.640 29.7291 370.765 29.5000 371.015  c
29.1979 371.369 28.9921 371.924 28.8828 372.679  c
28.7734 373.434 28.7187 374.177 28.7187 374.906  c
h
35.1250 377.765 m
35.3229 377.765 35.4895 377.835 35.6250 377.976  c
35.7604 378.117 35.8281 378.281 35.8281 378.468  c
35.8281 378.666 35.7604 378.833 35.6250 378.968  c
35.4895 379.104 35.3229 379.171 35.1250 379.171  c
34.9270 379.171 34.7604 379.104 34.6250 378.968  c
34.4895 378.833 34.4218 378.666 34.4218 378.468  c
34.4218 378.270 34.4895 378.104 34.6250 377.968  c
34.7604 377.833 34.9270 377.765 35.1250 377.765  c
h
42.3906 370.390 m
41.8906 371.468 l
39.3125 371.468 l
38.7500 372.625 l
39.8645 372.791 40.7500 373.208 41.4062 373.875  c
41.9687 374.447 42.2500 375.125 42.2500 375.906  c
42.2500 376.364 42.1588 376.786 41.9765 377.171  c
41.7942 377.557 41.5625 377.885 41.2812 378.156  c
41.0000 378.427 40.6875 378.640 40.3437 378.796  c
39.8645 379.036 39.3645 379.156 38.8437 379.156  c
38.3333 379.156 37.9609 379.067 37.7265 378.890  c
37.4921 378.713 37.3750 378.520 37.3750 378.312  c
37.3750 378.187 37.4244 378.080 37.5234 377.992  c
37.6224 377.903 37.7447 377.859 37.8906 377.859  c
37.9947 377.859 38.0885 377.875 38.1718 377.906  c
38.2552 377.937 38.3958 378.026 38.5937 378.171  c
38.9166 378.390 39.2395 378.500 39.5625 378.500  c
40.0625 378.500 40.4974 378.312 40.8671 377.937  c
41.2369 377.562 41.4218 377.104 41.4218 376.562  c
41.4218 376.041 41.2552 375.557 40.9218 375.109  c
40.5885 374.661 40.1302 374.312 39.5468 374.062  c
39.0781 373.875 38.4479 373.765 37.6562 373.734  c
39.3125 370.390 l
42.3906 370.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
44.0000 278.144 m
40.0000 278.144 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
36.4687 283.750 m
36.4687 282.770 36.6171 281.924 36.9140 281.210  c
37.2109 280.497 37.6041 279.968 38.0937 279.625  c
38.4791 279.354 38.8750 279.218 39.2812 279.218  c
39.9375 279.218 40.5260 279.552 41.0468 280.218  c
41.7031 281.052 42.0312 282.182 42.0312 283.609  c
42.0312 284.609 41.8880 285.458 41.6015 286.156  c
41.3151 286.854 40.9479 287.362 40.5000 287.679  c
40.0520 287.997 39.6250 288.156 39.2187 288.156  c
38.3958 288.156 37.7083 287.671 37.1562 286.703  c
36.6979 285.880 36.4687 284.895 36.4687 283.750  c
h
37.7187 283.906 m
37.7187 285.093 37.8645 286.062 38.1562 286.812  c
38.3958 287.437 38.7552 287.750 39.2343 287.750  c
39.4635 287.750 39.7005 287.648 39.9453 287.445  c
40.1901 287.242 40.3750 286.895 40.5000 286.406  c
40.6979 285.687 40.7968 284.661 40.7968 283.328  c
40.7968 282.349 40.6927 281.531 40.4843 280.875  c
40.3385 280.385 40.1406 280.041 39.8906 279.843  c
39.7239 279.708 39.5156 279.640 39.2656 279.640  c
38.9843 279.640 38.7291 279.765 38.5000 280.015  c
38.1979 280.369 37.9921 280.924 37.8828 281.679  c
37.7734 282.434 37.7187 283.177 37.7187 283.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
44.0000 186.599 m
40.0000 186.599 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
27.4687 191.750 m
27.4687 190.770 27.6171 189.924 27.9140 189.210  c
28.2109 188.497 28.6041 187.968 29.0937 187.625  c
29.4791 187.354 29.8750 187.218 30.2812 187.218  c
30.9375 187.218 31.5260 187.552 32.0468 188.218  c
32.7031 189.052 33.0312 190.182 33.0312 191.609  c
33.0312 192.609 32.8880 193.458 32.6015 194.156  c
32.3151 194.854 31.9479 195.362 31.5000 195.679  c
31.0520 195.997 30.6250 196.156 30.2187 196.156  c
29.3958 196.156 28.7083 195.671 28.1562 194.703  c
27.6979 193.880 27.4687 192.895 27.4687 191.750  c
h
28.7187 191.906 m
28.7187 193.093 28.8645 194.062 29.1562 194.812  c
29.3958 195.437 29.7552 195.750 30.2343 195.750  c
30.4635 195.750 30.7005 195.648 30.9453 195.445  c
31.1901 195.242 31.3750 194.895 31.5000 194.406  c
31.6979 193.687 31.7968 192.661 31.7968 191.328  c
31.7968 190.349 31.6927 189.531 31.4843 188.875  c
31.3385 188.385 31.1406 188.041 30.8906 187.843  c
30.7239 187.708 30.5156 187.640 30.2656 187.640  c
29.9843 187.640 29.7291 187.765 29.5000 188.015  c
29.1979 188.369 28.9921 188.924 28.8828 189.679  c
28.7734 190.434 28.7187 191.177 28.7187 191.906  c
h
35.1250 194.765 m
35.3229 194.765 35.4895 194.835 35.6250 194.976  c
35.7604 195.117 35.8281 195.281 35.8281 195.468  c
35.8281 195.666 35.7604 195.833 35.6250 195.968  c
35.4895 196.104 35.3229 196.171 35.1250 196.171  c
34.9270 196.171 34.7604 196.104 34.6250 195.968  c
34.4895 195.833 34.4218 195.666 34.4218 195.468  c
34.4218 195.270 34.4895 195.104 34.6250 194.968  c
34.7604 194.833 34.9270 194.765 35.1250 194.765  c
h
42.3906 187.390 m
41.8906 188.468 l
39.3125 188.468 l
38.7500 189.625 l
39.8645 189.791 40.7500 190.208 41.4062 190.875  c
41.9687 191.447 42.2500 192.125 42.2500 192.906  c
42.2500 193.364 42.1588 193.786 41.9765 194.171  c
41.7942 194.557 41.5625 194.885 41.2812 195.156  c
41.0000 195.427 40.6875 195.640 40.3437 195.796  c
39.8645 196.036 39.3645 196.156 38.8437 196.156  c
38.3333 196.156 37.9609 196.067 37.7265 195.890  c
37.4921 195.713 37.3750 195.520 37.3750 195.312  c
37.3750 195.187 37.4244 195.080 37.5234 194.992  c
37.6224 194.903 37.7447 194.859 37.8906 194.859  c
37.9947 194.859 38.0885 194.875 38.1718 194.906  c
38.2552 194.937 38.3958 195.026 38.5937 195.171  c
38.9166 195.390 39.2395 195.500 39.5625 195.500  c
40.0625 195.500 40.4974 195.312 40.8671 194.937  c
41.2369 194.562 41.4218 194.104 41.4218 193.562  c
41.4218 193.041 41.2552 192.557 40.9218 192.109  c
40.5885 191.661 40.1302 191.312 39.5468 191.062  c
39.0781 190.875 38.4479 190.765 37.6562 190.734  c
39.3125 187.390 l
42.3906 187.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
44.0000 95.0530 m
40.0000 95.0530 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
37.5312 97.2343 m
39.6250 96.2187 l
39.8281 96.2187 l
39.8281 103.484 l
39.8281 103.963 39.8489 104.263 39.8906 104.382  c
39.9322 104.502 40.0156 104.593 40.1406 104.656  c
40.2656 104.718 40.5208 104.755 40.9062 104.765  c
40.9062 105.000 l
37.6718 105.000 l
37.6718 104.765 l
38.0781 104.755 38.3411 104.718 38.4609 104.656  c
38.5807 104.593 38.6640 104.510 38.7109 104.406  c
38.7578 104.302 38.7812 103.994 38.7812 103.484  c
38.7812 98.8437 l
38.7812 98.2083 38.7604 97.8020 38.7187 97.6250  c
38.6875 97.4895 38.6328 97.3906 38.5546 97.3281  c
38.4765 97.2656 38.3802 97.2343 38.2656 97.2343  c
38.1093 97.2343 37.8958 97.3020 37.6250 97.4375  c
37.5312 97.2343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
1.00000 w
2 J
0 j
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Saturday, October 16, 2021 9:35:39 PM EDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
2 J
0 j
0.500000 w
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
1.00000 w
2 J
0 j
0.500000 w
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
1.00000 w
2 J
0 j
0 J
1 j
q
q
2.00000 w
1.00000 0 0 RG
64.0000 6.01370 318.978 363.986 rc
newpath
66.0000 224.405 m
72.2795 368.000 l
78.5591 296.202 l
84.8387 368.000 l
97.3978 224.405 l
103.677 368.000 l
109.957 224.405 l
116.236 224.405 l
122.516 296.202 l
128.795 224.405 l
135.075 296.202 l
153.914 296.202 l
160.193 224.405 l
166.473 224.405 l
172.752 368.000 l
185.312 224.405 l
191.591 224.405 l
197.871 368.000 l
336.021 368.000 l
342.301 296.202 l
348.581 368.000 l
354.860 296.202 l
367.419 296.202 l
373.699 368.000 l
379.978 224.405 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
2.00000 w
0 0 1.00000 RG
64.0000 6.01370 318.978 363.986 rc
newpath
66.0000 224.405 m
72.2795 224.405 l
84.8387 368.000 l
91.1183 224.405 l
97.3978 224.405 l
109.957 368.000 l
116.236 296.202 l
122.516 296.202 l
128.795 152.608 l
135.075 224.405 l
141.354 152.608 l
147.634 224.405 l
153.914 368.000 l
160.193 224.405 l
166.473 296.202 l
172.752 224.405 l
185.312 224.405 l
191.591 152.608 l
197.871 368.000 l
204.150 152.608 l
210.430 368.000 l
216.709 368.000 l
222.989 296.202 l
229.269 368.000 l
235.548 224.405 l
248.107 80.8109 l
260.666 368.000 l
266.946 224.405 l
273.226 368.000 l
285.785 224.405 l
292.064 296.202 l
298.344 296.202 l
304.624 368.000 l
310.903 296.202 l
317.183 368.000 l
323.462 296.202 l
336.021 296.202 l
342.301 224.405 l
348.581 296.202 l
354.860 224.405 l
361.140 296.202 l
367.419 296.202 l
373.699 224.405 l
379.978 224.405 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
2.00000 w
0 1.00000 0 RG
64.0000 6.01370 318.978 363.986 rc
newpath
66.0000 368.000 m
72.2795 296.202 l
78.5591 368.000 l
97.3978 152.608 l
103.677 152.608 l
109.957 224.405 l
116.236 224.405 l
122.516 368.000 l
141.354 152.608 l
147.634 152.608 l
153.914 224.405 l
160.193 224.405 l
166.473 368.000 l
185.312 152.608 l
197.871 152.608 l
210.430 296.202 l
216.709 224.405 l
222.989 368.000 l
336.021 368.000 l
342.301 296.202 l
348.581 296.202 l
354.860 368.000 l
361.140 224.405 l
367.419 296.202 l
373.699 296.202 l
379.978 224.405 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
2.00000 w
64.0000 6.01370 318.978 363.986 rc
newpath
229.269 9.01370 m
235.548 296.202 l
241.828 152.608 l
248.107 152.608 l
254.387 224.405 l
260.666 152.608 l
266.946 296.202 l
279.505 296.202 l
285.785 368.000 l
292.064 296.202 l
298.344 296.202 l
304.624 224.405 l
310.903 368.000 l
317.183 224.405 l
323.462 296.202 l
329.742 224.405 l
336.021 368.000 l
342.301 224.405 l
348.581 152.608 l
354.860 224.405 l
361.140 152.608 l
373.699 296.202 l
379.978 296.202 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
0.500000 w
0 J
1 j
newpath
348.581 368.000 m
348.581 370.000 l
S
newpath
285.785 368.000 m
285.785 370.000 l
S
newpath
222.989 368.000 m
222.989 370.000 l
S
newpath
160.193 368.000 m
160.193 370.000 l
S
newpath
97.3978 368.000 m
97.3978 370.000 l
S
newpath
64.0000 368.000 m
379.978 368.000 l
S
Q
0.500000 w
0 J
1 j
q
q
newpath
66.0000 368.000 m
66.0000 372.000 l
S
Q
q
newpath
128.795 368.000 m
128.795 372.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
129.953 389.343 m
129.359 391.000 l
124.281 391.000 l
124.281 390.765 l
125.770 389.401 126.820 388.286 127.429 387.421  c
128.039 386.557 128.343 385.770 128.343 385.062  c
128.343 384.510 128.177 384.059 127.843 383.710  c
127.510 383.362 127.109 383.187 126.640 383.187  c
126.224 383.187 125.846 383.309 125.507 383.554  c
125.169 383.799 124.921 384.161 124.765 384.640  c
124.531 384.640 l
124.635 383.859 124.906 383.260 125.343 382.843  c
125.781 382.427 126.328 382.218 126.984 382.218  c
127.682 382.218 128.265 382.442 128.734 382.890  c
129.203 383.338 129.437 383.864 129.437 384.468  c
129.437 384.906 129.333 385.343 129.125 385.781  c
128.812 386.468 128.307 387.192 127.609 387.953  c
126.557 389.109 125.895 389.807 125.625 390.046  c
127.875 390.046 l
128.333 390.046 128.653 390.028 128.835 389.992  c
129.018 389.955 129.184 389.885 129.335 389.781  c
129.487 389.677 129.614 389.531 129.718 389.343  c
129.953 389.343 l
h
136.328 382.218 m
136.328 382.453 l
135.765 382.505 135.307 382.614 134.953 382.781  c
134.599 382.947 134.250 383.203 133.906 383.546  c
133.562 383.890 133.278 384.273 133.054 384.695  c
132.830 385.117 132.640 385.614 132.484 386.187  c
133.099 385.770 133.713 385.562 134.328 385.562  c
134.911 385.562 135.419 385.799 135.851 386.273  c
136.283 386.747 136.500 387.359 136.500 388.109  c
136.500 388.828 136.281 389.484 135.843 390.078  c
135.322 390.796 134.630 391.156 133.765 391.156  c
133.171 391.156 132.671 390.958 132.265 390.562  c
131.463 389.812 131.062 388.833 131.062 387.625  c
131.062 386.854 131.216 386.122 131.523 385.429  c
131.830 384.737 132.270 384.119 132.843 383.578  c
133.416 383.036 133.966 382.674 134.492 382.492  c
135.018 382.309 135.505 382.218 135.953 382.218  c
136.328 382.218 l
h
132.375 386.656 m
132.302 387.229 132.265 387.692 132.265 388.046  c
132.265 388.453 132.341 388.893 132.492 389.367  c
132.643 389.841 132.864 390.218 133.156 390.500  c
133.375 390.697 133.640 390.796 133.953 390.796  c
134.317 390.796 134.645 390.622 134.937 390.273  c
135.229 389.924 135.375 389.432 135.375 388.796  c
135.375 388.067 135.229 387.440 134.937 386.914  c
134.645 386.388 134.239 386.125 133.718 386.125  c
133.552 386.125 133.377 386.158 133.195 386.226  c
133.013 386.294 132.739 386.437 132.375 386.656  c
h
137.468 386.750 m
137.468 385.770 137.617 384.924 137.914 384.210  c
138.210 383.497 138.604 382.968 139.093 382.625  c
139.479 382.354 139.875 382.218 140.281 382.218  c
140.937 382.218 141.526 382.552 142.046 383.218  c
142.703 384.052 143.031 385.182 143.031 386.609  c
143.031 387.609 142.888 388.458 142.601 389.156  c
142.315 389.854 141.947 390.362 141.500 390.679  c
141.052 390.997 140.625 391.156 140.218 391.156  c
139.395 391.156 138.708 390.671 138.156 389.703  c
137.697 388.880 137.468 387.895 137.468 386.750  c
h
138.718 386.906 m
138.718 388.093 138.864 389.062 139.156 389.812  c
139.395 390.437 139.755 390.750 140.234 390.750  c
140.463 390.750 140.700 390.648 140.945 390.445  c
141.190 390.242 141.375 389.895 141.500 389.406  c
141.697 388.687 141.796 387.661 141.796 386.328  c
141.796 385.349 141.692 384.531 141.484 383.875  c
141.338 383.385 141.140 383.041 140.890 382.843  c
140.724 382.708 140.515 382.640 140.265 382.640  c
139.984 382.640 139.729 382.765 139.500 383.015  c
139.197 383.369 138.992 383.924 138.882 384.679  c
138.773 385.434 138.718 386.177 138.718 386.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
191.591 368.000 m
191.591 372.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
192.953 389.343 m
192.359 391.000 l
187.281 391.000 l
187.281 390.765 l
188.770 389.401 189.820 388.286 190.429 387.421  c
191.039 386.557 191.343 385.770 191.343 385.062  c
191.343 384.510 191.177 384.059 190.843 383.710  c
190.510 383.362 190.109 383.187 189.640 383.187  c
189.224 383.187 188.846 383.309 188.507 383.554  c
188.169 383.799 187.921 384.161 187.765 384.640  c
187.531 384.640 l
187.635 383.859 187.906 383.260 188.343 382.843  c
188.781 382.427 189.328 382.218 189.984 382.218  c
190.682 382.218 191.265 382.442 191.734 382.890  c
192.203 383.338 192.437 383.864 192.437 384.468  c
192.437 384.906 192.333 385.343 192.125 385.781  c
191.812 386.468 191.307 387.192 190.609 387.953  c
189.557 389.109 188.895 389.807 188.625 390.046  c
190.875 390.046 l
191.333 390.046 191.653 390.028 191.835 389.992  c
192.018 389.955 192.184 389.885 192.335 389.781  c
192.487 389.677 192.614 389.531 192.718 389.343  c
192.953 389.343 l
h
194.812 382.390 m
199.421 382.390 l
199.421 382.640 l
196.546 391.171 l
195.843 391.171 l
198.406 383.421 l
196.046 383.421 l
195.567 383.421 195.229 383.479 195.031 383.593  c
194.666 383.791 194.380 384.093 194.171 384.500  c
193.984 384.437 l
194.812 382.390 l
h
200.468 386.750 m
200.468 385.770 200.617 384.924 200.914 384.210  c
201.210 383.497 201.604 382.968 202.093 382.625  c
202.479 382.354 202.875 382.218 203.281 382.218  c
203.937 382.218 204.526 382.552 205.046 383.218  c
205.703 384.052 206.031 385.182 206.031 386.609  c
206.031 387.609 205.888 388.458 205.601 389.156  c
205.315 389.854 204.947 390.362 204.500 390.679  c
204.052 390.997 203.625 391.156 203.218 391.156  c
202.395 391.156 201.708 390.671 201.156 389.703  c
200.697 388.880 200.468 387.895 200.468 386.750  c
h
201.718 386.906 m
201.718 388.093 201.864 389.062 202.156 389.812  c
202.395 390.437 202.755 390.750 203.234 390.750  c
203.463 390.750 203.700 390.648 203.945 390.445  c
204.190 390.242 204.375 389.895 204.500 389.406  c
204.697 388.687 204.796 387.661 204.796 386.328  c
204.796 385.349 204.692 384.531 204.484 383.875  c
204.338 383.385 204.140 383.041 203.890 382.843  c
203.724 382.708 203.515 382.640 203.265 382.640  c
202.984 382.640 202.729 382.765 202.500 383.015  c
202.197 383.369 201.992 383.924 201.882 384.679  c
201.773 385.434 201.718 386.177 201.718 386.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
254.387 368.000 m
254.387 372.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
255.953 389.343 m
255.359 391.000 l
250.281 391.000 l
250.281 390.765 l
251.770 389.401 252.820 388.286 253.429 387.421  c
254.039 386.557 254.343 385.770 254.343 385.062  c
254.343 384.510 254.177 384.059 253.843 383.710  c
253.510 383.362 253.109 383.187 252.640 383.187  c
252.224 383.187 251.846 383.309 251.507 383.554  c
251.169 383.799 250.921 384.161 250.765 384.640  c
250.531 384.640 l
250.635 383.859 250.906 383.260 251.343 382.843  c
251.781 382.427 252.328 382.218 252.984 382.218  c
253.682 382.218 254.265 382.442 254.734 382.890  c
255.203 383.338 255.437 383.864 255.437 384.468  c
255.437 384.906 255.333 385.343 255.125 385.781  c
254.812 386.468 254.307 387.192 253.609 387.953  c
252.557 389.109 251.895 389.807 251.625 390.046  c
253.875 390.046 l
254.333 390.046 254.653 390.028 254.835 389.992  c
255.018 389.955 255.184 389.885 255.335 389.781  c
255.487 389.677 255.614 389.531 255.718 389.343  c
255.953 389.343 l
h
259.000 386.671 m
258.312 386.109 257.869 385.658 257.671 385.320  c
257.474 384.981 257.375 384.630 257.375 384.265  c
257.375 383.703 257.591 383.221 258.023 382.820  c
258.455 382.419 259.031 382.218 259.750 382.218  c
260.447 382.218 261.007 382.406 261.429 382.781  c
261.851 383.156 262.062 383.583 262.062 384.062  c
262.062 384.385 261.947 384.713 261.718 385.046  c
261.489 385.380 261.015 385.776 260.296 386.234  c
261.036 386.807 261.526 387.260 261.765 387.593  c
262.088 388.020 262.250 388.474 262.250 388.953  c
262.250 389.557 262.020 390.075 261.562 390.507  c
261.104 390.940 260.500 391.156 259.750 391.156  c
258.927 391.156 258.286 390.901 257.828 390.390  c
257.463 389.974 257.281 389.520 257.281 389.031  c
257.281 388.656 257.411 388.281 257.671 387.906  c
257.932 387.531 258.375 387.119 259.000 386.671  c
h
259.984 385.984 m
260.494 385.526 260.817 385.164 260.953 384.898  c
261.088 384.632 261.156 384.333 261.156 384.000  c
261.156 383.562 261.031 383.216 260.781 382.960  c
260.531 382.705 260.192 382.578 259.765 382.578  c
259.328 382.578 258.974 382.703 258.703 382.953  c
258.432 383.203 258.296 383.494 258.296 383.828  c
258.296 384.046 258.354 384.268 258.468 384.492  c
258.583 384.716 258.744 384.927 258.953 385.125  c
259.984 385.984 l
h
259.296 386.906 m
258.942 387.197 258.682 387.518 258.515 387.867  c
258.349 388.216 258.265 388.593 258.265 389.000  c
258.265 389.552 258.414 389.992 258.710 390.320  c
259.007 390.648 259.385 390.812 259.843 390.812  c
260.302 390.812 260.669 390.682 260.945 390.421  c
261.221 390.161 261.359 389.849 261.359 389.484  c
261.359 389.182 261.276 388.906 261.109 388.656  c
260.817 388.208 260.213 387.625 259.296 386.906  c
h
263.468 386.750 m
263.468 385.770 263.617 384.924 263.914 384.210  c
264.210 383.497 264.604 382.968 265.093 382.625  c
265.479 382.354 265.875 382.218 266.281 382.218  c
266.937 382.218 267.526 382.552 268.046 383.218  c
268.703 384.052 269.031 385.182 269.031 386.609  c
269.031 387.609 268.888 388.458 268.601 389.156  c
268.315 389.854 267.947 390.362 267.500 390.679  c
267.052 390.997 266.625 391.156 266.218 391.156  c
265.395 391.156 264.708 390.671 264.156 389.703  c
263.697 388.880 263.468 387.895 263.468 386.750  c
h
264.718 386.906 m
264.718 388.093 264.864 389.062 265.156 389.812  c
265.395 390.437 265.755 390.750 266.234 390.750  c
266.463 390.750 266.700 390.648 266.945 390.445  c
267.190 390.242 267.375 389.895 267.500 389.406  c
267.697 388.687 267.796 387.661 267.796 386.328  c
267.796 385.349 267.692 384.531 267.484 383.875  c
267.338 383.385 267.140 383.041 266.890 382.843  c
266.724 382.708 266.515 382.640 266.265 382.640  c
265.984 382.640 265.729 382.765 265.500 383.015  c
265.197 383.369 264.992 383.924 264.882 384.679  c
264.773 385.434 264.718 386.177 264.718 386.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
317.183 368.000 m
317.183 372.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
318.953 389.343 m
318.359 391.000 l
313.281 391.000 l
313.281 390.765 l
314.770 389.401 315.820 388.286 316.429 387.421  c
317.039 386.557 317.343 385.770 317.343 385.062  c
317.343 384.510 317.177 384.059 316.843 383.710  c
316.510 383.362 316.109 383.187 315.640 383.187  c
315.224 383.187 314.846 383.309 314.507 383.554  c
314.169 383.799 313.921 384.161 313.765 384.640  c
313.531 384.640 l
313.635 383.859 313.906 383.260 314.343 382.843  c
314.781 382.427 315.328 382.218 315.984 382.218  c
316.682 382.218 317.265 382.442 317.734 382.890  c
318.203 383.338 318.437 383.864 318.437 384.468  c
318.437 384.906 318.333 385.343 318.125 385.781  c
317.812 386.468 317.307 387.192 316.609 387.953  c
315.557 389.109 314.895 389.807 314.625 390.046  c
316.875 390.046 l
317.333 390.046 317.653 390.028 317.835 389.992  c
318.018 389.955 318.184 389.885 318.335 389.781  c
318.487 389.677 318.614 389.531 318.718 389.343  c
318.953 389.343 l
h
320.187 391.171 m
320.187 390.937 l
320.739 390.937 321.252 390.812 321.726 390.562  c
322.200 390.312 322.658 389.877 323.101 389.257  c
323.544 388.638 323.849 387.958 324.015 387.218  c
323.349 387.645 322.750 387.859 322.218 387.859  c
321.614 387.859 321.096 387.627 320.664 387.164  c
320.231 386.700 320.015 386.078 320.015 385.296  c
320.015 384.546 320.229 383.875 320.656 383.281  c
321.177 382.572 321.859 382.218 322.703 382.218  c
323.411 382.218 324.015 382.510 324.515 383.093  c
325.130 383.812 325.437 384.703 325.437 385.765  c
325.437 386.724 325.203 387.617 324.734 388.445  c
324.265 389.273 323.614 389.958 322.781 390.500  c
322.093 390.947 321.349 391.171 320.546 391.171  c
320.187 391.171 l
h
324.125 386.750 m
324.197 386.197 324.234 385.760 324.234 385.437  c
324.234 385.020 324.164 384.575 324.023 384.101  c
323.882 383.627 323.684 383.263 323.429 383.007  c
323.174 382.752 322.885 382.625 322.562 382.625  c
322.187 382.625 321.856 382.794 321.570 383.132  c
321.283 383.471 321.140 383.974 321.140 384.640  c
321.140 385.536 321.328 386.234 321.703 386.734  c
321.984 387.099 322.322 387.281 322.718 387.281  c
322.916 387.281 323.148 387.234 323.414 387.140  c
323.679 387.046 323.916 386.916 324.125 386.750  c
h
326.468 386.750 m
326.468 385.770 326.617 384.924 326.914 384.210  c
327.210 383.497 327.604 382.968 328.093 382.625  c
328.479 382.354 328.875 382.218 329.281 382.218  c
329.937 382.218 330.526 382.552 331.046 383.218  c
331.703 384.052 332.031 385.182 332.031 386.609  c
332.031 387.609 331.888 388.458 331.601 389.156  c
331.315 389.854 330.947 390.362 330.500 390.679  c
330.052 390.997 329.625 391.156 329.218 391.156  c
328.395 391.156 327.708 390.671 327.156 389.703  c
326.697 388.880 326.468 387.895 326.468 386.750  c
h
327.718 386.906 m
327.718 388.093 327.864 389.062 328.156 389.812  c
328.395 390.437 328.755 390.750 329.234 390.750  c
329.463 390.750 329.700 390.648 329.945 390.445  c
330.190 390.242 330.375 389.895 330.500 389.406  c
330.697 388.687 330.796 387.661 330.796 386.328  c
330.796 385.349 330.692 384.531 330.484 383.875  c
330.338 383.385 330.140 383.041 329.890 382.843  c
329.724 382.708 329.515 382.640 329.265 382.640  c
328.984 382.640 328.729 382.765 328.500 383.015  c
328.197 383.369 327.992 383.924 327.882 384.679  c
327.773 385.434 327.718 386.177 327.718 386.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
379.978 368.000 m
379.978 372.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
375.656 384.031 m
375.906 383.447 376.218 383.000 376.593 382.687  c
376.968 382.375 377.432 382.218 377.984 382.218  c
378.682 382.218 379.213 382.442 379.578 382.890  c
379.859 383.224 380.000 383.578 380.000 383.953  c
380.000 384.588 379.604 385.239 378.812 385.906  c
379.343 386.114 379.744 386.411 380.015 386.796  c
380.286 387.182 380.421 387.635 380.421 388.156  c
380.421 388.895 380.182 389.536 379.703 390.078  c
379.088 390.796 378.197 391.156 377.031 391.156  c
376.447 391.156 376.052 391.083 375.843 390.937  c
375.635 390.791 375.531 390.635 375.531 390.468  c
375.531 390.343 375.580 390.237 375.679 390.148  c
375.778 390.059 375.895 390.015 376.031 390.015  c
376.135 390.015 376.244 390.031 376.359 390.062  c
376.432 390.083 376.596 390.158 376.851 390.289  c
377.106 390.419 377.281 390.500 377.375 390.531  c
377.531 390.572 377.697 390.593 377.875 390.593  c
378.302 390.593 378.677 390.427 379.000 390.093  c
379.322 389.760 379.484 389.364 379.484 388.906  c
379.484 388.572 379.411 388.250 379.265 387.937  c
379.151 387.697 379.026 387.515 378.890 387.390  c
378.713 387.224 378.466 387.072 378.148 386.937  c
377.830 386.802 377.505 386.734 377.171 386.734  c
376.968 386.734 l
376.968 386.531 l
377.302 386.489 377.638 386.369 377.976 386.171  c
378.315 385.974 378.559 385.737 378.710 385.460  c
378.862 385.184 378.937 384.875 378.937 384.531  c
378.937 384.104 378.802 383.755 378.531 383.484  c
378.260 383.213 377.921 383.078 377.515 383.078  c
376.859 383.078 376.312 383.427 375.875 384.125  c
375.656 384.031 l
h
381.968 386.750 m
381.968 385.770 382.117 384.924 382.414 384.210  c
382.710 383.497 383.104 382.968 383.593 382.625  c
383.979 382.354 384.375 382.218 384.781 382.218  c
385.437 382.218 386.026 382.552 386.546 383.218  c
387.203 384.052 387.531 385.182 387.531 386.609  c
387.531 387.609 387.388 388.458 387.101 389.156  c
386.815 389.854 386.447 390.362 386.000 390.679  c
385.552 390.997 385.125 391.156 384.718 391.156  c
383.895 391.156 383.208 390.671 382.656 389.703  c
382.197 388.880 381.968 387.895 381.968 386.750  c
h
383.218 386.906 m
383.218 388.093 383.364 389.062 383.656 389.812  c
383.895 390.437 384.255 390.750 384.734 390.750  c
384.963 390.750 385.200 390.648 385.445 390.445  c
385.690 390.242 385.875 389.895 386.000 389.406  c
386.197 388.687 386.296 387.661 386.296 386.328  c
386.296 385.349 386.192 384.531 385.984 383.875  c
385.838 383.385 385.640 383.041 385.390 382.843  c
385.224 382.708 385.015 382.640 384.765 382.640  c
384.484 382.640 384.229 382.765 384.000 383.015  c
383.697 383.369 383.492 383.924 383.382 384.679  c
383.273 385.434 383.218 386.177 383.218 386.906  c
h
388.468 386.750 m
388.468 385.770 388.617 384.924 388.914 384.210  c
389.210 383.497 389.604 382.968 390.093 382.625  c
390.479 382.354 390.875 382.218 391.281 382.218  c
391.937 382.218 392.526 382.552 393.046 383.218  c
393.703 384.052 394.031 385.182 394.031 386.609  c
394.031 387.609 393.888 388.458 393.601 389.156  c
393.315 389.854 392.947 390.362 392.500 390.679  c
392.052 390.997 391.625 391.156 391.218 391.156  c
390.395 391.156 389.708 390.671 389.156 389.703  c
388.697 388.880 388.468 387.895 388.468 386.750  c
h
389.718 386.906 m
389.718 388.093 389.864 389.062 390.156 389.812  c
390.395 390.437 390.755 390.750 391.234 390.750  c
391.463 390.750 391.700 390.648 391.945 390.445  c
392.190 390.242 392.375 389.895 392.500 389.406  c
392.697 388.687 392.796 387.661 392.796 386.328  c
392.796 385.349 392.692 384.531 392.484 383.875  c
392.338 383.385 392.140 383.041 391.890 382.843  c
391.724 382.708 391.515 382.640 391.265 382.640  c
390.984 382.640 390.729 382.765 390.500 383.015  c
390.197 383.369 389.992 383.924 389.882 384.679  c
389.773 385.434 389.718 386.177 389.718 386.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
1.00000 w
2 J
0 j
q
0.500000 w
0 J
1 j
newpath
64.0000 26.9630 m
62.0000 26.9630 l
S
newpath
64.0000 44.9123 m
62.0000 44.9123 l
S
newpath
64.0000 62.8616 m
62.0000 62.8616 l
S
newpath
64.0000 80.8109 m
62.0000 80.8109 l
S
newpath
64.0000 116.709 m
62.0000 116.709 l
S
newpath
64.0000 134.658 m
62.0000 134.658 l
S
newpath
64.0000 152.608 m
62.0000 152.608 l
S
newpath
64.0000 170.557 m
62.0000 170.557 l
S
newpath
64.0000 206.456 m
62.0000 206.456 l
S
newpath
64.0000 224.405 m
62.0000 224.405 l
S
newpath
64.0000 242.354 m
62.0000 242.354 l
S
newpath
64.0000 260.304 m
62.0000 260.304 l
S
newpath
64.0000 296.202 m
62.0000 296.202 l
S
newpath
64.0000 314.152 m
62.0000 314.152 l
S
newpath
64.0000 332.101 m
62.0000 332.101 l
S
newpath
64.0000 350.050 m
62.0000 350.050 l
S
newpath
64.0000 368.000 m
64.0000 9.01370 l
S
Q
0.500000 w
0 J
1 j
q
q
newpath
64.0000 368.000 m
60.0000 368.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
58.4687 373.750 m
58.4687 372.770 58.6171 371.924 58.9140 371.210  c
59.2109 370.497 59.6041 369.968 60.0937 369.625  c
60.4791 369.354 60.8750 369.218 61.2812 369.218  c
61.9375 369.218 62.5260 369.552 63.0468 370.218  c
63.7031 371.052 64.0312 372.182 64.0312 373.609  c
64.0312 374.609 63.8880 375.458 63.6015 376.156  c
63.3151 376.854 62.9479 377.362 62.5000 377.679  c
62.0520 377.997 61.6250 378.156 61.2187 378.156  c
60.3958 378.156 59.7083 377.671 59.1562 376.703  c
58.6979 375.880 58.4687 374.895 58.4687 373.750  c
h
59.7187 373.906 m
59.7187 375.093 59.8645 376.062 60.1562 376.812  c
60.3958 377.437 60.7552 377.750 61.2343 377.750  c
61.4635 377.750 61.7005 377.648 61.9453 377.445  c
62.1901 377.242 62.3750 376.895 62.5000 376.406  c
62.6979 375.687 62.7968 374.661 62.7968 373.328  c
62.7968 372.349 62.6927 371.531 62.4843 370.875  c
62.3385 370.385 62.1406 370.041 61.8906 369.843  c
61.7239 369.708 61.5156 369.640 61.2656 369.640  c
60.9843 369.640 60.7291 369.765 60.5000 370.015  c
60.1979 370.369 59.9921 370.924 59.8828 371.679  c
59.7734 372.434 59.7187 373.177 59.7187 373.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
64.0000 278.253 m
60.0000 278.253 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
17.6406 280.390 m
17.1406 281.468 l
14.5625 281.468 l
14.0000 282.625 l
15.1145 282.791 16.0000 283.208 16.6562 283.875  c
17.2187 284.447 17.5000 285.125 17.5000 285.906  c
17.5000 286.364 17.4088 286.786 17.2265 287.171  c
17.0442 287.557 16.8125 287.885 16.5312 288.156  c
16.2500 288.427 15.9375 288.640 15.5937 288.796  c
15.1145 289.036 14.6145 289.156 14.0937 289.156  c
13.5833 289.156 13.2109 289.067 12.9765 288.890  c
12.7421 288.713 12.6250 288.520 12.6250 288.312  c
12.6250 288.187 12.6744 288.080 12.7734 287.992  c
12.8724 287.903 12.9947 287.859 13.1406 287.859  c
13.2447 287.859 13.3385 287.875 13.4218 287.906  c
13.5052 287.937 13.6458 288.026 13.8437 288.171  c
14.1666 288.390 14.4895 288.500 14.8125 288.500  c
15.3125 288.500 15.7474 288.312 16.1171 287.937  c
16.4869 287.562 16.6718 287.104 16.6718 286.562  c
16.6718 286.041 16.5052 285.557 16.1718 285.109  c
15.8385 284.661 15.3802 284.312 14.7968 284.062  c
14.3281 283.875 13.6979 283.765 12.9062 283.734  c
14.5625 280.390 l
17.6406 280.390 l
h
20.1250 287.765 m
20.3229 287.765 20.4895 287.835 20.6250 287.976  c
20.7604 288.117 20.8281 288.281 20.8281 288.468  c
20.8281 288.666 20.7604 288.833 20.6250 288.968  c
20.4895 289.104 20.3229 289.171 20.1250 289.171  c
19.9270 289.171 19.7604 289.104 19.6250 288.968  c
19.4895 288.833 19.4218 288.666 19.4218 288.468  c
19.4218 288.270 19.4895 288.104 19.6250 287.968  c
19.7604 287.833 19.9270 287.765 20.1250 287.765  c
h
f
newpath
31.0937 287.343 m
30.3906 288.031 l
28.1406 285.796 l
25.9062 288.031 l
25.2031 287.328 l
27.4531 285.093 l
25.2031 282.875 l
25.9062 282.171 l
28.1406 284.390 l
30.3906 282.156 l
31.0937 282.859 l
28.8437 285.093 l
31.0937 287.343 l
h
f
newpath
36.5312 281.234 m
38.6250 280.218 l
38.8281 280.218 l
38.8281 287.484 l
38.8281 287.963 38.8489 288.263 38.8906 288.382  c
38.9322 288.502 39.0156 288.593 39.1406 288.656  c
39.2656 288.718 39.5208 288.755 39.9062 288.765  c
39.9062 289.000 l
36.6718 289.000 l
36.6718 288.765 l
37.0781 288.755 37.3411 288.718 37.4609 288.656  c
37.5807 288.593 37.6640 288.510 37.7109 288.406  c
37.7578 288.302 37.7812 287.994 37.7812 287.484  c
37.7812 282.843 l
37.7812 282.208 37.7604 281.802 37.7187 281.625  c
37.6875 281.489 37.6328 281.390 37.5546 281.328  c
37.4765 281.265 37.3802 281.234 37.2656 281.234  c
37.1093 281.234 36.8958 281.302 36.6250 281.437  c
36.5312 281.234 l
h
41.9687 284.750 m
41.9687 283.770 42.1171 282.924 42.4140 282.210  c
42.7109 281.497 43.1041 280.968 43.5937 280.625  c
43.9791 280.354 44.3750 280.218 44.7812 280.218  c
45.4375 280.218 46.0260 280.552 46.5468 281.218  c
47.2031 282.052 47.5312 283.182 47.5312 284.609  c
47.5312 285.609 47.3880 286.458 47.1015 287.156  c
46.8151 287.854 46.4479 288.362 46.0000 288.679  c
45.5520 288.997 45.1250 289.156 44.7187 289.156  c
43.8958 289.156 43.2083 288.671 42.6562 287.703  c
42.1979 286.880 41.9687 285.895 41.9687 284.750  c
h
43.2187 284.906 m
43.2187 286.093 43.3645 287.062 43.6562 287.812  c
43.8958 288.437 44.2552 288.750 44.7343 288.750  c
44.9635 288.750 45.2005 288.648 45.4453 288.445  c
45.6901 288.242 45.8750 287.895 46.0000 287.406  c
46.1979 286.687 46.2968 285.661 46.2968 284.328  c
46.2968 283.349 46.1927 282.531 45.9843 281.875  c
45.8385 281.385 45.6406 281.041 45.3906 280.843  c
45.2239 280.708 45.0156 280.640 44.7656 280.640  c
44.4843 280.640 44.2291 280.765 44.0000 281.015  c
43.6979 281.369 43.4921 281.924 43.3828 282.679  c
43.2734 283.434 43.2187 284.177 43.2187 284.906  c
h
f
newpath
49.4062 281.390 m
51.9375 281.390 l
51.9375 282.125 l
49.4062 282.125 l
49.4062 281.390 l
h
f
newpath
58.4843 277.234 m
58.4843 277.421 l
58.0572 277.463 57.7057 277.549 57.4296 277.679  c
57.1536 277.809 56.8854 278.005 56.6250 278.265  c
56.3645 278.526 56.1458 278.820 55.9687 279.148  c
55.7916 279.476 55.6458 279.859 55.5312 280.296  c
56.0000 279.974 56.4687 279.812 56.9375 279.812  c
57.3958 279.812 57.7890 279.994 58.1171 280.359  c
58.4453 280.724 58.6093 281.192 58.6093 281.765  c
58.6093 282.328 58.4427 282.833 58.1093 283.281  c
57.7031 283.843 57.1718 284.125 56.5156 284.125  c
56.0572 284.125 55.6718 283.974 55.3593 283.671  c
54.7447 283.088 54.4375 282.333 54.4375 281.406  c
54.4375 280.812 54.5546 280.247 54.7890 279.710  c
55.0234 279.174 55.3619 278.700 55.8046 278.289  c
56.2474 277.877 56.6692 277.599 57.0703 277.453  c
57.4713 277.307 57.8489 277.234 58.2031 277.234  c
58.4843 277.234 l
h
55.4531 280.656 m
55.3906 281.093 55.3593 281.447 55.3593 281.718  c
55.3593 282.031 55.4166 282.372 55.5312 282.742  c
55.6458 283.112 55.8177 283.401 56.0468 283.609  c
56.2135 283.765 56.4166 283.843 56.6562 283.843  c
56.9375 283.843 57.1901 283.710 57.4140 283.445  c
57.6380 283.179 57.7500 282.796 57.7500 282.296  c
57.7500 281.744 57.6380 281.265 57.4140 280.859  c
57.1901 280.453 56.8750 280.250 56.4687 280.250  c
56.3437 280.250 56.2109 280.276 56.0703 280.328  c
55.9296 280.380 55.7239 280.489 55.4531 280.656  c
h
63.3437 277.375 m
62.9531 278.203 l
60.9687 278.203 l
60.5312 279.093 l
61.3958 279.218 62.0781 279.541 62.5781 280.062  c
63.0156 280.500 63.2343 281.020 63.2343 281.625  c
63.2343 281.968 63.1640 282.289 63.0234 282.585  c
62.8828 282.882 62.7057 283.135 62.4921 283.343  c
62.2786 283.552 62.0364 283.718 61.7656 283.843  c
61.3906 284.031 61.0052 284.125 60.6093 284.125  c
60.2135 284.125 59.9270 284.057 59.7500 283.921  c
59.5729 283.786 59.4843 283.635 59.4843 283.468  c
59.4843 283.375 59.5208 283.294 59.5937 283.226  c
59.6666 283.158 59.7604 283.125 59.8750 283.125  c
59.9583 283.125 60.0312 283.138 60.0937 283.164  c
60.1562 283.190 60.2656 283.255 60.4218 283.359  c
60.6614 283.526 60.9062 283.609 61.1562 283.609  c
61.5416 283.609 61.8776 283.466 62.1640 283.179  c
62.4505 282.893 62.5937 282.541 62.5937 282.125  c
62.5937 281.729 62.4661 281.356 62.2109 281.007  c
61.9557 280.658 61.6041 280.390 61.1562 280.203  c
60.7916 280.057 60.3072 279.974 59.7031 279.953  c
60.9687 277.375 l
63.3437 277.375 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
64.0000 188.506 m
60.0000 188.506 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
13.5312 191.234 m
15.6250 190.218 l
15.8281 190.218 l
15.8281 197.484 l
15.8281 197.963 15.8489 198.263 15.8906 198.382  c
15.9322 198.502 16.0156 198.593 16.1406 198.656  c
16.2656 198.718 16.5208 198.755 16.9062 198.765  c
16.9062 199.000 l
13.6718 199.000 l
13.6718 198.765 l
14.0781 198.755 14.3411 198.718 14.4609 198.656  c
14.5807 198.593 14.6640 198.510 14.7109 198.406  c
14.7578 198.302 14.7812 197.994 14.7812 197.484  c
14.7812 192.843 l
14.7812 192.208 14.7604 191.802 14.7187 191.625  c
14.6875 191.489 14.6328 191.390 14.5546 191.328  c
14.4765 191.265 14.3802 191.234 14.2656 191.234  c
14.1093 191.234 13.8958 191.302 13.6250 191.437  c
13.5312 191.234 l
h
20.1250 197.765 m
20.3229 197.765 20.4895 197.835 20.6250 197.976  c
20.7604 198.117 20.8281 198.281 20.8281 198.468  c
20.8281 198.666 20.7604 198.833 20.6250 198.968  c
20.4895 199.104 20.3229 199.171 20.1250 199.171  c
19.9270 199.171 19.7604 199.104 19.6250 198.968  c
19.4895 198.833 19.4218 198.666 19.4218 198.468  c
19.4218 198.270 19.4895 198.104 19.6250 197.968  c
19.7604 197.833 19.9270 197.765 20.1250 197.765  c
h
f
newpath
31.0937 197.343 m
30.3906 198.031 l
28.1406 195.796 l
25.9062 198.031 l
25.2031 197.328 l
27.4531 195.093 l
25.2031 192.875 l
25.9062 192.171 l
28.1406 194.390 l
30.3906 192.156 l
31.0937 192.859 l
28.8437 195.093 l
31.0937 197.343 l
h
f
newpath
36.5312 191.234 m
38.6250 190.218 l
38.8281 190.218 l
38.8281 197.484 l
38.8281 197.963 38.8489 198.263 38.8906 198.382  c
38.9322 198.502 39.0156 198.593 39.1406 198.656  c
39.2656 198.718 39.5208 198.755 39.9062 198.765  c
39.9062 199.000 l
36.6718 199.000 l
36.6718 198.765 l
37.0781 198.755 37.3411 198.718 37.4609 198.656  c
37.5807 198.593 37.6640 198.510 37.7109 198.406  c
37.7578 198.302 37.7812 197.994 37.7812 197.484  c
37.7812 192.843 l
37.7812 192.208 37.7604 191.802 37.7187 191.625  c
37.6875 191.489 37.6328 191.390 37.5546 191.328  c
37.4765 191.265 37.3802 191.234 37.2656 191.234  c
37.1093 191.234 36.8958 191.302 36.6250 191.437  c
36.5312 191.234 l
h
41.9687 194.750 m
41.9687 193.770 42.1171 192.924 42.4140 192.210  c
42.7109 191.497 43.1041 190.968 43.5937 190.625  c
43.9791 190.354 44.3750 190.218 44.7812 190.218  c
45.4375 190.218 46.0260 190.552 46.5468 191.218  c
47.2031 192.052 47.5312 193.182 47.5312 194.609  c
47.5312 195.609 47.3880 196.458 47.1015 197.156  c
46.8151 197.854 46.4479 198.362 46.0000 198.679  c
45.5520 198.997 45.1250 199.156 44.7187 199.156  c
43.8958 199.156 43.2083 198.671 42.6562 197.703  c
42.1979 196.880 41.9687 195.895 41.9687 194.750  c
h
43.2187 194.906 m
43.2187 196.093 43.3645 197.062 43.6562 197.812  c
43.8958 198.437 44.2552 198.750 44.7343 198.750  c
44.9635 198.750 45.2005 198.648 45.4453 198.445  c
45.6901 198.242 45.8750 197.895 46.0000 197.406  c
46.1979 196.687 46.2968 195.661 46.2968 194.328  c
46.2968 193.349 46.1927 192.531 45.9843 191.875  c
45.8385 191.385 45.6406 191.041 45.3906 190.843  c
45.2239 190.708 45.0156 190.640 44.7656 190.640  c
44.4843 190.640 44.2291 190.765 44.0000 191.015  c
43.6979 191.369 43.4921 191.924 43.3828 192.679  c
43.2734 193.434 43.2187 194.177 43.2187 194.906  c
h
f
newpath
49.4062 191.390 m
51.9375 191.390 l
51.9375 192.125 l
49.4062 192.125 l
49.4062 191.390 l
h
f
newpath
58.4843 187.234 m
58.4843 187.421 l
58.0572 187.463 57.7057 187.549 57.4296 187.679  c
57.1536 187.809 56.8854 188.005 56.6250 188.265  c
56.3645 188.526 56.1458 188.820 55.9687 189.148  c
55.7916 189.476 55.6458 189.859 55.5312 190.296  c
56.0000 189.974 56.4687 189.812 56.9375 189.812  c
57.3958 189.812 57.7890 189.994 58.1171 190.359  c
58.4453 190.724 58.6093 191.192 58.6093 191.765  c
58.6093 192.328 58.4427 192.833 58.1093 193.281  c
57.7031 193.843 57.1718 194.125 56.5156 194.125  c
56.0572 194.125 55.6718 193.974 55.3593 193.671  c
54.7447 193.088 54.4375 192.333 54.4375 191.406  c
54.4375 190.812 54.5546 190.247 54.7890 189.710  c
55.0234 189.174 55.3619 188.700 55.8046 188.289  c
56.2474 187.877 56.6692 187.599 57.0703 187.453  c
57.4713 187.307 57.8489 187.234 58.2031 187.234  c
58.4843 187.234 l
h
55.4531 190.656 m
55.3906 191.093 55.3593 191.447 55.3593 191.718  c
55.3593 192.031 55.4166 192.372 55.5312 192.742  c
55.6458 193.112 55.8177 193.401 56.0468 193.609  c
56.2135 193.765 56.4166 193.843 56.6562 193.843  c
56.9375 193.843 57.1901 193.710 57.4140 193.445  c
57.6380 193.179 57.7500 192.796 57.7500 192.296  c
57.7500 191.744 57.6380 191.265 57.4140 190.859  c
57.1901 190.453 56.8750 190.250 56.4687 190.250  c
56.3437 190.250 56.2109 190.276 56.0703 190.328  c
55.9296 190.380 55.7239 190.489 55.4531 190.656  c
h
63.6562 191.562 m
63.6562 192.250 l
62.7656 192.250 l
62.7656 194.000 l
61.9531 194.000 l
61.9531 192.250 l
59.1562 192.250 l
59.1562 191.625 l
62.2343 187.234 l
62.7656 187.234 l
62.7656 191.562 l
63.6562 191.562 l
h
61.9531 191.562 m
61.9531 188.265 l
59.6406 191.562 l
61.9531 191.562 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
64.0000 98.7602 m
60.0000 98.7602 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
7.53125 101.234 m
9.62500 100.218 l
9.82812 100.218 l
9.82812 107.484 l
9.82812 107.963 9.84895 108.263 9.89062 108.382  c
9.93229 108.502 10.0156 108.593 10.1406 108.656  c
10.2656 108.718 10.5208 108.755 10.9062 108.765  c
10.9062 109.000 l
7.67187 109.000 l
7.67187 108.765 l
8.07812 108.755 8.34114 108.718 8.46093 108.656  c
8.58072 108.593 8.66406 108.510 8.71093 108.406  c
8.75781 108.302 8.78125 107.994 8.78125 107.484  c
8.78125 102.843 l
8.78125 102.208 8.76041 101.802 8.71875 101.625  c
8.68750 101.489 8.63281 101.390 8.55468 101.328  c
8.47656 101.265 8.38020 101.234 8.26562 101.234  c
8.10937 101.234 7.89583 101.302 7.62500 101.437  c
7.53125 101.234 l
h
14.1250 107.765 m
14.3229 107.765 14.4895 107.835 14.6250 107.976  c
14.7604 108.117 14.8281 108.281 14.8281 108.468  c
14.8281 108.666 14.7604 108.833 14.6250 108.968  c
14.4895 109.104 14.3229 109.171 14.1250 109.171  c
13.9270 109.171 13.7604 109.104 13.6250 108.968  c
13.4895 108.833 13.4218 108.666 13.4218 108.468  c
13.4218 108.270 13.4895 108.104 13.6250 107.968  c
13.7604 107.833 13.9270 107.765 14.1250 107.765  c
h
21.3906 100.390 m
20.8906 101.468 l
18.3125 101.468 l
17.7500 102.625 l
18.8645 102.791 19.7500 103.208 20.4062 103.875  c
20.9687 104.447 21.2500 105.125 21.2500 105.906  c
21.2500 106.364 21.1588 106.786 20.9765 107.171  c
20.7942 107.557 20.5625 107.885 20.2812 108.156  c
20.0000 108.427 19.6875 108.640 19.3437 108.796  c
18.8645 109.036 18.3645 109.156 17.8437 109.156  c
17.3333 109.156 16.9609 109.067 16.7265 108.890  c
16.4921 108.713 16.3750 108.520 16.3750 108.312  c
16.3750 108.187 16.4244 108.080 16.5234 107.992  c
16.6224 107.903 16.7447 107.859 16.8906 107.859  c
16.9947 107.859 17.0885 107.875 17.1718 107.906  c
17.2552 107.937 17.3958 108.026 17.5937 108.171  c
17.9166 108.390 18.2395 108.500 18.5625 108.500  c
19.0625 108.500 19.4974 108.312 19.8671 107.937  c
20.2369 107.562 20.4218 107.104 20.4218 106.562  c
20.4218 106.041 20.2552 105.557 19.9218 105.109  c
19.5885 104.661 19.1302 104.312 18.5468 104.062  c
18.0781 103.875 17.4479 103.765 16.6562 103.734  c
18.3125 100.390 l
21.3906 100.390 l
h
f
newpath
31.0937 107.343 m
30.3906 108.031 l
28.1406 105.796 l
25.9062 108.031 l
25.2031 107.328 l
27.4531 105.093 l
25.2031 102.875 l
25.9062 102.171 l
28.1406 104.390 l
30.3906 102.156 l
31.0937 102.859 l
28.8437 105.093 l
31.0937 107.343 l
h
f
newpath
36.5312 101.234 m
38.6250 100.218 l
38.8281 100.218 l
38.8281 107.484 l
38.8281 107.963 38.8489 108.263 38.8906 108.382  c
38.9322 108.502 39.0156 108.593 39.1406 108.656  c
39.2656 108.718 39.5208 108.755 39.9062 108.765  c
39.9062 109.000 l
36.6718 109.000 l
36.6718 108.765 l
37.0781 108.755 37.3411 108.718 37.4609 108.656  c
37.5807 108.593 37.6640 108.510 37.7109 108.406  c
37.7578 108.302 37.7812 107.994 37.7812 107.484  c
37.7812 102.843 l
37.7812 102.208 37.7604 101.802 37.7187 101.625  c
37.6875 101.489 37.6328 101.390 37.5546 101.328  c
37.4765 101.265 37.3802 101.234 37.2656 101.234  c
37.1093 101.234 36.8958 101.302 36.6250 101.437  c
36.5312 101.234 l
h
41.9687 104.750 m
41.9687 103.770 42.1171 102.924 42.4140 102.210  c
42.7109 101.497 43.1041 100.968 43.5937 100.625  c
43.9791 100.354 44.3750 100.218 44.7812 100.218  c
45.4375 100.218 46.0260 100.552 46.5468 101.218  c
47.2031 102.052 47.5312 103.182 47.5312 104.609  c
47.5312 105.609 47.3880 106.458 47.1015 107.156  c
46.8151 107.854 46.4479 108.362 46.0000 108.679  c
45.5520 108.997 45.1250 109.156 44.7187 109.156  c
43.8958 109.156 43.2083 108.671 42.6562 107.703  c
42.1979 106.880 41.9687 105.895 41.9687 104.750  c
h
43.2187 104.906 m
43.2187 106.093 43.3645 107.062 43.6562 107.812  c
43.8958 108.437 44.2552 108.750 44.7343 108.750  c
44.9635 108.750 45.2005 108.648 45.4453 108.445  c
45.6901 108.242 45.8750 107.895 46.0000 107.406  c
46.1979 106.687 46.2968 105.661 46.2968 104.328  c
46.2968 103.349 46.1927 102.531 45.9843 101.875  c
45.8385 101.385 45.6406 101.041 45.3906 100.843  c
45.2239 100.708 45.0156 100.640 44.7656 100.640  c
44.4843 100.640 44.2291 100.765 44.0000 101.015  c
43.6979 101.369 43.4921 101.924 43.3828 102.679  c
43.2734 103.434 43.2187 104.177 43.2187 104.906  c
h
f
newpath
49.4062 101.390 m
51.9375 101.390 l
51.9375 102.125 l
49.4062 102.125 l
49.4062 101.390 l
h
f
newpath
58.4843 97.2343 m
58.4843 97.4218 l
58.0572 97.4635 57.7057 97.5494 57.4296 97.6796  c
57.1536 97.8099 56.8854 98.0052 56.6250 98.2656  c
56.3645 98.5260 56.1458 98.8203 55.9687 99.1484  c
55.7916 99.4765 55.6458 99.8593 55.5312 100.296  c
56.0000 99.9739 56.4687 99.8125 56.9375 99.8125  c
57.3958 99.8125 57.7890 99.9947 58.1171 100.359  c
58.4453 100.724 58.6093 101.192 58.6093 101.765  c
58.6093 102.328 58.4427 102.833 58.1093 103.281  c
57.7031 103.843 57.1718 104.125 56.5156 104.125  c
56.0572 104.125 55.6718 103.974 55.3593 103.671  c
54.7447 103.088 54.4375 102.333 54.4375 101.406  c
54.4375 100.812 54.5546 100.247 54.7890 99.7109  c
55.0234 99.1744 55.3619 98.7005 55.8046 98.2890  c
56.2474 97.8776 56.6692 97.5989 57.0703 97.4531  c
57.4713 97.3072 57.8489 97.2343 58.2031 97.2343  c
58.4843 97.2343 l
h
55.4531 100.656 m
55.3906 101.093 55.3593 101.447 55.3593 101.718  c
55.3593 102.031 55.4166 102.372 55.5312 102.742  c
55.6458 103.112 55.8177 103.401 56.0468 103.609  c
56.2135 103.765 56.4166 103.843 56.6562 103.843  c
56.9375 103.843 57.1901 103.710 57.4140 103.445  c
57.6380 103.179 57.7500 102.796 57.7500 102.296  c
57.7500 101.744 57.6380 101.265 57.4140 100.859  c
57.1901 100.453 56.8750 100.250 56.4687 100.250  c
56.3437 100.250 56.2109 100.276 56.0703 100.328  c
55.9296 100.380 55.7239 100.489 55.4531 100.656  c
h
63.6562 101.562 m
63.6562 102.250 l
62.7656 102.250 l
62.7656 104.000 l
61.9531 104.000 l
61.9531 102.250 l
59.1562 102.250 l
59.1562 101.625 l
62.2343 97.2343 l
62.7656 97.2343 l
62.7656 101.562 l
63.6562 101.562 l
h
61.9531 101.562 m
61.9531 98.2656 l
59.6406 101.562 l
61.9531 101.562 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
64.0000 9.01370 m
60.0000 9.01370 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
17.9531 18.3437 m
17.3593 20.0000 l
12.2812 20.0000 l
12.2812 19.7656 l
13.7708 18.4010 14.8203 17.2864 15.4296 16.4218  c
16.0390 15.5572 16.3437 14.7708 16.3437 14.0625  c
16.3437 13.5104 16.1770 13.0599 15.8437 12.7109  c
15.5104 12.3619 15.1093 12.1875 14.6406 12.1875  c
14.2239 12.1875 13.8463 12.3099 13.5078 12.5546  c
13.1692 12.7994 12.9218 13.1614 12.7656 13.6406  c
12.5312 13.6406 l
12.6354 12.8593 12.9062 12.2604 13.3437 11.8437  c
13.7812 11.4270 14.3281 11.2187 14.9843 11.2187  c
15.6822 11.2187 16.2656 11.4427 16.7343 11.8906  c
17.2031 12.3385 17.4375 12.8645 17.4375 13.4687  c
17.4375 13.9062 17.3333 14.3437 17.1250 14.7812  c
16.8125 15.4687 16.3072 16.1927 15.6093 16.9531  c
14.5572 18.1093 13.8958 18.8072 13.6250 19.0468  c
15.8750 19.0468 l
16.3333 19.0468 16.6536 19.0286 16.8359 18.9921  c
17.0182 18.9557 17.1849 18.8854 17.3359 18.7812  c
17.4869 18.6770 17.6145 18.5312 17.7187 18.3437  c
17.9531 18.3437 l
h
20.1250 18.7656 m
20.3229 18.7656 20.4895 18.8359 20.6250 18.9765  c
20.7604 19.1171 20.8281 19.2812 20.8281 19.4687  c
20.8281 19.6666 20.7604 19.8333 20.6250 19.9687  c
20.4895 20.1041 20.3229 20.1718 20.1250 20.1718  c
19.9270 20.1718 19.7604 20.1041 19.6250 19.9687  c
19.4895 19.8333 19.4218 19.6666 19.4218 19.4687  c
19.4218 19.2708 19.4895 19.1041 19.6250 18.9687  c
19.7604 18.8333 19.9270 18.7656 20.1250 18.7656  c
h
f
newpath
31.0937 18.3437 m
30.3906 19.0312 l
28.1406 16.7968 l
25.9062 19.0312 l
25.2031 18.3281 l
27.4531 16.0937 l
25.2031 13.8750 l
25.9062 13.1718 l
28.1406 15.3906 l
30.3906 13.1562 l
31.0937 13.8593 l
28.8437 16.0937 l
31.0937 18.3437 l
h
f
newpath
36.5312 12.2343 m
38.6250 11.2187 l
38.8281 11.2187 l
38.8281 18.4843 l
38.8281 18.9635 38.8489 19.2630 38.8906 19.3828  c
38.9322 19.5026 39.0156 19.5937 39.1406 19.6562  c
39.2656 19.7187 39.5208 19.7552 39.9062 19.7656  c
39.9062 20.0000 l
36.6718 20.0000 l
36.6718 19.7656 l
37.0781 19.7552 37.3411 19.7187 37.4609 19.6562  c
37.5807 19.5937 37.6640 19.5104 37.7109 19.4062  c
37.7578 19.3020 37.7812 18.9947 37.7812 18.4843  c
37.7812 13.8437 l
37.7812 13.2083 37.7604 12.8020 37.7187 12.6250  c
37.6875 12.4895 37.6328 12.3906 37.5546 12.3281  c
37.4765 12.2656 37.3802 12.2343 37.2656 12.2343  c
37.1093 12.2343 36.8958 12.3020 36.6250 12.4375  c
36.5312 12.2343 l
h
41.9687 15.7500 m
41.9687 14.7708 42.1171 13.9244 42.4140 13.2109  c
42.7109 12.4974 43.1041 11.9687 43.5937 11.6250  c
43.9791 11.3541 44.3750 11.2187 44.7812 11.2187  c
45.4375 11.2187 46.0260 11.5520 46.5468 12.2187  c
47.2031 13.0520 47.5312 14.1822 47.5312 15.6093  c
47.5312 16.6093 47.3880 17.4583 47.1015 18.1562  c
46.8151 18.8541 46.4479 19.3619 46.0000 19.6796  c
45.5520 19.9974 45.1250 20.1562 44.7187 20.1562  c
43.8958 20.1562 43.2083 19.6718 42.6562 18.7031  c
42.1979 17.8802 41.9687 16.8958 41.9687 15.7500  c
h
43.2187 15.9062 m
43.2187 17.0937 43.3645 18.0625 43.6562 18.8125  c
43.8958 19.4375 44.2552 19.7500 44.7343 19.7500  c
44.9635 19.7500 45.2005 19.6484 45.4453 19.4453  c
45.6901 19.2421 45.8750 18.8958 46.0000 18.4062  c
46.1979 17.6875 46.2968 16.6614 46.2968 15.3281  c
46.2968 14.3489 46.1927 13.5312 45.9843 12.8750  c
45.8385 12.3854 45.6406 12.0416 45.3906 11.8437  c
45.2239 11.7083 45.0156 11.6406 44.7656 11.6406  c
44.4843 11.6406 44.2291 11.7656 44.0000 12.0156  c
43.6979 12.3697 43.4921 12.9244 43.3828 13.6796  c
43.2734 14.4349 43.2187 15.1770 43.2187 15.9062  c
h
f
newpath
49.4062 12.3906 m
51.9375 12.3906 l
51.9375 13.1250 l
49.4062 13.1250 l
49.4062 12.3906 l
h
f
newpath
58.4843 8.23437 m
58.4843 8.42187 l
58.0572 8.46354 57.7057 8.54947 57.4296 8.67968  c
57.1536 8.80989 56.8854 9.00520 56.6250 9.26562  c
56.3645 9.52604 56.1458 9.82031 55.9687 10.1484  c
55.7916 10.4765 55.6458 10.8593 55.5312 11.2968  c
56.0000 10.9739 56.4687 10.8125 56.9375 10.8125  c
57.3958 10.8125 57.7890 10.9947 58.1171 11.3593  c
58.4453 11.7239 58.6093 12.1927 58.6093 12.7656  c
58.6093 13.3281 58.4427 13.8333 58.1093 14.2812  c
57.7031 14.8437 57.1718 15.1250 56.5156 15.1250  c
56.0572 15.1250 55.6718 14.9739 55.3593 14.6718  c
54.7447 14.0885 54.4375 13.3333 54.4375 12.4062  c
54.4375 11.8125 54.5546 11.2474 54.7890 10.7109  c
55.0234 10.1744 55.3619 9.70052 55.8046 9.28906  c
56.2474 8.87760 56.6692 8.59895 57.0703 8.45312  c
57.4713 8.30729 57.8489 8.23437 58.2031 8.23437  c
58.4843 8.23437 l
h
55.4531 11.6562 m
55.3906 12.0937 55.3593 12.4479 55.3593 12.7187  c
55.3593 13.0312 55.4166 13.3724 55.5312 13.7421  c
55.6458 14.1119 55.8177 14.4010 56.0468 14.6093  c
56.2135 14.7656 56.4166 14.8437 56.6562 14.8437  c
56.9375 14.8437 57.1901 14.7109 57.4140 14.4453  c
57.6380 14.1796 57.7500 13.7968 57.7500 13.2968  c
57.7500 12.7447 57.6380 12.2656 57.4140 11.8593  c
57.1901 11.4531 56.8750 11.2500 56.4687 11.2500  c
56.3437 11.2500 56.2109 11.2760 56.0703 11.3281  c
55.9296 11.3802 55.7239 11.4895 55.4531 11.6562  c
h
63.6562 12.5625 m
63.6562 13.2500 l
62.7656 13.2500 l
62.7656 15.0000 l
61.9531 15.0000 l
61.9531 13.2500 l
59.1562 13.2500 l
59.1562 12.6250 l
62.2343 8.23437 l
62.7656 8.23437 l
62.7656 12.5625 l
63.6562 12.5625 l
h
61.9531 12.5625 m
61.9531 9.26562 l
59.6406 12.5625 l
61.9531 12.5625 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
1.00000 w
2 J
0 j
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
